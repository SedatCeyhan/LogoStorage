%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: snow136(mar50)_ver-04.eps
%%Creator: Adobe Illustrator(R) 19.2
%%For: Sergey Gerasimov
%%CreationDate: 8/24/2018
%%BoundingBox: 0 0 661 837
%%HiResBoundingBox: 0 0 660.6565 836.3910
%%CropBox: 0 0 660.6565 836.3910
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.2.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.2.1 x147 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=100 RasterRes=1200 GradRes=300 Text=0 Stroke=0 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c111 79.158366, 2015/09/25-01:12:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2018-08-24T17:31:17+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-08-24T17:31:17+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-08-24T17:31:17+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>204</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADMAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A5b6edIyd6eKp1/gzXP8A&#xA;Cn+KfSX9EfWPqvqc15+pT+Stadsr8UcXD1VJfTyxV31eT0zJxPpghS9DSp3Ar47YLVwgcoXCkopA&#xA;ZqbAnoK/Riq308Komw0nUdRn+r6fazXk4Uv6NvG0r8V6txQE0GRMgOaob08kq70H4c+J4VpyptXr&#xA;SuBVew0u6vpjDbKGdVLkEgbD5/PAZUqG9PJK2IxUV6d8VbMIFSCDQ0HXf3wKt9PCrvTxV3p4q708&#xA;Vd6eKt+g3HlxPGtOVNq+FcCtenhV3p4q708VVXsblIEneJlhkNEkIPEkeBwWql6eFXvXH/rFSn+X&#xA;/wB3XNb/AMifx3I6vD/TzYqiYNJv57Se8hgZ7a2p68o6Ly6VwGQBpVHlN6Poc29Hlz9Kp48qU5ce&#xA;lad8NKs9PFUfHrGqx6LLoiXBGlzTrdSW1FoZlXiH5U5D4e1aZHgF31VRjvL2OxlsI5CLWd1eWIAf&#xA;EyfZNaVw0LtVCS3eORo3ADKaMAQdx7jCqY+X/MOueXb5r7RrprO6eNoWkVVasbkEqQ4YdVB6ZGeM&#xA;SFFUtZWZizEliakncknJKv8AUn+rm35n0C3qGPtypSv3Y0qxVZTVSVPSo264q16eKro1KyKwUMQQ&#xA;QpFQaHoRiqvqJmmvZZJYRBKT8cKqVCkCn2T8t8EeSo3QNCS/ea4uSyabZBXvpIyokVGqAUDVr08M&#xA;jOVe9UtuIYFuJRbszwB2ETMKMUr8JI8aZMKp+niqY22qSW+kXWm/VoXS7Kt67pWVeJH2Gr/k5Exs&#xA;2qXenklVhPci0a0D0t2f1GjoN2pSteuNb2qpYaVc30jxwceUaF25GmwwGVKhfTwq70xT374qiHur&#xA;2a1js2kLwRHlHHQbHfvSvfBQ5qo0PApQUJqTQV+/Cr3Pj/1i3x/yv+7rmu/5E/juV4p6ebFVaK4u&#xA;4oJbeKZ0gnp60SsQr8dxyA2NMFBCP17Q7LTfqn1W/jvhcRepJ6dPgPgaFsjCRPMUqVenk0plqGkR&#xA;w6faX6XEUpugfUgi6xMtNn3NC3Wm2QjLekIKCxubjkIIjJwHJuIqQMkTSVL08Kpg0WjjQ0KSSnVW&#xA;m/exED0hGAaEGla7+OR3vyQh7C5ezuVnWNJGUEcZBUbimEi1UGXkSxFCTWg2G+FLipIAIHwigoAP&#xA;vp1xVMdH1m40uK9jihilF7EYZDICSoNd1398hKF0hAQqVlRg3pkMCJP5aHrt4ZMpVLq6u7u6ku7i&#xA;QyXEtfUkNATUce3ttgAAFITPzZoOlaTfwxaVqB1SymgSZbswtACzV5KA3XjTqPl1GQxzMhuKKpL6&#xA;eWJVIbOW4lSG2jeaZ+kaKWYnc0UCpO2AmkNNbT0bkjUiPFqg0U16Hw3xtWUa5Z+Tr+x0S38rwTpq&#xA;voH9MGdjwaUKtSORIry5fZoKUymBmCeLl0Vjg0u/a3multpWtrZglxcKjGONmNFDuBxBPapy7iHJ&#xA;KhxZehptTbwPjTCrhA5VmCkqtORA2FelcVcYl4AgnnU1WmwG1DX78Va9PFUz8wPoE9+r6FazWll6&#xA;UYeK4cSN6oWkjAjsT/n2yEBKvUh67x/6xip/lf8Ad0zB/wCRP47lePW9oJmZTIkXFS1XNAadh7nN&#xA;gSqj6eFVyqysGXZlNQfcYFRF2bq8aW/uJFeWST94SVDFiK14im30YBQ2QjI9dvIdCn0RFje0mk5m&#xA;UqeexB2/4EdRXI8A4rVL7a4ubYuYJDGZF4vTuMmQCqNvbiTU4bOC306GFrC39OR7WMh5QpqZZiK1&#xA;bfrkQKvfmlRgi0b9FXXr/WP0rzj+pBOH1f09/V9Wvx8unHjhN35KgwhHQdRTcA/rwq16eFUVY3L2&#xA;byMsaOZEKESCtA3cZEi0L9TkW4kidbQWq+mAqqKBhU/ENhjEUqECMw47mlAvfv0H34UtNCykqykM&#xA;OoOxxVHajq+qaja2NreXLzwadEYbSNgKRoT9ladeg65GMACSOqqUGkahNaS30Nuz2tuQJZQKqp67&#xA;4TIXSF2l3WoWV6LywqLiIM3JVDAKQQxK0IpQ4yAIoqj7W11vUdO1a8SZPQRvXvlYgM7OSxKgD29s&#xA;iSAQFQWm6XLdLcSRSCJrdOdSaE9fD5YZSpXW1/q8emXenW80q6dclJLy3WvpsYzVC49jiYi76pQX&#xA;pd6bZJUxuLbW9IthbTq9tBqsEVyIzSksBJMT99qg5EGMvghLxCCCagUFaHvvSgySUdrPlzWdFnjt&#xA;9VtHtJpYxLGklKlGJAOxPhkYTEuSrrrS9Li0ayvItRE+oXBkFzpwiZTAEaiFpCeLc1326YiRsitl&#xA;etcf+saOP+V/3c8wf+RH47leO+nmwQ2I13qCTT4aGlD77YqidMtLKe9jivbg2ts1ec4UvSgJGw8T&#xA;gkSBsqtpVtp31qeS6u1gW1jaa1DRPKtxLGQUhIX7HqfzHYYJE1sFR+t6fLfxW2txG1VtSd41022a&#xA;s0Zi+HlIlBTlStchA16e5UieB43ZHUq6mjKdiCMtVFaZqd/pkksllJ6bzRmJzQN8J37g+GRlEHmq&#xA;D9PJKua3dW4spVutCKHfG1Tbyr5S1LzNqv6M09okuPTeXlOxROKUruAxrv4ZXlyiAsqlU0LrKyOa&#xA;uh4Eghh8O2xGxG2WBVS2tPrM8UClYi2xdzRa7mp/VgJpVqCS2uQyEF4XqrDdaqdj7481X308t3dP&#xA;PKQXam6igoBQbYgUFUDCymhBB8D74VRdvqepW9jPYQzslpcGs0QAox6dSKitN6ZExBNqr6Fr2r6F&#xA;NcTaZKIZLqB7WYlVesUlCw+IGm6g1wTxiXNUtCMAQCQD1Hjk1a9PFU00nW77TbW8tIFRor5fTm5q&#xA;SwFCvw0I3o3euQlAEg9yrNV0uSA+qltNb2xIVUnFHDUqfhrXemGMrVAMHenJi3EcVqa0A6AZJU68&#xA;2yeUp7+FvLNrPa2awKs6XDcmMwJ5MKs/anfr0GV4hMD1Kl+p6pquqSxy6jdS3ckMaxRPKxYqi9FF&#xA;clGIjyVB+nklez8f+sb6f5X/AHcs1/8AyI/HcryZYYTC7M5EoI4JSoYHrv2pmehT9PCqJsbqaylM&#xA;sPEsylSGFQAf9rIkWqG9LJKq2rejOkvxDia1Q8W+g74Cq1i7u0j/ABu9SzNuanqcVdBbCWeOIuIx&#xA;IyqZG2VQTTkfYYkqmHmTQ4NH1ebT4L6HUY4gpF3bkGNuShqChYbVod8hjnxC6pWr7X9Zv9SXUry4&#xA;M16iLEspVBREXio4qAvT2wxxxAoclS4KwbkCQxruNuvXJK16eFXeniqpbR2/1mL6zy+r819b06c+&#xA;Ffi412rTpgPLZUz81ReWRrEg8tmZtL4JwM9eXOnxUrQ0r45DFxV6uapZJFF6UbK5aU1EikbKBstD&#xA;32yat2rJDcRyvGJVRgTGeh9u+JV12yT3MkqRiJXNRGvQYgUqNuF0L9C26wJINW5n6wx+xw+LpvTw&#xA;yI4r8lS0oTSvbpk1VLd5be4iuIjxlhdZI2oDRlNQaH3wEWqdec/MMnmLVhqMju0jwxrKrKqKJFFD&#xA;wC12+e+V4cfAKW0h9PLVd6eKu9PFXenir2Lj/wBY68f8r/u45rv+RH47k9Hk3p5sGKOd9LOkRwLb&#xA;MNREhZ7nl8JTf4aV+XbI0b8lQPp5JW/TxVr08VRN1BYLFbm1eR5WStyrgAK/gtOowC+qof0jStNv&#xA;HCrXp4q708VR8GizXAiFu8cjPGZGAJBWjU4tUdflkTOlQHp5JUdb6jJDpdzp4giZbllZpmWsi8ab&#xA;KfoyJjZtUEY9+lPbJKjbbletZ6fczpb2sTMEmZRRBIeTFiKE7+JyJ2shVt9ptzATIQ0lpzaKG7Ck&#xA;RyBCQCp+QxjK1dZy6dFd2slzZfWLeIg3UAlZPWFenICqbeGJBo0VW3VjOE+uLaSQWM7sLZ2DFKA/&#xA;YWQgBivfCD0vdUL6eFU38waho9/9S/RumLpvoQLFc8XL+rIOr7gUyvHGQuza2gtP0i91CR47SP1H&#xA;jQyOKgUVfmR45OUgOaoX08Kt+niqMmubc2K2sNqiGqvJcN8UpYChAbsp60yIBu1QXp5JXenir17j&#xA;/wBY+U/yv+7hmv8A+RH47k9HmkC2As5hMjG5NPRYdBmcbtihvTySp5pkXlI+XdQOoNONc5f6AEr6&#xA;fGgpXt1ryr26ZVLj4hX0qldhNFbTGSWBZ1KleDdAT33Bychaocpv0p7ZJXeniqNg1GaOOCJ4454I&#xA;H5iKQVDddm9t8iYqgyhdyQoHIk8R0GFWvTwq2oZTVSQelQaYq16eKuERYgAVJ2AHUnFW2i4mh6jr&#xA;8/DfFWvTxVOoZ/rnly5trrUVgGnmN7KyMZZpy7EMBIPs+mDXfxyoipWBzVJfTy1U3vfM2rXnl+00&#xA;GdkNhZP6kICgPWjAcm9g5ysYgJGXUrag9hpg0VLpbquoGQq1r4Lvv4+9cNniqtlS/wBPJqujaWIk&#xA;xuyEgqSpIqD1G2ClROkXi6fqVvetbRXawOHNvOOUb07MME42KVTv5lur24ulhS3WeR5BBEKRpzYn&#xA;ig7KK0GGIoUqrcy2UotIxafVvRULcyIxZpOlXoRQHAAd1XWiaKGu/rImK8G+pcaV5dueA8W1KgfT&#xA;yavWeP8AyAKn+V/3cM1//Ij8dzLo8v8ATzPYO9PFXenirvTxVEWMkNvMXmgE6lSAjdKnvuDgkLVD&#xA;+n7YVTLy9b6I2rwLrjyRaaeRmeMHkPhJX7IZqVp0GQyGXD6eahB3sVqt5OtmzPaCRxbu4o5j5HgW&#xA;9+PXJRut+aqPp4Vd6eKuEVa+2KovSr+50vUbfULXj9Ytm5x8xyWvTcZGcRIUVt2p391qOoXN9cUE&#xA;12xeYIOK1JBpTw2xjERFBbWTWKx20MwlVzLWsY6rTxwg7qoBSOncEffhVr08Vd6eKu9PFURp17ea&#xA;ddpeWcnpXEYYJJRWoHUo2zAj7LHBKIkKK2h/Twq7htTFXCMd9sVd6eKoiw024vrpLW3AMz14gkAb&#xA;Ak7n5YJSAFlVB4GR2RhRlJBHuNsNq9T4/wDICKf5X/Y/mB/yI/Hcy6PNPTzPYJ5r2neW4rbTTol1&#xA;LdXU8f8ApsTj7MlFoB8K7kkim/8AWrHKVniCTSAvNJvNLuvq+qWkkMpTkIn+E0YHiw9q5KMxIWCh&#xA;SjNiPq/OB24FvrNHpzBPwhdvhoMO6ocoKmgoOwySu9PFUTeXtxdxW0UoULax+lFxWh4+/jkREBVs&#xA;E11BBMkZpFcD05fhBBAPKlSMJAKqsWhapLpkupx2ztYQNwlnFOIbb6f2hkTMA11VT09lhvIpHj9V&#xA;QaFAKk122B74ZCwqy7tpobmWOeFoJVY8oXUoy13oVPTCDYVTMainGp23qKb/AH4Va9PFXeniqpDF&#xA;blJPVLBwv7oLShb3wG1U/Twq4IKioqO+KojUFsGvJDp6SpZmnpJOVaQbCvIqAOtcjG635qraXY6b&#xA;cfWvr159T9KB5Lf92ZPVlWnGPb7PLxwTJFULSECIWIJAJCipp2HTJoRFzYxQw28iXCTGdeTonWMg&#xA;/ZbIg2qkY4ipVFYtyqrEj7HutOv04VWenhVwUg1BoR0IxV3p4q9Q4/8AIDqf5X/Y9mv/AORH47mf&#xA;R5vwzYNbahkYMpKspqrDYgjvgVNdak8x6jFDq2q+rNDIBDBdOtEISvwrQAePz3yuAjH0xSbb8ual&#xA;pWnT3Emo6ampRywtHHG5pwc9G3B+/qO2OWEpDY0oKWx2oeGWTmqmOlEJ3avhlhKF+n2lvcXsMFxO&#xA;LWCRwslwylginq3EUrgkSBY3VbeWsUF3NDDKLiKN2SOdQQHUGgYA9K4xNhVHhklRceo6lFYS6fHc&#xA;SLZTNzltwTwZhTcj6BkTAXfVbQqhlYMpKspqrDYgjuMKqlzNc3U73FzI008hq8rksxPTcnEAAUFU&#xA;zHQ0wq1wxVEXenTWrqknFi6LICh5AK3StMjGVqoCMnoMkrXDFUVfWEVs0QjuEuBJGHYx/sk/snru&#xA;MjE2qjBb+rKkfIJyNOTdBhJVqWD05XjqG4kjku4NPDEFUXHZalBpz3qLxtJv3TPtv26dfbIkgmuq&#xA;VCBikEy+isgcAGQipT5HthIQocMkruGKu4Yqtbgq8mIC1pX3rTEAq9O4/wDIFKf5X/Y7mv8A+RH4&#xA;7mf8Lzzhme1u4Yqm1jcT38VvpN9fNDpsBZ4kanFW37n/AFj1yuUeH1AbptLJoUSV0RuaKxCuNuQB&#xA;2P05YELUhd3CIpZ2NFUCpJPYAYq54Hjco6lXU0ZWFCD7g4q1wxVHaTot5qc/oW0ddwZJjXig9z7/&#xA;AH5DJkERZZRBL1G28m+X9N8vsfqiXtygDvPLGGZmNBReQNF37ZrpZ5SlzpnEb0xO78t6ZdT0ETWz&#xA;FqfuRuK9uGwP4ZkRyyHm2yxgqF/+WPmSCRfqka3sL7pIjLGQO3NJCtD9+TjqoHns4xCrD+VnmOQe&#xA;rcPb2yndwzkkfIRqy/jgOrgOVqAhbn8vdUS4McEsUsVBSViU37/D8WEaqNbs/DKtD+XN2aetdxp4&#xA;8FZ/18MB1Y6BPhl0/kWG2mQy3TvAR8RRAGJ70qTT8cA1N9GQxeapeeV9EaIC1EsbkH945rv226HB&#xA;HNLqy8IIny75PsEhkmvAl1MSQqGvBQOlR4nI5c5vbZiMdc0o13y8d5rK3cyKT60MSEgKoJL0X7IF&#xA;N+2XYsvQrkh1DHpLeSJykiFHHVWFDvv0OZANtJZN5Y0uJQlxqCGW3JLRWz7puKcyh2PtmNmn0Ddj&#xA;x9Snl/5Y0q6mi9KRLO1uWCukKhS7gEhR2UUFemUwyyAPUhTDdZc/l7ofJxDcSDgSCyurpUfNf44j&#xA;Uz6hfDDHfMflez0a2guXvqxTzxwLySlA/ViQ3RVBPTMnBlOQkVyDCUKSLVtJurLVb6z9eJns7T13&#xA;o3EfER0LgDl8Y279syMchKINcygxYw0rmyVCPhDk1NTvSvXpmaI+q2L1360f+VCerUcvs9+v12ma&#xA;fg/wuvxyZ/wpM3lrUImadYRc2sRq7BgtQO3EmtflXJjNE7cig4yErlCNIzInBCaqvWgy0MFnDChv&#xA;09q+GKqlrFcm4j+rBjPyBjCCrVHhTBKq3SGVxfl/eXVu1zdahGl7ISxhZWbr/M+2/sAcxTqgDQGz&#xA;Pwyi9D8oCwdp7kLc3O6xBSAig7cqvx3/AFZXlz8Ww2DZCFc2S6NpOo6c/pLZx+gW5erGYwSTv3P4&#xA;0yichLqkmKYX+v2tpyWUiWYin1ZCCq/67UyEcZLEQtjun2ounNxdM7RowCgD7R60LHplsjWwbie5&#xA;PxqciqEiURRDsu5+85TTXwKc95czJQkiP+Xx+fjhASIgL0giFhJcALK0as0qs/phVUE1B4tvt8sR&#xA;uaQSbYrN5qhjuIl9P9zIoYmtftOADXbotc2GPQmUT3g/oZE0k58xyzvAtydhHR6AD95yIr/wNMy8&#xA;mgAB4e/7KRGTpNcHoglSSEDIpPctQjKxoTdX1ZcaLs9aW31KFeHKNkLyAnj1Woyo6QnGZdbpSein&#xA;c+YUn1GA2JaHmWjnoacuWw6djl0dCY45cW56I4t0JrN5p1pcWS3cKO91KIAzqCVFDvv2DED6cxsU&#xA;JSBromVdUf8AX7GMu0ksfGFqSgsBQgBiD9ByAxSPIFlYQGoeaNN1OS3vtMiMEKyiQQ77GM036dc2&#xA;Gl0koiQl1FNRlaHvtdvv0HrSwRO6SiSRpFcAxLJt4H6fwplk9JG4EncAD30gnZhGreY5tR0DS9Pl&#xA;B56eXX1C9eamnCqkfsjbrlmPAIzMh/E1k2EDcatcS3MtwlY5JoxE7FmZuPAIw5E78h45OOMAUi0D&#xA;livW6/8AWP3/AD0/7H81H/Iz8fzWf8LNl0oT2Mn1CRZo3oarswPgyHp07ZruKju28dHdh+oeTL6O&#xA;4ZVAjkcgpA9BsepVq8SBmZDUit2mWO9woXPkzVEkCwhZkoKvyCjlTcCtDkhqY9UHGWS6f5EsmsIW&#xA;ntS0xUeo5kK/GRvSjAdem2Y0tTK9iy4Y9Uz07yrHpyN9Wtwpb7UpZSxHhyJ6ZVPKZc2QMQjZLOSO&#xA;AsyEtXZlIIp9GV2yEgst44yfUlqyj7MaCruR2AwrIpfrGu6lITAkT2cO/wAFCHIHie3yGWQgEwgE&#xA;iy1sR0N1d20ERDq0EhYiIEE/CaGoG6+2RIBRSaW9xHOnOM/Mdx88qIpitvdafSbcT8RIhkRGQ7ij&#xA;MAxHvxrluDB4kq8iwkEi1zzRPxvoIXjW0uS0UcaBWIXjxYluu532zYafRbxPUblHvYc0hoOTbLRV&#xA;qffYffm4AAQqTeYrWCxh0ZrOL17iYyi+/wB2KAKBOnQn3yk4j4nFZqqroi0o1bU1hhmjjek6Ku/Z&#xA;eTU++m+XEqSjNRu47KK3d2EjT8QAhrxr4/IYBLyUlJ11Uprk4dv3AUpx/wBQV++tcb3Re6D1zW59&#xA;U+qyzMS8SlSp6A17fMAb5VHHGPIUgytD/X5QL1Aarcbs1ST9rrX3rvk1tNvK8wNtNET9huW/gwp/&#xA;DJRTFLb3VJ/rN8kbn0biiMKmhCHbpt2yJ3QSluBDsVdir1r/ANd+/wCen/Y9mo/5Gfj+az/hTiPU&#xA;JLAm5SUwlOrDw8CO+YohxbOQQOqJj893VzPxh0/6/TdR9lVcCnJTRtj3Byf5MRHqlwtXD3N3Gv3w&#xA;9EILdJZB6htEVnIFT/eOzbKNqADfIjDCjzrv/UkRKKi1i6vLV7O6lrKxDwS0CgOu/E0oAD2yowAN&#xA;hPDRtD2epX1tI4jl6k84ZN0bsQQcJiCyMQURbXUyF2to/wBwx/f2RP2W8UruP8+uRIHVFJpZahCj&#xA;iWFajo6uPiB/gcqMUEWm8OpwPXkQoOwJ6bjvkDFq4SGPaxpdrNM7WaCGRTT09gj08P5T+GXQn3ts&#xA;Sa3SM21ysRlMbrGrcGcggBv5T75bYbLU0vGtpYyrUZzxA7HYnf7smMfED5ILFPPfme5W8tLUT1SN&#xA;ud1CvcMKLttXapzP7PxAepqyHokT+ZIFmlj9NiEB4N05ECoqD0rm04mu0HrupyM1v6LUjKiUUrWp&#xA;qBX5YCUEpVcXs07RO5PqRKED132OxwWi3XM6yXUzipjdy1CTuKmmAqrHUJri4tPVofQKqO1aMNyc&#xA;NranfyH69OwO5YgkfcemJUobAqKmsbq1t45bq2kiS7TnZysCgcAgFlqPiWn8MiJAnY8uaocSyBOA&#xA;YhN9h70/pklaFKHrXtT+OKtYqrWdle3s4t7O3kuZ2BIihRpHIAqTxUE7ZGUhEWTSqOSV61/679/z&#xA;0/7Hs1H/ACM/H81n/CoTTadCwdy91KxXlzO1KV6DbplsYzly9IbSQjH1aRJFg0w/v2GzrsFB/sym&#xA;OD+KfJkT0C7imn21ATLcSGgJ+07nYde2Rs5JdwC8leGQpGyzPykjUNK+wFTU0HyyuUbO3IpV7m44&#xA;Ov1ghXailuo5e58ciIXyVGafdSCsoUyxIKOy9h8/oyuceilNP05pcHFo7UzzUHNmaigeA23+7K/D&#xA;LDhJV7LWp9TvRbG2j9ChNdwyKO9a4mAAYSHCLQV3qIt7p4TER6bFWBPh0I+eEQsM47i0BqGsGSER&#xA;uTHEXGxYkFj8I2y3HiJOzOqSi8jaa9sYY3RJXk+H1GCL9JPj0zN020Jk8qYzLzHzRI8mvXZkK8ww&#xA;Vip5AlQBsRXbwzZY4gRAHJx5GylRJJqeuTQ6uKuxVwJBqNiMVcPlXFW2YsSzGpO5JxVqu1KfTiqZ&#xA;WcWu6/c2elQNLeSRj0rOAsSsadTSpoqjvlcjDGDI7d6CXq3lz8kdLhhEuvztdXNTWCBikKjwLUDs&#xA;feozVZu0pE+gUGszTq7/ACf8i3FuY4bSS1kPSeKaRmB+UjSL+GUx7Qyg7m0cReYeY/yr8y6Xqsdp&#xA;ZQPqcFzU29xCpH2aVEo6RkV7mh8etNnh1sJRs7UzEk40b8qfPWmTJqEOo2umXAUqGEjs4DChWioy&#xA;n78pya3FP00ZIOUBy/k1IWJn1lSxJJKQM9fpZ0yf53+j9rSdVHozj/B0H/Ktv8NfWW9L1P8AeniO&#xA;X99632a067dc1/jH8xxfjk3eN+64q/FsFtog83G3AknBDLyPw0U7gA9e2bKcqHq2DlhObS0h0+3a&#xA;SQgvSssn8BmDkyHJKgzApStGEzHULlgqD4YASKKOhP0nJ5Bw+iPxUd7orm0a2lMu5c+o6+JqaAf8&#xA;BjKEhIV7vx81BX3dxBDZ8Ls+o8laqvWpqw69KYMcDKVx2pSdt0r07WLm0WSNXIjeMrx7EjkVr9LZ&#xA;l5sAlv5sAU+tbmO4i9SPp0I8D1zXTgYmi2A2yzy1c2JMh9NIJYolVmqfiC1LOa9O1cxpguPqLryY&#xA;HYecP8SeYNalgjY6bFMqWF0FIR0RAjfF7svIex9syTi4IjvcfQajj4h0B2Wa1dQtwSNw0kUhDgfs&#xA;sFDUP0MMz+z4GyTypzZlifmDWE+uQxXaNPCzK90gIUtGG3RCQ3E+9Nsz+ARjwx2apFjN08L3EjQK&#xA;yQlj6SOeTBewJoKmmIut2ClhVXtobeRZTLMIiiFoxSvJvDIklVAkk1O+SV1fwxV1Nq4q4jYGvXt4&#xA;Yq7FXtv5J6HbQ6Jca7JGoubljDG47QxUB69C715fIZpe0chMhBrkWUazP5hvLOV9EgglmUlYhdyt&#xA;DBUdSWRJWangBTtUZiWIbDeTgy4p7jk8a8m/nhrdt531Dy353WLTZ0lMUbxgxRwOoFA5YtWOWtVc&#xA;sfuO1cM9yqbGWOcIiXQ/fvt9j2231Vi6P6olVlLIARRh4inUbjfMg4gRsscxvdTmnkmfk5qew7D5&#xA;ZOMQOTCUjI7qeSYpjQ/oWv8AxZX8aZjf5Vz/APIfjveLJK0TrIrcWUji3vm+IBFF2CNvtWa6SOEn&#xA;htWRfEjv16ZRiwCBtJlaC5Nx41PEbgdsyKQt+tLDLFVgHY0jVhUEgE9DgIvZQrTXAlT41rPXk8pO&#xA;5HhTBGNcuStQQSzsVjFWALHemwwmQCEz0m31uGf04bGeUOFZoxG1eLfZbptXxzGziEhZICePhZjp&#xA;/l+bVLG+068E1nZ3SLHdcQY5mWu8asQaKw2anUd81c5cJBG7RquGcat5X5SubnQdd81aLp8xl0Oy&#xA;uJQbSUr6rSQu0cbhgtP2OLbjsczJxExEnmXA7NuM5gfSEs0fVXN5dzXUo4ykyyOTtyr1AzcYwIin&#xA;ZAtXlq+oWV3rRWVbWKRbeGTgSnOleJYbA0NchLJ6xFBSiC2nuZlgtY3nmegWONSzE+AVak5IyAFl&#xA;iyez/Kvz3dIsi6YYkYVBmkijP0ozcx92YstdiHVHEEaPye80q3GeW1hYfaUu7ED/AGKEfjgGugeV&#xA;tU84iaLc35PeZViaWGe2mCfaAZ1+W5Sn44fzsLooGoBF0UH5h8v+bJbexgk0FIfqEIg9axjDtMB+&#xA;3KYy5ZsOKcASeLn3sxngerGLm2uoSEuYWgdBx4ujKx371zJBB5NgIKppmkapqk/1fTrWW6l7rEpa&#xA;nuxGwHucjPJGIsmlt6BoX5H63c8ZdYuY7CM7mGOk0vyJB4D7zmBl7SiPpFsTNnt9pUflTyZcWmkG&#xA;WQWkFxPCZTzZpQhcVoAN27AZrzlMyZHnTh6mRp45+a/516pHNaaL5Ruli076rE5vowHkfmvwqhav&#xA;Gi/aNOXLbamYs8nD9Lh5sxOw5MD8r+QNf8yeadH1TzFBqM+m6+7wG9irJO3CMyJMxZZGEXRebClD&#xA;sdsrjAkgy5FysEDkwShLnE8Q+4h9OeU/y70jyzZm10ezW2WShmmduUshHQu5qT8ug7DMyMoQ5Ncd&#xA;OWRR6OT9uT6FH9cTqPJtjp1dNMtV6qWP+Uf6Uys5pFsGCIRPoxfVvT4j06/Z7eOVcR4rcnhHh0+c&#xA;dYu1/RyywOCHkTg3aoPL/jXOmJcuI3R+k6t5p1kLoun2RuNOjn9duEdWTknH4pfsqO+/yzHnwRnx&#xA;k0USoDdPI/J/mZpIY30+WNpiBVqFVr/OylgtMP5rHV21iYQnmz8tfNVnEmoj0J7ezHOZbd2Z0ANW&#xA;fiyx1AA7GuVQ1sJGtwyjkF0xS3vLp9cmjQCWRw0UMakEFl3QA+5zOkQI2xHNkflSxuNZubayJ9Kd&#xA;nMUw3JUR15nv0Ve5ynJlEYcTLIae2STRWNtHECW9NAkYY1NFFKknNFGJmbcDLlrnzYdY/mLL5g1D&#xA;V9I8ptZXup6bHGzS3MsiQVcsG4elHJ6vAhQfiA364/u+Kt2iGaUrqreD+ToPMWo6tf3VjFJfXUyu&#xA;l9CiO0jCckmQ8V4ACQAnkfoObk8Iq9gHF7P4vEMr9/xZdpv5S+dr2QLJZiyhPWW4dQB/sULP/wAL&#xA;k567EOtu5Mgz7RPyesLS19HU7u61CEuJHso3+r2zOBQMyBizEDblUZg5NeSbjQ8+ZazkPQM20nSd&#xA;P0yH0NP06KxT9pkC1Ye5G5PzOYWSZkbMuJjxEjkqXMts4KG5ZW7AdK+9BhhGQ6NM5RPVDtY3kx9R&#xA;mVyejE1qMsGSMdms45S3Komn3giaIOoRzVhU9voyJyxu2QxTqr2aXSH/AGpAPkK/0wnP5IGnPeqj&#xA;R7YikhLg9VNKHIHOejMYAiLWztrSP0reMRR/yLsPuyuUzLctwjS9mkNRGor/ADNsP64BXVTfRDy2&#xA;aSKTdS807rsqfdkxOvpDWcd/UUrg0PybYSCSz0y1hmU1DwQIjf8ABKB+vJRhJrPhjoibOW2s7NLT&#xA;TLKO1srZAkUESrHHGg2CqiAKoHgMIwgcyyOcmyAtbUrtujBfkP61ywYYtJzSUxe3YbkJWqMl4ce5&#xA;AyyHVoXd0DX1Wr7knD4ce5HiS70y+sTfoj1uX7yv2qD+amYvAPEro53GfBvr+18zaPavqMltphkC&#xA;rc3UMSk/sGVgnL365vZyqJPc7KRrd9ApLonlvSHt4ClhpthGS87EAfCPid2Pc9zmnIMvVJ0+XUWS&#xA;wHzB+e3lyy0yS80t5tYKKCfSPpRoWNF9QyFXFT4IcrOeA5BxZZTV3bGvJX/OQV9qF9NDrttBb2oF&#xA;Umt2dWAJoFMbs/qe9CPlkIagH6gwhlPezuz/ACO0kTNLe6hNJyYsIrdViC17cn9VjTx2zPn2jIig&#xA;Hc+IQbZXoPkrQPLv76wjk9RVaskjljQ7nwG9PDMaeonMcJ5MMmQnm8D/AD4/NPVG1W68s2MrW1rb&#xA;hRqUwqrSlkD+mGBqIwGofH5ZRnyV6RydROUpyocy848m+atc8sPq+q6VG5H6Plgu5UVmEUUroOdR&#xA;sp5hVVm7nIacxErlyC6aE5zEYc5bPZfyd8m+fdE84W97PpE8GnyxSQ38krRpSNxyUhWYMaOq7Cpz&#xA;aarLCUKvdOjwZBO62e/ZrHaKF/dC2tJbhiAI1LFj0AHUn5ZOEbLHJMgWwK1/NzQtV/L7UPM2nSCX&#xA;6ityJraVljkDwVMcb0rwMy8eO37XjhjKJuQ5BoyTlGAvq8Jtv+cgPzIuNYSC3gtp3nB9GyjtncEg&#xA;jZAr+qTv/Nlf5mduMATjMx0IHzv9T6o8ttqLaDYNqipHqTQRvexRV4JMyhnRaljRWNOuSJJ3Ln4/&#xA;pCZsAD1rkQ2SFNYobJBPSntiklrFClPHcMtI5Ah7mmTiQOYYzB6IGTTLpzUyBz4sT/TLxmiOjjnD&#xA;I9VsulTKR6ZDigr2374Y5x1RLARy3UvqF6KgIaHrQj+uS8WLHwp9yw2lyP8AdTfQCf1ZLjj3sfDl&#xA;3LDDKoqUIHuMPEEcJWYWKaf9KP8A2X/G2Y3+Vc//ACH472JaR+TXlaxKvPJc3kisr/FJ6ShlNQV9&#xA;LiwP+yyyetmeVByTnJR/n2w0ZPL2pXOsW5vNJhie5uLNSwLiAGUj4WSv2NgTSvXbKhPijR6OuzQA&#xA;svma780/lpqUGrpL5XfTJprfjob2c7cVuPiAkueckcfAHjQBDT4utajDlIHkKcWMoGwRv0ZB+Sf5&#xA;UTalqdr5k8wQGPRIAlzYwtQ/W3rVDxrX01oG+LZtuork8eGUt04sVG5dH0rJq/8AvuP6W/oMyxg7&#xA;y5Z1HcEO95dz1SvwtsVUdj+OWDHENZySlswPzN+R/ljzTJqV3qUNwNT1BY0S+hf0mjEaenXg1Y2L&#xA;KBWq9tqZRkxwkbJZYocJ4q9QII+DINO/KryZbaA+gHR4v0XdKF1CPm/O4KEMhkcEOaEfzZE8PCQG&#xA;7BHgkJAVTJEsLyNiY5Qg7AE/jtlpyxPMNYxSB2KMhW4UUlZX9xscpkR0bo8XVdNDFNC8Uqh4pFKu&#xA;p6EEUIyILIi2F2f5X/lhpjXPDRbOUXMiyNFLEkwVkQIOHJWK7Lvv1ycMR6BqmYUAeUU3gg0azRY7&#xA;Cwjt412VEHBP+AXbL445d7QZxHIL/rDA1VUQ9qKP41yzgY8ap+krv+YfcMj4MWXjSa/SN5/vz/hV&#xA;/pj4Ue5fGl3rlvLlhUzhTvtQdvowHHHuSMkj1ae/uCqgMQR9o+OEYgg5SsN5dV/vWqPfD4ce5HiS&#xA;72jdXLGvqt9BIw8Ee5BySPVaZ5yf7xj9Jx4R3I4j3terJ/OfvOGgjiLRLdz198KqlvJFHJWVPUSh&#xA;+GtN8jMEjZnjkAdxYUup2HyGSa029CX9D+nxPOtePfrXMTiHiW7DhPgV+Oa+XUbVNg3M+C7/AI4I&#xA;4pFhLNEJffXiXcD28sEckEgKyRyqHDAihBB2y6OADm0yzX0SrT9J0+w0+y0+2hAtdPhW3tFclyka&#xA;KFA5PVug3Nd8sjADkGqUzI2UbDbu1I4k2GwUCgA/hhMgOaiJJTK200L8U25/kHT6cx55u5yIYe9H&#xA;qiKABRR4DKCXIADsCuxVRlvLeL7Tgn+UbnLI4yWEskQg5dWY7RJT3b+gy2ODvaJajuQ5vp2jdHIc&#xA;SAbkdKeGWeGLth4xojvQ2WNTZ/zOKWsUN7U98Vdira8SdzxH374CkUvt5Io5A0kYkWhHGtPpwSBI&#xA;2NMscgDuLU6VNB3yTBdIhjcqeo60wA2GUhRpbTCxdtiriN+lO9MUrgryyURaseijBdDdNWdk1s7B&#xA;YaO/xSfgPlmLky3sOTlY8Vbnmjf91/7L+GUdXL/gY1mydQrwzTek9vGoYSUrtU7ZCURdno2QmaMR&#xA;1RsWlRcEaRjyp8abUr88plnPRvGnFDvRscaRrxRQq+Aygknm3CIHJdgSslmii3kYL8+v3ZIRJ5IM&#xA;gOaDm1VASIV5eDHp92XRwd7RLOOiEee7nDVY8VFWUbCmWiMYtRlKSHocsam/hptXlX8MUtYoaxV2&#xA;Kt0NK9jirWKt0xV2KtYq3uN/uxVrFVRliEKsHJlJ+JKbAdjXIgm/JmQK57rACTQCpPTJMEZb6dM+&#xA;8g4KehPX7spnlA5N8MJPNMoLeKFaIKeJ7nMeUzLm5MYCPJUyDJf/ALq+nB1bf4Eot9LdqNMeC/yj&#xA;7WZc8wHJwIYL5pjFDFEvGNQo7+JzHlInm5EYgclxIUVJoB1JwJtDtqFqG4huRPcdPvywYpMPFjdI&#xA;GfUbhnIVgqg/s9/py6OENEsxtDlzI5aViT45bVcmoys7rOx3+jCxdU4q2jcSDsadjgISDTRNa+Jw&#xA;q1ih2KuxVuuKqkNUb1eAdEPxK3TfIy32Zw23q6WGpJYCg60HQVyTEtAEmg3J6YoXNG8chR1ow6qc&#xA;ANjZkYkGiq3FzLclUCBVT7CIOmQjARZ5MhntXJdHp10/VeA8W2/DE5YhY4ZFGrpkZCmV2dgKGmwy&#xA;g5j0b/BB5omK3ijFI0A+XX78rlInm2xgByC/IpbptXFNNYoX/wC6vpwdW3+BDTXdvF9txX+UbnLI&#xA;4yXHlkAQU2rOdol4j+Ztz92Xxwd7RLP3IOWeWU1kYtl0YgcmmUiebQkIQpQUam9N9sa3tRLalpPb&#xA;thYuoKV+8Yq7FVxVOAIarE7rTpgvdNClmFDeKtiOQ9FJ+QOCwmivFrcnpE33HBxx708Eu5eLC7P+&#xA;6z9JA/Wcj4se9l4Uu5eNMuj1AHzP9MHjRZeBJeNJn7uo+VT/AAyPjhPgFV/RI2/e0HcU7/fkfH8m&#xA;f5fzXLpMQO7sT7UGA5ykacd6sLGCtX5SN4uanIeKemzPwx13V0REFEUKPACmQJJZgAN4Et1xW3Ak&#xA;dMUg01ihuuKbaxQqf7q+nB1bv4GMZsnTqnEtFy4gJEC0knt13yN0fey6e5BNqEYUusbtGOsgHw9a&#xA;d8vGI8r3cY5xVgGmk1WzI+PmtOlFB/42GJwS6UgaqHW0VDeaQ5CtcOjE0oYz1+jllcseQdPtbo5s&#xA;R6n5I6CLSJqendByei8lB+7rlEpZBzDkQGKXKSLGm2g6qT8yf4ZT40m/wYrxY2g6Rj6an9eDxZd6&#xA;fCj3LxbW46RL9wyPGe9lwDuVFjA+yoHyGAlkIuwK7FXYq7FXYq7FWxUb4pGzWKHYq7FXYq7FW+2K&#xA;WsUOxVU/3T9ODq3fwJFp0TtcBgoKr9rkKjfM3KQA63ADxWmrW8LQNBxpG4Kso22bY5iiZu+rlGAI&#xA;roWFXsF1YSS2bMfTYg+zDsc3WOUcgEurz2WMsZMDyQsTRq9ZE5rv8NeP4jLSDWzVEgHcWt2p74WL&#xA;hSv9cVTLS7nVVSVraakduhkeNzVeI8Af4ZjZoYzXEObl6aeWiYnaItN9O8zJcOsM8RWVjQNGCwJ+&#xA;XXMTNozEWDs52DXiRqQ38k8zBdi3U0p2xW1kksUSF5XCIOrMQB+OSESdgxlIAWUvk8w6Shp63Ij+&#xA;VWP40y8aTIejjS12IdUbb3MFzEJYHDoe4/UfDKZwMTRciGSMxYNquQZuxV2KtkkgA9umKSSWsUN1&#xA;2pittYq7FXYq7FXYq7FVT/dP04Ord/Ah7eBYYgi/SfE5ZOVm3HhChSqKd8gzCB1XTIr+34H4ZV3i&#xA;k8D4fI5fgzHGb6ONqNOMka6sJlikikaOQcXQkMp7EZuokEWHnpRINFbhQ7FXEEdRTFWZaFpa2VuJ&#xA;HFbmUVYn9kH9kfxzT6nPxmhyDv8AR6fw42fqKZ5iuWlOqeYLe1YwxHnMKhj1VT7+JzLw6Uy3PJwt&#xA;RrYwNDcsVubu5upPUnkLt2r0HyHbNpDHGIoB0uTLKZuRtSybBGaVqUlhdCQVMTbSoO4/qMpz4RON&#xA;dW/TZzjlfTqzS2uoLmISwOHQ9x2PgfDNNOBiaL0GPJGYsFVyDNuh417dMU1tbWKHYq3+vFLWKG+o&#xA;+WKWsUOxV2KuxVU/3T9ODq3fwLBhaQ1irsVYTrzK2r3BXpVR9IUA/jm70o/dh57WEHKUHDKYpklA&#xA;BMbBgGFQaGu+XSjYpohLhIPcq6hcR3N3JOi8FkNeNAN6b9MhigYxALPPkE5mQ6qujWv1nUYYyKoD&#xA;zf5Lv+OR1E+GBLPS4+PIAzj55o3okh1/WzDW0tWpL/u2Qfs+w98z9Lpr9UuTrdbq+H0x59WMdTv9&#xA;+bN06pBa3Nw3GGJpD/kgn78jKcY8yzhjlLkLTW28rX8lDMywL3H2m+4bfjmLPWwHLdzMfZ0zz2Ta&#xA;18tabDQyBp2/yzt9wp+OYk9ZM8tnOx6DHHnumkcUcSBI0CIOiqAB+GYxkTzcuMQBQXZFk7FXYq7F&#xA;WwSOmKg01irsVdirsVdirsVVP90/Tg6t38CnhaXYqh9QvUtLR53/AGRRV8WPQZZixmcqDVnyiETI&#xA;sGAlubgAfHNM9B7sx/qc3m0R5B5wAzl5ktTwSwTPDKOMiGjDrv8ARjGQkLCzgYkxPMLU4chzrx70&#xA;64T5IFXuyTy0vM3F9LxXYRhqACgFW/hmu1hqoh22gF3M+5HS6s7yLHYwPcivxyr8KU78WOxOURwA&#xA;C5GnIlqSTUAZfjvSyPytcSytJcSiMMxbiPjbc13OwrmSdaAKAcOPZ0pG5GvtTO28vaZBQ+n6rD9q&#xA;Q8vw6fhmNPVzl1pzMeixx6X70yRUROKqFA6AbAfRmOSSXLFAVTsCuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxVU/3T9ODq3fwKeFpd/Dc4rTD9Z1hrq8Uxf3EDVjB6MR+0Rm40+n4Y78y6LVarjntyils&#xA;0zyzvMwCu7FiFFACfAZkRjQpxJzMpGXeugtrq6ciGNpWPUgV+84JTjEbmkwxymdhac2flSd6NdSC&#xA;MfyJ8Tff0H45h5NcB9Itz8XZ0j9RpPrXTbO3QRhC615EOS1WP7VDtXMGeaUjbs8WCENqtE5U2uxV&#xA;2KuxV2KuxV2KuxVsYqGsVdirsVdirsVb3OKXVOKLaxV2Kqn+6fpwdW7+BTwtLH/MGsXEc4s7VirU&#xA;/esv2iW6KPozYaXTgjik6zW6qUZcET70ttPL2pXFCyeih/ak2P8AwPXMnJq4R83DxaLJLpXvTu08&#xA;s2ENGmrO/wDlbL/wI/jmFk1kzy2dji7PhHn6k1jjjjUJGoRB0VQAPuGYhJPNzREAUF2BLhiodirs&#xA;VdirsVbFO4xSGsUOxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kqn+6fpwdW7+B//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:bf27d84a-2a2d-a24d-a458-63c773e0ccf6</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:bf27d84a-2a2d-a24d-a458-63c773e0ccf6</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:343c09ea-ae30-2945-af12-0c9b80def469</stRef:instanceID>
            <stRef:documentID>xmp.did:343c09ea-ae30-2945-af12-0c9b80def469</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e67c2067-39cd-4646-a7fd-e9621900fea4</stEvt:instanceID>
                  <stEvt:when>2016-11-15T12:07:15+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:343c09ea-ae30-2945-af12-0c9b80def469</stEvt:instanceID>
                  <stEvt:when>2018-08-23T14:28:42+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:bf27d84a-2a2d-a24d-a458-63c773e0ccf6</stEvt:instanceID>
                  <stEvt:when>2018-08-24T17:31:17+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>660.656500</stDim:w>
            <stDim:h>836.391000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>65</xmpG:red>
                           <xmpG:green>64</xmpG:green>
                           <xmpG:blue>66</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=80</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>88</xmpG:red>
                           <xmpG:green>89</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=60</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>130</xmpG:green>
                           <xmpG:blue>133</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=50</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>149</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=40</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>167</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=20</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>209</xmpG:red>
                           <xmpG:green>211</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=5</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -836.391 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 836.391 li
660.656 836.391 li
660.656 0 li
cp
clp
gsave
660.656 836.391 mo
0 836.391 li
0 0 li
660.656 0 li
660.656 836.391 li
clp
.00247842 378.21 mo
0 378.21 li
0 378.207 li
.00247842 378.21 li
82.1124 358.75 mo
60.3625 358.75 li
59.0141 357.259 li
60.2676 356.815 61.2407 355.635 60.8582 353.961 cv
60.5107 352.441 59.3285 351.773 58.1222 351.773 cv
56.4151 351.773 54.6595 353.111 55.1521 355.266 cv
55.1871 355.418 55.2304 355.562 55.2814 355.698 cv
49.4924 358.75 li
43.5226 358.75 li
43.5226 354.87 li
33.7024 354.87 li
25.2824 342.26 li
21.7824 333.49 li
10.2024 333.49 li
.00247842 327.53 li
.00247842 346.64 li
0 346.639 li
0 0 li
660.656 0 li
660.656 307.5 li
653.091 310.282 li
550.672 296.08 li
535.332 303.33 li
531.596 297.505 li
532.285 298.383 533.299 298.983 534.523 298.983 cv
534.981 298.983 535.469 298.899 535.98 298.713 cv
540.397 297.108 538.624 290.786 534.655 290.786 cv
534.196 290.786 533.709 290.871 533.198 291.056 cv
530.488 292.041 530.108 294.801 531.135 296.787 cv
527.333 290.86 li
518.672 290.86 li
511.982 298.96 li
495.333 319.1 li
479.732 319.1 li
475.432 310.37 li
467.823 315.33 li
467.681 315.22 li
468.786 313.374 467.289 310.644 465.11 310.644 cv
464.664 310.644 464.19 310.758 463.704 311.018 cv
463.407 311.176 463.158 311.361 462.952 311.565 cv
460.552 309.71 li
460.552 303.42 li
445.992 290.86 li
445.833 290.94 li
441.692 293.08 li
436.073 293.08 li
423.172 305.74 li
407.293 296.08 li
395.063 296.08 li
382.492 301.77 li
372.233 300.12 li
324.273 306.4 li
319.974 302.102 li
319.975 302.101 li
319.974 302.101 li
319.973 302.1 li
307.929 304.141 li
278.96 309.047 li
257.349 299.833 li
236.292 290.86 li
222.734 290.86 li
222.73 290.855 li
222.709 290.88 li
189.002 319.1 li
179.503 314.5 li
164.003 330.79 li
142.502 327.53 li
109.502 349 li
97.1924 346.47 li
86.6725 346.47 li
82.1124 351.38 li
82.1124 358.75 li
90.5246 339.971 mo
90.2903 339.971 90.061 340.095 89.9678 340.385 cv
89.8172 340.853 90.2094 341.177 90.5886 341.177 cv
90.8229 341.177 91.0521 341.053 91.1453 340.763 cv
91.2959 340.295 90.9037 339.971 90.5246 339.971 cv
93.9765 331.952 mo
93.2349 331.952 92.4934 332.29 91.9701 333.107 cv
90.7135 335.069 92.4971 337.027 94.2809 337.027 cv
95.0225 337.027 95.764 336.689 96.2873 335.872 cv
97.5439 333.91 95.7603 331.952 93.9765 331.952 cv
25.9196 319.217 mo
24.6485 319.217 23.387 319.819 22.5775 321.271 cv
20.8079 324.445 23.6367 327.331 26.4197 327.331 cv
27.6909 327.331 28.9523 326.729 29.7619 325.277 cv
31.5315 322.104 28.7026 319.217 25.9196 319.217 cv
131.153 310.571 mo
128.389 310.571 125.625 313.598 127.576 316.641 cv
128.386 317.903 129.534 318.427 130.682 318.427 cv
133.446 318.427 136.21 315.399 134.259 312.356 cv
133.45 311.094 132.301 310.571 131.153 310.571 cv
75.2667 299.278 mo
73.2298 299.278 71.2368 300.355 70.4356 302.877 cv
69.1488 306.929 72.5385 309.72 75.8157 309.72 cv
77.8526 309.721 79.8455 308.643 80.6467 306.121 cv
81.9336 302.069 78.5439 299.278 75.2667 299.278 cv
197.158 294.218 mo
196.886 294.218 196.613 294.342 196.418 294.64 cv
195.941 295.368 196.605 296.105 197.271 296.106 cv
197.543 296.106 197.816 295.982 198.011 295.684 cv
198.488 294.956 197.824 294.218 197.158 294.218 cv
213.637 293.174 mo
213.564 293.174 213.486 293.185 213.404 293.21 cv
212.578 293.466 212.863 294.659 213.608 294.659 cv
213.681 294.659 213.759 294.647 213.84 294.622 cv
214.667 294.366 214.381 293.174 213.637 293.174 cv
288.966 290.736 mo
288.326 290.736 287.7 291.077 287.461 291.873 cv
287.087 293.12 288.126 293.962 289.13 293.962 cv
289.77 293.962 290.396 293.621 290.635 292.825 cv
291.009 291.577 289.971 290.736 288.966 290.736 cv
63.3648 283.277 mo
60.5973 283.277 57.7671 285.341 58.3795 288.866 cv
58.8482 291.563 60.9326 292.775 63.0539 292.775 cv
65.8214 292.775 68.6516 290.712 68.0392 287.187 cv
67.5705 284.49 65.486 283.277 63.3648 283.277 cv
539.403 285.161 mo
538.387 285.161 537.381 285.651 536.768 286.829 cv
535.484 289.294 537.661 291.444 539.791 291.444 cv
540.808 291.444 541.813 290.954 542.427 289.776 cv
543.71 287.311 541.533 285.161 539.403 285.161 cv
505.79 288.455 mo
506.705 289.459 507.853 289.888 509.002 289.888 cv
512.344 289.888 515.696 286.253 513.366 282.553 cv
512.388 280.999 510.982 280.355 509.575 280.355 cv
507.14 280.355 504.701 282.284 504.456 284.762 cv
503.928 284.885 503.452 285.243 503.186 285.9 cv
502.57 287.415 503.869 288.572 505.126 288.572 cv
505.352 288.572 505.577 288.534 505.79 288.455 cv
387.487 283.846 mo
387.215 283.846 386.927 283.893 386.624 283.995 cv
383.805 284.944 384.861 288.993 387.394 288.993 cv
387.666 288.993 387.955 288.946 388.258 288.844 cv
391.076 287.894 390.02 283.846 387.487 283.846 cv
356.941 284.872 mo
356.677 284.872 356.399 284.959 356.13 285.165 cv
354.98 286.045 355.871 287.662 357.006 287.663 cv
357.271 287.663 357.549 287.575 357.818 287.369 cv
358.968 286.489 358.077 284.872 356.941 284.872 cv
345.261 279.006 mo
344.985 279.006 344.696 279.036 344.393 279.1 cv
339.924 280.041 341.006 286.608 345.088 286.608 cv
345.364 286.608 345.653 286.578 345.956 286.515 cv
350.424 285.573 349.343 279.006 345.261 279.006 cv
469.92 276.789 mo
467.935 276.789 465.981 277.948 465.628 280.487 cv
465.19 283.632 467.7 285.415 470.161 285.415 cv
472.147 285.415 474.101 284.256 474.454 281.716 cv
474.892 278.572 472.382 276.789 469.92 276.789 cv
121.143 276.476 mo
120.223 276.476 119.277 276.837 118.449 277.699 cv
115.731 280.527 118.465 284.43 121.489 284.43 cv
122.408 284.43 123.354 284.069 124.182 283.208 cv
126.9 280.379 124.167 276.476 121.143 276.476 cv
424.042 275.285 mo
422.671 275.285 421.313 275.94 420.464 277.519 cv
418.654 280.888 421.643 283.883 424.573 283.883 cv
425.944 283.883 427.302 283.228 428.151 281.649 cv
429.961 278.28 426.972 275.285 424.042 275.285 cv
289.945 278.597 mo
288.329 278.597 286.657 280.051 287.409 282.017 cv
287.837 283.135 288.74 283.607 289.66 283.607 cv
291.277 283.607 292.948 282.152 292.196 280.187 cv
291.769 279.069 290.866 278.597 289.945 278.597 cv
156.149 274.79 mo
155.21 274.79 154.253 275.175 153.452 276.1 cv
151.038 278.888 153.69 282.404 156.523 282.404 cv
157.461 282.404 158.419 282.019 159.22 281.095 cv
161.634 278.306 158.982 274.79 156.149 274.79 cv
98.5153 265.379 mo
96.6982 265.379 94.9158 266.304 94.0428 268.505 cv
92.4818 272.441 95.8463 275.412 99.101 275.412 cv
100.918 275.412 102.701 274.487 103.574 272.286 cv
105.135 268.35 101.77 265.379 98.5153 265.379 cv
539.907 263.905 mo
539.218 263.905 538.487 264.092 537.742 264.519 cv
533.589 266.903 536.095 272.742 539.944 272.743 cv
540.633 272.743 541.365 272.556 542.109 272.129 cv
546.262 269.745 543.756 263.905 539.907 263.905 cv
515.135 260.226 mo
514.601 260.226 514.031 260.349 513.441 260.627 cv
509.466 262.497 511.479 268.121 515.085 268.121 cv
515.619 268.121 516.188 267.998 516.779 267.72 cv
520.753 265.85 518.741 260.226 515.135 260.226 cv
52.7468 264.918 mo
53.7256 266.228 55.2498 267.14 56.8898 267.14 cv
57.9252 267.14 59.006 266.777 60.0257 265.921 cv
64.0498 262.545 60.6786 256.866 56.5861 256.866 cv
56.1723 256.866 55.7512 256.924 55.3296 257.049 cv
55.122 257.022 54.9122 257.008 54.702 257.008 cv
52.3945 257.008 50.0547 258.629 50.37 261.59 cv
50.5534 263.313 51.5233 264.403 52.7468 264.918 cv
223.61 255.814 mo
221.55 255.814 219.534 256.919 218.79 259.488 cv
217.639 263.456 220.934 266.104 224.122 266.104 cv
226.182 266.104 228.198 264.999 228.942 262.43 cv
230.092 258.462 226.798 255.814 223.61 255.814 cv
263.526 258.37 mo
263.038 258.37 262.519 258.49 261.983 258.762 cv
258.637 260.465 260.453 265.186 263.509 265.187 cv
263.997 265.187 264.517 265.066 265.052 264.794 cv
268.398 263.091 266.582 258.37 263.526 258.37 cv
64.6839 260.316 mo
64.1449 260.316 63.6033 260.556 63.202 261.136 cv
62.1831 262.608 63.5366 264.162 64.9076 264.162 cv
65.4466 264.162 65.9882 263.922 66.3895 263.342 cv
67.4084 261.87 66.0548 260.316 64.6839 260.316 cv
571.92 259.363 mo
571.738 259.363 571.544 259.397 571.341 259.473 cv
569.631 260.111 570.334 262.555 571.871 262.555 cv
572.053 262.555 572.247 262.521 572.45 262.445 cv
574.16 261.807 573.457 259.363 571.92 259.363 cv
195.328 257.256 mo
194.23 257.256 193.137 257.947 193.094 259.361 cv
193.049 260.842 194.206 261.602 195.357 261.602 cv
196.455 261.602 197.548 260.912 197.591 259.497 cv
197.636 258.016 196.479 257.256 195.328 257.256 cv
513.954 258.033 mo
513.612 258.033 513.273 258.194 513.052 258.581 cv
512.56 259.442 513.33 260.238 514.089 260.238 cv
514.43 260.238 514.769 260.078 514.991 259.69 cv
515.483 258.829 514.713 258.033 513.954 258.033 cv
530.894 249.679 mo
530.021 249.679 529.118 250.01 528.306 250.798 cv
525.477 253.541 528.157 257.573 531.203 257.573 cv
532.077 257.573 532.979 257.242 533.792 256.455 cv
536.621 253.711 533.94 249.679 530.894 249.679 cv
33.3959 244.737 mo
31.508 244.737 29.6502 245.676 28.6429 247.925 cv
26.7175 252.222 30.4428 255.668 34.0578 255.668 cv
35.9457 255.668 37.8034 254.728 38.8106 252.48 cv
40.7362 248.182 37.0109 244.737 33.3959 244.737 cv
490.357 247.596 mo
489.984 247.596 489.589 247.653 489.174 247.777 cv
484.829 249.073 486.284 255.354 490.198 255.354 cv
490.571 255.354 490.966 255.297 491.381 255.173 cv
495.726 253.877 494.271 247.596 490.357 247.596 cv
384.096 245.28 mo
383.752 245.28 383.388 245.329 383.006 245.435 cv
378.698 246.628 380.045 252.877 383.934 252.877 cv
384.278 252.877 384.642 252.828 385.024 252.722 cv
389.332 251.529 387.985 245.28 384.096 245.28 cv
549.506 246.834 mo
547.175 246.834 546.139 250.548 548.738 251.481 cv
549.034 251.586 549.316 251.635 549.581 251.635 cv
551.912 251.635 552.948 247.921 550.349 246.989 cv
550.054 246.883 549.771 246.834 549.506 246.834 cv
257.915 246.019 mo
256.19 247.475 256.978 250.975 259.641 250.975 cv
259.762 250.975 259.887 250.968 260.017 250.953 cv
262.897 250.616 263.027 246.931 261.085 245.755 cv
261.507 245.53 261.917 245.219 262.304 244.81 cv
265.362 241.574 262.243 237.174 258.813 237.174 cv
257.756 237.174 256.67 237.592 255.725 238.591 cv
253.061 241.408 255.084 245.109 257.915 246.019 cv
294.536 246.742 mo
293.271 246.742 291.968 247.768 292.39 249.352 cv
292.672 250.409 293.5 250.868 294.345 250.868 cv
295.609 250.868 296.913 249.842 296.491 248.258 cv
296.209 247.201 295.381 246.742 294.536 246.742 cv
139.67 248.224 mo
139.529 248.224 139.378 248.259 139.223 248.338 cv
138.251 248.832 138.778 250.202 139.665 250.202 cv
139.807 250.202 139.958 250.167 140.113 250.088 cv
141.084 249.594 140.557 248.224 139.67 248.224 cv
447.382 244.371 mo
445.674 244.371 443.919 245.709 444.411 247.863 cv
444.759 249.384 445.941 250.052 447.148 250.052 cv
448.855 250.052 450.61 248.714 450.118 246.559 cv
449.77 245.039 448.588 244.371 447.382 244.371 cv
560.108 246.1 mo
559.122 247.757 560.63 249.389 562.138 249.389 cv
562.773 249.389 563.408 249.1 563.858 248.401 cv
564.064 248.08 564.175 247.759 564.21 247.45 cv
565.112 246.015 563.825 244.071 562.253 244.071 cv
561.827 244.071 561.379 244.214 560.948 244.549 cv
560.379 244.992 560.129 245.547 560.108 246.1 cv
73.5559 243.313 mo
73.208 243.313 72.8377 243.384 72.4508 243.543 cv
69.4837 244.762 70.8145 248.985 73.4874 248.985 cv
73.8353 248.985 74.2055 248.914 74.5924 248.755 cv
77.5597 247.536 76.2289 243.313 73.5559 243.313 cv
88.5213 243.467 mo
87.0562 243.467 85.5789 244.46 85.6987 246.345 cv
85.8073 248.052 87.1262 248.869 88.4548 248.869 cv
89.9201 248.869 91.3972 247.877 91.2774 245.991 cv
91.169 244.284 89.8501 243.467 88.5213 243.467 cv
102.664 243.722 mo
101.514 243.722 100.384 244.388 100.16 245.856 cv
99.8776 247.71 101.363 248.776 102.817 248.776 cv
103.966 248.777 105.097 248.111 105.32 246.643 cv
105.603 244.788 104.118 243.722 102.664 243.722 cv
162.082 236.696 mo
159.275 238.925 160.976 244.097 164.641 244.097 cv
165.059 244.097 165.502 244.03 165.968 243.883 cv
170.445 242.472 169.061 236.181 165.194 235.78 cv
165.635 234.508 164.526 233.017 163.2 233.017 cv
162.803 233.017 162.388 233.15 161.988 233.463 cv
160.758 234.424 161.137 235.947 162.082 236.696 cv
279.868 242.612 mo
279.859 242.612 279.85 242.612 279.841 242.613 cv
278.94 242.641 278.973 244.028 279.858 244.028 cv
279.867 244.028 279.876 244.027 279.885 244.027 cv
280.787 243.999 280.753 242.612 279.868 242.612 cv
312.307 241.946 mo
312.172 241.946 312.03 241.987 311.889 242.082 cv
311.214 242.538 311.684 243.486 312.33 243.486 cv
312.464 243.486 312.606 243.445 312.747 243.35 cv
313.422 242.893 312.952 241.946 312.307 241.946 cv
200.587 235.776 mo
199.399 235.776 198.236 236.404 197.766 237.875 cv
197.01 240.243 198.992 241.878 200.909 241.878 cv
202.097 241.878 203.259 241.25 203.729 239.779 cv
204.485 237.411 202.503 235.776 200.587 235.776 cv
624.352 227.464 mo
622.821 227.464 621.32 228.253 620.627 230.123 cv
619.431 233.351 622.171 235.716 624.821 235.716 cv
626.352 235.716 627.853 234.926 628.545 233.057 cv
629.742 229.828 627.002 227.464 624.352 227.464 cv
349.39 223.374 mo
347.496 223.374 345.643 224.387 344.947 226.745 cv
343.864 230.415 346.916 232.879 349.868 232.879 cv
351.762 232.879 353.614 231.866 354.31 229.508 cv
355.393 225.838 352.342 223.374 349.39 223.374 cv
280.186 226.6 mo
279.717 226.6 279.224 226.754 278.746 227.115 cv
276.675 228.678 278.26 231.59 280.297 231.59 cv
280.766 231.59 281.259 231.435 281.737 231.075 cv
283.808 229.511 282.222 226.6 280.186 226.6 cv
180.806 217.81 mo
180.094 217.81 179.336 217.978 178.552 218.357 cv
173.401 220.845 176.07 228.126 180.752 228.127 cv
181.464 228.127 182.221 227.959 183.006 227.58 cv
188.157 225.092 185.487 217.81 180.806 217.81 cv
569.716 222.96 mo
568.882 222.96 568.059 223.454 567.931 224.523 cv
567.778 225.808 568.799 226.523 569.803 226.523 cv
570.637 226.523 571.46 226.03 571.588 224.96 cv
571.741 223.675 570.72 222.96 569.716 222.96 cv
615.068 223.368 mo
614.638 223.368 614.195 223.718 614.341 224.255 cv
614.438 224.612 614.717 224.766 615.003 224.766 cv
615.432 224.766 615.875 224.416 615.729 223.879 cv
615.633 223.522 615.353 223.368 615.068 223.368 cv
126.076 212.675 mo
125.656 212.675 125.215 212.729 124.751 212.847 cv
119.034 214.292 120.676 222.622 125.854 222.622 cv
126.273 222.622 126.715 222.568 127.179 222.451 cv
132.896 221.006 131.254 212.675 126.076 212.675 cv
313.397 208.52 mo
311.175 208.52 308.984 209.835 308.648 212.683 cv
308.245 216.098 310.957 217.995 313.625 217.995 cv
315.847 217.995 318.038 216.68 318.374 213.832 cv
318.777 210.417 316.065 208.52 313.397 208.52 cv
520.701 215.498 mo
520.644 215.498 520.584 215.503 520.521 215.515 cv
519.475 215.71 519.7 217.255 520.662 217.255 cv
520.719 217.255 520.779 217.25 520.842 217.238 cv
521.888 217.043 521.663 215.498 520.701 215.498 cv
535.545 213.257 mo
534.474 213.257 533.392 213.992 533.5 215.37 cv
533.596 216.588 534.537 217.164 535.485 217.164 cv
536.557 217.165 537.639 216.429 537.53 215.052 cv
537.434 213.834 536.494 213.257 535.545 213.257 cv
385.986 210.629 mo
385.599 210.629 385.189 210.737 384.773 210.984 cv
382.532 212.317 383.928 215.466 386.017 215.466 cv
386.403 215.466 386.814 215.358 387.229 215.111 cv
389.47 213.777 388.074 210.629 385.986 210.629 cv
492.819 209.726 mo
489.804 209.726 489.193 214.565 492.454 215.083 cv
492.62 215.109 492.78 215.122 492.934 215.122 cv
495.948 215.122 496.56 210.283 493.298 209.765 cv
493.133 209.739 492.973 209.726 492.819 209.726 cv
332.314 210.277 mo
332.069 210.277 331.812 210.361 331.566 210.559 cv
330.563 211.367 331.374 212.78 332.381 212.781 cv
332.627 212.781 332.884 212.697 333.129 212.499 cv
334.133 211.691 333.321 210.277 332.314 210.277 cv
578.422 205.046 mo
578.205 205.046 577.975 205.091 577.735 205.188 cv
575.872 205.947 576.701 208.598 578.378 208.598 cv
578.594 208.598 578.824 208.554 579.065 208.456 cv
580.927 207.698 580.099 205.046 578.422 205.046 cv
206.095 204.784 mo
205.166 204.784 204.236 205.795 204.885 206.821 cv
205.157 207.251 205.546 207.429 205.936 207.429 cv
206.864 207.429 207.794 206.417 207.145 205.391 cv
206.873 204.962 206.484 204.784 206.095 204.784 cv
456.864 193.831 mo
456.278 193.831 455.656 193.938 455.003 194.171 cv
449.274 196.219 451.54 204.426 456.688 204.426 cv
457.274 204.426 457.896 204.32 458.549 204.087 cv
464.278 202.038 462.012 193.831 456.864 193.831 cv
382.572 196.354 mo
382.442 196.354 382.309 196.361 382.172 196.374 cv
377.756 196.799 378.257 203.467 382.452 203.468 cv
382.582 203.468 382.715 203.462 382.852 203.448 cv
387.268 203.024 386.766 196.354 382.572 196.354 cv
234.859 200.479 mo
234.569 200.479 234.283 200.642 234.207 201.011 cv
234.102 201.516 234.513 201.824 234.912 201.824 cv
235.203 201.824 235.488 201.66 235.564 201.292 cv
235.669 200.787 235.259 200.479 234.859 200.479 cv
68.0092 191.073 mo
65.5038 191.073 63.0305 192.568 62.6925 195.783 cv
62.295 199.563 65.2886 201.636 68.2381 201.636 cv
70.7435 201.636 73.2168 200.141 73.5549 196.925 cv
73.9523 193.146 70.9587 191.073 68.0092 191.073 cv
319.416 199.129 mo
318.928 199.129 318.424 199.539 318.608 200.145 cv
318.725 200.529 319.028 200.693 319.337 200.693 cv
319.826 200.694 320.33 200.283 320.146 199.677 cv
320.029 199.293 319.726 199.129 319.416 199.129 cv
16.2415 189.97 mo
15.9584 189.97 15.6652 189.992 15.36 190.038 cv
9.09734 190.985 10.2008 200.311 16.0209 200.312 cv
16.304 200.312 16.5972 200.29 16.9024 200.244 cv
23.1648 199.298 22.0616 189.97 16.2415 189.97 cv
620.435 191.268 mo
617.207 191.268 614.073 195.055 616.618 198.42 cv
617.553 199.657 618.755 200.17 619.943 200.17 cv
623.172 200.171 626.306 196.383 623.761 193.018 cv
622.826 191.781 621.624 191.268 620.435 191.268 cv
601.443 192.779 mo
600.456 192.779 599.468 193.226 598.758 194.305 cv
597.019 196.945 599.429 199.633 601.85 199.633 cv
602.837 199.633 603.825 199.186 604.535 198.108 cv
606.274 195.467 603.863 192.779 601.443 192.779 cv
99.7871 185.989 mo
98.9167 185.989 97.9966 186.25 97.0786 186.853 cv
92.5646 189.82 95.6301 196.156 99.9174 196.157 cv
100.788 196.157 101.708 195.896 102.626 195.293 cv
107.14 192.326 104.074 185.989 99.7871 185.989 cv
582.883 188.186 mo
581.036 188.186 579.21 189.3 578.997 191.673 cv
578.752 194.398 580.903 195.871 583.027 195.871 cv
584.875 195.871 586.701 194.757 586.914 192.384 cv
587.158 189.659 585.007 188.186 582.883 188.186 cv
547.866 185.839 mo
546.904 185.839 545.916 186.218 545.055 187.124 cv
542.252 190.071 545.096 194.101 548.23 194.101 cv
549.191 194.101 550.18 193.722 551.041 192.817 cv
553.844 189.869 551 185.839 547.866 185.839 cv
180.906 187.122 mo
179.904 187.122 178.916 187.616 178.358 188.8 cv
177.261 191.13 179.293 193.047 181.268 193.047 cv
182.271 193.048 183.258 192.554 183.816 191.37 cv
184.913 189.04 182.881 187.122 180.906 187.122 cv
168.205 182.226 mo
166.71 182.226 165.231 182.943 164.319 184.672 cv
162.397 188.316 165.622 191.519 168.779 191.519 cv
170.274 191.519 171.753 190.802 172.665 189.074 cv
174.587 185.429 171.363 182.226 168.205 182.226 cv
429.095 180.49 mo
429.037 180.49 428.978 180.491 428.919 180.492 cv
421.905 180.677 422.119 191.486 429.03 191.487 cv
429.089 191.487 429.147 191.486 429.207 191.485 cv
436.22 191.301 436.006 180.49 429.095 180.49 cv
377.021 179.513 mo
376.187 179.513 375.3 179.73 374.392 180.226 cv
369.083 183.125 372.149 190.599 377.036 190.6 cv
377.87 190.6 378.757 190.382 379.666 189.886 cv
384.975 186.988 381.908 179.513 377.021 179.513 cv
160.194 182.99 mo
159.972 182.99 159.735 183.046 159.492 183.173 cv
158.012 183.947 158.835 186.034 160.191 186.034 cv
160.413 186.034 160.65 185.978 160.893 185.851 cv
162.373 185.077 161.55 182.99 160.194 182.99 cv
517.115 176.16 mo
515.363 176.16 513.649 177.105 513.039 179.294 cv
512.109 182.625 514.866 184.82 517.535 184.82 cv
519.287 184.82 521.001 183.875 521.612 181.686 cv
522.541 178.356 519.784 176.16 517.115 176.16 cv
256.338 174.045 mo
255.767 174.045 255.162 174.145 254.526 174.366 cv
248.794 176.359 251.003 184.582 256.155 184.582 cv
256.725 184.582 257.331 184.482 257.967 184.261 cv
263.699 182.268 261.489 174.045 256.338 174.045 cv
245.028 178.143 mo
244.605 178.143 244.162 178.282 243.733 178.608 cv
241.882 180.015 243.306 182.616 245.129 182.617 cv
245.551 182.617 245.995 182.477 246.424 182.151 cv
248.275 180.745 246.851 178.143 245.028 178.143 cv
365.076 170.34 mo
364.502 170.34 363.891 170.47 363.256 170.764 cv
358.906 172.773 361.073 178.933 365.014 178.933 cv
365.588 178.933 366.199 178.803 366.834 178.509 cv
371.184 176.499 369.017 170.34 365.076 170.34 cv
243.277 172.554 mo
241.947 172.554 240.609 173.442 240.689 175.155 cv
240.763 176.748 241.995 177.518 243.233 177.518 cv
244.564 177.518 245.902 176.63 245.822 174.916 cv
245.748 173.324 244.516 172.554 243.277 172.554 cv
555.851 171.847 mo
554.996 171.847 554.153 172.35 554.014 173.446 cv
553.846 174.776 554.905 175.521 555.945 175.521 cv
556.8 175.521 557.643 175.018 557.782 173.922 cv
557.95 172.592 556.891 171.847 555.851 171.847 cv
138.412 167.66 mo
136.851 167.66 135.319 168.543 134.936 170.526 cv
134.421 173.189 136.575 174.786 138.676 174.786 cv
140.237 174.787 141.769 173.904 142.152 171.921 cv
142.667 169.257 140.513 167.66 138.412 167.66 cv
37.9971 163.013 mo
36.5024 163.013 35.0229 163.731 34.1113 165.459 cv
32.1888 169.104 35.4138 172.307 38.5713 172.307 cv
40.066 172.307 41.5454 171.589 42.4569 169.861 cv
44.3794 166.216 41.1546 163.013 37.9971 163.013 cv
581.429 164.32 mo
580.103 164.32 578.805 165.028 578.309 166.677 cv
577.53 169.265 579.685 171.014 581.77 171.014 cv
583.096 171.014 584.394 170.306 584.89 168.657 cv
585.669 166.069 583.514 164.32 581.429 164.32 cv
472.501 166.305 mo
472.501 166.305 li
472.559 169.24 474.836 170.688 477.117 170.688 cv
479.469 170.688 481.826 169.151 481.765 166.12 cv
481.707 163.184 479.43 161.737 477.148 161.737 cv
475.554 161.737 473.958 162.443 473.114 163.842 cv
472.376 164.349 471.95 165.289 472.501 166.305 cv
417.027 164.025 mo
415.315 164.025 413.564 165.306 413.95 167.485 cv
414.245 169.143 415.527 169.887 416.832 169.887 cv
418.543 169.887 420.295 168.607 419.908 166.428 cv
419.614 164.77 418.332 164.025 417.027 164.025 cv
400.258 163.859 mo
399.219 163.859 398.198 164.38 397.659 165.623 cv
396.65 167.955 398.663 169.791 400.614 169.792 cv
401.653 169.792 402.675 169.271 403.213 168.027 cv
404.222 165.696 402.209 163.859 400.258 163.859 cv
303.194 158.214 mo
300.15 158.214 297.012 161.084 298.604 164.72 cv
299.446 166.642 301.031 167.446 302.643 167.447 cv
305.686 167.447 308.824 164.577 307.232 160.941 cv
306.39 159.019 304.805 158.214 303.194 158.214 cv
244.734 162.83 mo
244.293 162.83 243.834 162.99 243.407 163.367 cv
241.797 164.789 243.206 167.067 244.874 167.067 cv
245.316 167.067 245.775 166.908 246.202 166.531 cv
247.812 165.109 246.403 162.83 244.734 162.83 cv
588.539 160.705 mo
587.015 160.705 585.5 161.656 585.419 163.618 cv
585.332 165.71 586.968 166.793 588.594 166.793 cv
590.118 166.793 591.633 165.842 591.714 163.88 cv
591.801 161.788 590.165 160.705 588.539 160.705 cv
315.002 163.905 mo
314.538 163.905 314.083 164.167 313.97 164.757 cv
313.82 165.545 314.457 166.017 315.079 166.017 cv
315.543 166.017 315.998 165.754 316.11 165.165 cv
316.261 164.376 315.623 163.905 315.002 163.905 cv
349.659 157.801 mo
349.602 157.801 349.544 157.802 349.484 157.805 cv
345.672 157.988 345.888 163.826 349.598 163.826 cv
349.656 163.826 349.714 163.825 349.773 163.822 cv
353.586 163.639 353.37 157.801 349.659 157.801 cv
372.141 158.614 mo
371.857 158.614 371.56 158.711 371.276 158.937 cv
370.104 159.872 371.045 161.522 372.216 161.522 cv
372.5 161.522 372.797 161.426 373.081 161.199 cv
374.253 160.264 373.312 158.614 372.141 158.614 cv
84.0953 155.368 mo
83.6468 155.368 83.2021 155.582 82.9214 156.097 cv
82.3166 157.206 83.3024 158.201 84.2703 158.201 cv
84.7189 158.201 85.1636 157.987 85.4444 157.472 cv
86.049 156.363 85.0631 155.368 84.0953 155.368 cv
185.856 145.195 mo
183.538 145.195 181.204 146.756 181.373 149.74 cv
181.527 152.471 183.638 153.783 185.762 153.783 cv
188.08 153.783 190.415 152.222 190.246 149.238 cv
190.091 146.507 187.981 145.195 185.856 145.195 cv
60.5952 147.405 mo
60.086 147.405 59.5815 147.717 59.5355 148.372 cv
59.4842 149.102 60.0581 149.489 60.6262 149.489 cv
61.1354 149.489 61.64 149.178 61.686 148.523 cv
61.7372 147.793 61.1633 147.405 60.5952 147.405 cv
342.671 138.987 mo
341.288 138.987 339.897 139.601 338.859 141.082 cv
336.198 144.878 339.695 148.922 343.244 148.922 cv
344.627 148.922 346.018 148.309 347.056 146.828 cv
349.717 143.032 346.22 138.987 342.671 138.987 cv
15.4084 143.295 mo
14.4626 143.295 13.5302 143.76 13.0011 144.876 cv
11.9557 147.081 13.88 148.903 15.7517 148.903 cv
16.6975 148.903 17.6299 148.438 18.1589 147.322 cv
19.2044 145.117 17.2802 143.295 15.4084 143.295 cv
376.038 142.82 mo
375.624 142.82 375.182 142.916 374.724 143.134 cv
371.671 144.584 373.231 148.902 376.002 148.903 cv
376.417 148.903 376.858 148.806 377.316 148.588 cv
380.369 147.138 378.81 142.82 376.038 142.82 cv
455.555 138.151 mo
452.702 138.151 449.813 140.138 450.163 143.802 cv
450.465 146.959 452.901 148.439 455.363 148.439 cv
458.217 148.439 461.106 146.453 460.755 142.789 cv
460.453 139.631 458.018 138.151 455.555 138.151 cv
528.367 140.362 mo
524.219 140.362 523.586 146.989 528.009 147.518 cv
528.178 147.538 528.343 147.548 528.502 147.548 cv
532.651 147.548 533.283 140.92 528.86 140.392 cv
528.691 140.372 528.526 140.362 528.367 140.362 cv
127.565 139.016 mo
126.789 139.016 126 139.341 125.356 140.121 cv
123.485 142.387 125.624 145.133 127.88 145.134 cv
128.655 145.134 129.444 144.809 130.088 144.029 cv
131.959 141.763 129.82 139.016 127.565 139.016 cv
418.507 133.355 mo
418.148 133.355 417.773 133.392 417.381 133.469 cv
411.205 134.689 412.61 143.789 418.27 143.79 cv
418.629 143.79 419.004 143.754 419.396 143.676 cv
425.573 142.457 424.167 133.355 418.507 133.355 cv
73.6375 130.793 mo
73.4226 130.793 73.2003 130.808 72.9705 130.837 cv
67.4614 131.55 68.2963 139.799 73.4577 139.799 cv
73.6726 139.799 73.8949 139.785 74.1247 139.755 cv
79.6336 139.042 78.7987 130.793 73.6375 130.793 cv
150.883 134.741 mo
149.473 134.741 148.03 135.798 148.353 137.592 cv
148.598 138.952 149.65 139.561 150.72 139.561 cv
152.13 139.561 153.573 138.503 153.249 136.709 cv
153.004 135.35 151.953 134.741 150.883 134.741 cv
525.962 129.149 mo
525.77 129.149 525.573 129.159 525.37 129.18 cv
519.221 129.809 519.963 139.081 525.788 139.082 cv
525.98 139.082 526.177 139.072 526.38 139.051 cv
532.529 138.422 531.788 129.149 525.962 129.149 cv
232.38 130.471 mo
230.132 130.471 227.807 132.45 228.791 135.204 cv
229.369 136.824 230.667 137.511 231.992 137.511 cv
234.24 137.511 236.565 135.532 235.581 132.778 cv
235.003 131.158 233.705 130.471 232.38 130.471 cv
213.637 130.04 mo
211.655 130.04 209.631 131.501 210.037 134.029 cv
210.354 136.003 211.878 136.896 213.428 136.896 cv
215.409 136.896 217.433 135.436 217.027 132.907 cv
216.711 130.934 215.186 130.04 213.637 130.04 cv
129.813 126.412 mo
128.65 126.412 127.472 126.909 126.535 128.106 cv
123.926 131.439 127.048 135.307 130.293 135.307 cv
131.456 135.307 132.635 134.81 133.571 133.613 cv
136.18 130.28 133.058 126.412 129.813 126.412 cv
478.506 130.495 mo
477.815 130.495 477.124 130.941 477.129 131.832 cv
477.134 132.713 477.819 133.153 478.505 133.153 cv
479.195 133.153 479.886 132.706 479.881 131.816 cv
479.876 130.934 479.191 130.495 478.506 130.495 cv
370.206 128.66 mo
369.774 128.66 369.331 128.829 368.941 129.233 cv
367.662 130.561 368.947 132.397 370.368 132.397 cv
370.8 132.397 371.244 132.228 371.633 131.824 cv
372.912 130.496 371.628 128.66 370.206 128.66 cv
534.587 124.304 mo
532.475 124.304 530.343 125.742 530.531 128.46 cv
530.7 130.899 532.584 132.061 534.483 132.062 cv
536.596 132.062 538.728 130.624 538.539 127.905 cv
538.37 125.466 536.486 124.304 534.587 124.304 cv
257.358 121.521 mo
255.019 121.521 252.693 122.98 252.57 125.993 cv
252.438 129.201 254.948 130.862 257.442 130.862 cv
259.781 130.862 262.107 129.403 262.23 126.39 cv
262.362 123.182 259.852 121.521 257.358 121.521 cv
311.903 120.652 mo
311.152 120.652 310.36 120.89 309.582 121.444 cv
306.03 123.976 308.617 128.964 312.055 128.964 cv
312.807 128.964 313.599 128.726 314.376 128.172 cv
317.929 125.64 315.342 120.652 311.903 120.652 cv
115.204 120.774 mo
114.261 120.774 113.303 121.173 112.53 122.132 cv
110.329 124.865 112.899 128.11 115.591 128.111 cv
116.534 128.111 117.492 127.712 118.265 126.753 cv
120.466 124.02 117.895 120.774 115.204 120.774 cv
75.4139 116.771 mo
74.6 116.771 73.7525 117.064 72.9631 117.754 cv
69.9602 120.382 72.5676 124.629 75.6686 124.629 cv
76.4824 124.629 77.3298 124.337 78.1192 123.646 cv
81.1221 121.018 78.5149 116.771 75.4139 116.771 cv
98.0523 118.022 mo
97.7298 118.022 97.387 118.081 97.0276 118.209 cv
93.8621 119.336 95.1099 123.872 97.9546 123.872 cv
98.2771 123.872 98.6197 123.814 98.9791 123.686 cv
102.145 122.558 100.897 118.022 98.0523 118.022 cv
342.342 119.046 mo
342.078 119.046 341.797 119.115 341.51 119.27 cv
339.81 120.187 340.782 122.581 342.344 122.581 cv
342.608 122.581 342.889 122.513 343.176 122.358 cv
344.876 121.441 343.904 119.046 342.342 119.046 cv
580.349 111.47 mo
576.512 111.47 573.03 116.402 576.474 120.008 cv
577.525 121.108 578.731 121.569 579.903 121.569 cv
583.74 121.57 587.222 116.637 583.778 113.032 cv
582.727 111.931 581.521 111.47 580.349 111.47 cv
526.133 112.695 mo
524.138 112.695 522.146 113.974 522.134 116.546 cv
522.122 119.133 524.135 120.434 526.146 120.434 cv
528.14 120.434 530.133 119.154 530.145 116.583 cv
530.157 113.995 528.144 112.695 526.133 112.695 cv
531.493 118.082 mo
531.048 118.082 530.612 118.322 530.457 118.879 cv
530.222 119.725 530.922 120.282 531.6 120.282 cv
532.046 120.282 532.482 120.041 532.636 119.484 cv
532.871 118.638 532.171 118.082 531.493 118.082 cv
44.9279 113.917 mo
44.5148 113.917 44.1047 114.112 43.8401 114.583 cv
43.2593 115.617 44.1823 116.562 45.0909 116.562 cv
45.504 116.562 45.914 116.367 46.1785 115.896 cv
46.7595 114.862 45.8365 113.917 44.9279 113.917 cv
106.879 106.309 mo
106.024 106.309 105.121 106.573 104.227 107.184 cv
99.9867 110.083 102.966 116.036 107.029 116.036 cv
107.885 116.036 108.787 115.773 109.681 115.161 cv
113.922 112.262 110.942 106.309 106.879 106.309 cv
294.749 112.056 mo
294.576 112.056 294.392 112.086 294.199 112.153 cv
292.444 112.758 293.115 115.277 294.692 115.277 cv
294.865 115.277 295.049 115.247 295.242 115.18 cv
296.997 114.575 296.326 112.056 294.749 112.056 cv
514.668 103.167 mo
514.146 103.167 513.593 103.245 513.013 103.414 cv
506.781 105.228 508.821 114.246 514.438 114.247 cv
514.96 114.247 515.513 114.169 516.094 114 cv
522.325 112.186 520.286 103.167 514.668 103.167 cv
341.303 103.039 mo
339.876 103.039 338.441 103.673 337.373 105.204 cv
334.646 109.114 338.245 113.265 341.895 113.265 cv
343.322 113.265 344.757 112.631 345.825 111.1 cv
348.552 107.19 344.953 103.039 341.303 103.039 cv
435.232 105.656 mo
433.128 108.634 435.889 111.898 438.719 111.898 cv
439.791 111.899 440.872 111.431 441.703 110.304 cv
443.469 107.911 442.054 105.312 439.96 104.358 cv
439.456 103.994 438.877 103.832 438.294 103.832 cv
437.058 103.832 435.808 104.563 435.232 105.656 cv
177.238 102.149 mo
177.105 102.149 176.97 102.154 176.832 102.164 cv
170.801 102.592 171.307 111.766 177.107 111.767 cv
177.239 111.767 177.374 111.762 177.513 111.752 cv
183.544 111.324 183.038 102.149 177.238 102.149 cv
407.777 99.485 mo
406.722 99.485 405.613 99.8328 404.539 100.646 cv
399.894 104.163 403.457 110.693 408.029 110.693 cv
409.084 110.693 410.193 110.345 411.267 109.532 cv
415.912 106.015 412.349 99.485 407.777 99.485 cv
606.803 98.9889 mo
606.285 98.9889 605.735 99.0758 605.158 99.2658 cv
599.668 101.074 601.682 108.969 606.617 108.97 cv
607.135 108.97 607.685 108.883 608.262 108.693 cv
613.752 106.885 611.739 98.9889 606.803 98.9889 cv
266.445 103.649 mo
266.039 103.649 265.608 103.761 265.172 104.02 cv
262.806 105.42 264.272 108.745 266.476 108.745 cv
266.881 108.745 267.312 108.632 267.748 108.374 cv
270.115 106.974 268.648 103.649 266.445 103.649 cv
329.791 103.791 mo
329.748 103.791 329.704 103.794 329.659 103.799 cv
328.438 103.941 328.605 105.774 329.754 105.774 cv
329.797 105.774 329.841 105.771 329.887 105.766 cv
331.107 105.625 330.941 103.791 329.791 103.791 cv
533.757 103.244 mo
533.286 103.244 532.825 103.494 532.643 104.078 cv
532.353 105.009 533.13 105.646 533.882 105.646 cv
534.353 105.646 534.815 105.396 534.997 104.811 cv
535.286 103.88 534.509 103.244 533.757 103.244 cv
555.303 99.5098 mo
554.221 99.5098 553.16 100.066 552.664 101.385 cv
551.801 103.68 553.752 105.371 555.638 105.371 cv
556.72 105.371 557.781 104.814 558.276 103.496 cv
559.139 101.201 557.189 99.5098 555.303 99.5098 cv
294.822 100.675 mo
294.055 100.675 293.3 101.058 292.896 101.974 cv
292.131 103.709 293.632 105.089 295.088 105.089 cv
295.856 105.089 296.61 104.706 297.014 103.79 cv
297.78 102.055 296.278 100.675 294.822 100.675 cv
461.184 95.2923 mo
460.107 95.2923 458.995 95.7038 458 96.6843 cv
454.584 100.052 457.866 104.928 461.571 104.929 cv
462.648 104.929 463.76 104.517 464.755 103.537 cv
468.171 100.169 464.889 95.2923 461.184 95.2923 cv
489.46 93.5112 mo
489.439 93.5112 489.42 93.5113 489.4 93.5114 cv
482.468 93.5735 482.534 104.315 489.436 104.316 cv
489.457 104.316 489.476 104.316 489.496 104.315 cv
496.428 104.253 496.363 93.5112 489.46 93.5112 cv
92.4258 96.9589 mo
90.8522 96.9589 89.2296 98.2343 89.7529 100.206 cv
90.1029 101.525 91.1351 102.098 92.1893 102.098 cv
93.7628 102.098 95.3855 100.822 94.8622 98.8505 cv
94.5122 97.5314 93.48 96.9589 92.4258 96.9589 cv
20.5366 93.9376 mo
18.9831 93.9376 17.4505 94.8611 17.23 96.8538 cv
16.9686 99.216 18.8417 100.519 20.686 100.519 cv
22.2392 100.519 23.772 99.5949 23.9926 97.6023 cv
24.254 95.2403 22.3808 93.9376 20.5366 93.9376 cv
637.466 91.7836 mo
636.089 91.7836 634.741 92.512 634.199 94.2173 cv
633.328 96.9579 635.621 98.846 637.838 98.8462 cv
639.215 98.8463 640.562 98.1178 641.104 96.4124 cv
641.976 93.6719 639.683 91.7836 637.466 91.7836 cv
592.66 96.2227 mo
592.472 96.2227 592.272 96.2736 592.069 96.3899 cv
590.93 97.0408 591.615 98.6417 592.669 98.6419 cv
592.858 98.6419 593.057 98.591 593.261 98.4747 cv
594.399 97.8238 593.714 96.2227 592.66 96.2227 cv
106.137 93.8282 mo
105.806 93.8282 105.46 93.943 105.133 94.2131 cv
103.816 95.2969 104.901 97.1522 106.231 97.1522 cv
106.562 97.1522 106.908 97.0374 107.236 96.7673 cv
108.552 95.6835 107.467 93.8282 106.137 93.8282 cv
332.139 92.1732 mo
332.103 92.1732 332.067 92.1742 332.03 92.1763 cv
330.059 92.2899 330.194 95.2993 332.102 95.2993 cv
332.137 95.2993 332.174 95.2983 332.21 95.2962 cv
334.181 95.1825 334.047 92.1732 332.139 92.1732 cv
198.208 88.509 mo
197.803 88.509 197.372 88.6002 196.924 88.8047 cv
193.82 90.2219 195.35 94.619 198.16 94.6193 cv
198.565 94.6193 198.996 94.5281 199.444 94.3236 cv
202.548 92.9062 201.018 88.509 198.208 88.509 cv
645.563 92.4249 mo
645.146 92.4249 644.734 92.6719 644.671 93.2071 cv
644.595 93.8486 645.105 94.2049 645.606 94.205 cv
646.023 94.2051 646.435 93.958 646.498 93.4227 cv
646.574 92.7812 646.064 92.4249 645.563 92.4249 cv
373.604 91.0563 mo
373.317 91.0563 373.02 91.1625 372.748 91.4145 cv
371.763 92.3268 372.66 93.7253 373.7 93.7253 cv
373.987 93.7253 374.284 93.6191 374.556 93.3672 cv
375.541 92.4547 374.644 91.0563 373.604 91.0563 cv
486.251 89.1832 mo
485.22 89.1832 484.156 90.1093 484.634 91.3624 cv
484.906 92.0754 485.482 92.3764 486.069 92.3765 cv
487.099 92.3767 488.164 91.4504 487.686 90.1973 cv
487.414 89.4843 486.838 89.1832 486.251 89.1832 cv
292.978 81.338 mo
286.939 81.338 286.561 90.8536 292.787 91.1574 cv
292.885 91.1622 292.981 91.1645 293.076 91.1646 cv
299.115 91.165 299.493 81.6491 293.266 81.3451 cv
293.169 81.3403 293.072 81.338 292.978 81.338 cv
164.681 82.2376 mo
162.572 82.2376 160.392 84.0288 161.22 86.6403 cv
161.735 88.2631 163.021 88.9574 164.333 88.9575 cv
166.442 88.9576 168.622 87.1662 167.794 84.5549 cv
167.279 82.932 165.994 82.2376 164.681 82.2376 cv
281.411 79.7186 mo
280.184 79.7186 278.947 80.2541 277.996 81.5456 cv
275.467 84.9791 278.654 88.777 281.92 88.7772 cv
283.147 88.7773 284.385 88.2418 285.336 86.9503 cv
287.864 83.5166 284.678 79.7186 281.411 79.7186 cv
118.681 77.4145 mo
117.588 77.4145 116.445 77.7929 115.36 78.683 cv
110.994 82.2664 114.582 88.4203 118.989 88.4205 cv
120.082 88.4205 121.225 88.042 122.31 87.1518 cv
126.676 83.5687 123.087 77.4145 118.681 77.4145 cv
229.643 82.2939 mo
228.324 82.2939 226.981 83.2521 227.225 84.9373 cv
227.42 86.2839 228.459 86.8979 229.515 86.8979 cv
230.833 86.898 232.177 85.9397 231.932 84.2545 cv
231.737 82.9079 230.698 82.2939 229.643 82.2939 cv
328.631 84.0136 mo
328.308 84.0136 327.985 84.1596 327.754 84.5123 cv
327.188 85.3745 327.974 86.2498 328.764 86.2498 cv
329.086 86.2498 329.409 86.1037 329.641 85.751 cv
330.206 84.889 329.42 84.0136 328.631 84.0136 cv
442.438 75.5876 mo
441.926 75.5876 441.384 75.6702 440.815 75.8502 cv
435.18 77.632 437.172 85.7518 442.24 85.7529 cv
442.752 85.753 443.294 85.6704 443.863 85.4903 cv
449.498 83.7083 447.507 75.5876 442.438 75.5876 cv
459.72 76.2388 mo
458.497 76.2388 457.265 76.7765 456.331 78.0743 cv
453.888 81.4669 457.026 85.1554 460.228 85.1557 cv
461.451 85.1558 462.683 84.618 463.617 83.3202 cv
466.06 79.9276 462.922 76.2388 459.72 76.2388 cv
418.16 80.9924 mo
417.157 80.9924 416.156 81.633 416.143 82.9256 cv
416.13 84.2366 417.151 84.898 418.17 84.898 cv
419.173 84.898 420.174 84.2573 420.186 82.9648 cv
420.199 81.6538 419.178 80.9924 418.16 80.9924 cv
80.3512 78.7414 mo
78.8649 78.7414 77.3664 79.7483 77.4882 81.6611 cv
77.5984 83.3926 78.936 84.2206 80.2836 84.2207 cv
81.7699 84.2208 83.2685 83.2138 83.1467 81.301 cv
83.0365 79.5695 81.6989 78.7414 80.3512 78.7414 cv
374.407 76.8758 mo
372.027 76.8758 369.573 79.1104 370.806 81.9575 cv
371.462 83.4719 372.709 84.1065 373.977 84.1066 cv
376.356 84.1067 378.811 81.8719 377.577 79.0248 cv
376.921 77.5104 375.675 76.8758 374.407 76.8758 cv
565.378 77.4183 mo
564.273 77.4183 563.182 77.9596 562.554 79.2595 cv
561.297 81.8581 563.571 84.0291 565.784 84.0291 cv
566.89 84.0292 567.98 83.4877 568.609 82.1878 cv
569.866 79.5893 567.592 77.4183 565.378 77.4183 cv
150.708 73.5782 mo
150.34 73.5782 149.955 73.6178 149.552 73.7021 cv
143.561 74.9556 145.001 83.7617 150.475 83.7627 cv
150.843 83.7628 151.228 83.7232 151.631 83.6389 cv
157.622 82.3855 156.182 73.5782 150.708 73.5782 cv
511.992 75.4484 mo
511.371 75.4484 510.712 75.6189 510.043 76.0093 cv
506.365 78.1545 508.615 83.325 512.033 83.3254 cv
512.654 83.3255 513.313 83.1549 513.982 82.7645 cv
517.661 80.6193 515.41 75.4484 511.992 75.4484 cv
322.327 78.7967 mo
322.036 78.7967 321.74 78.9165 321.495 79.2042 cv
320.761 80.0628 321.576 81.1335 322.443 81.1335 cv
322.733 81.1335 323.029 81.0136 323.275 80.726 cv
324.009 79.8675 323.194 78.7967 322.327 78.7967 cv
493.552 70.672 mo
493.094 70.672 492.609 70.7468 492.099 70.9102 cv
487.122 72.5057 488.903 79.6734 493.38 79.6744 cv
493.837 79.6745 494.322 79.5996 494.832 79.4362 cv
499.809 77.8407 498.028 70.672 493.552 70.672 cv
58.6075 64.928 mo
57.2166 64.928 55.804 65.5155 54.6639 66.9294 cv
51.4143 70.9592 55.2058 75.7498 59.1767 75.7501 cv
60.5675 75.7501 61.9801 75.1625 63.1203 73.7487 cv
66.3701 69.7188 62.5785 64.928 58.6075 64.928 cv
113.854 66.681 mo
111.681 66.681 109.515 68.0577 109.456 70.8584 cv
109.396 73.749 111.65 75.2203 113.896 75.2204 cv
116.069 75.2204 118.235 73.8437 118.294 71.043 cv
118.354 68.1525 116.1 66.681 113.854 66.681 cv
529.171 71.235 mo
528.363 71.235 527.541 71.8156 527.677 72.8498 cv
527.789 73.6923 528.439 74.079 529.098 74.079 cv
529.906 74.0791 530.728 73.4985 530.591 72.4644 cv
530.48 71.6218 529.83 71.235 529.171 71.235 cv
370.563 64.6696 mo
368.792 64.6696 367.055 65.6643 366.596 67.9101 cv
365.969 70.9763 368.456 72.8372 370.879 72.8373 cv
372.65 72.8374 374.386 71.8427 374.846 69.5969 cv
375.473 66.5306 372.985 64.6696 370.563 64.6696 cv
337.166 67.3044 mo
337.101 67.3044 337.034 67.3069 336.966 67.312 cv
334.147 67.524 334.398 71.8062 337.102 71.8066 cv
337.168 71.8066 337.234 71.8041 337.303 71.799 cv
340.122 71.5872 339.872 67.3044 337.166 67.3044 cv
195.656 61.9083 mo
192.734 61.9083 189.74 64.8207 191.467 68.2258 cv
192.304 69.8765 193.707 70.5633 195.126 70.5635 cv
198.049 70.5638 201.042 67.6511 199.315 64.246 cv
198.478 62.5953 197.076 61.9083 195.656 61.9083 cv
478.332 59.2545 mo
476.959 59.2545 475.559 59.8199 474.393 61.1774 cv
470.9 65.2447 474.764 70.3387 478.882 70.3391 cv
480.254 70.3392 481.654 69.7737 482.82 68.4162 cv
486.314 64.3489 482.45 59.2545 478.332 59.2545 cv
585.514 65.4602 mo
585.349 65.4602 585.174 65.4869 584.991 65.5454 cv
583.187 66.12 583.828 68.7192 585.451 68.7195 cv
585.616 68.7195 585.791 68.6927 585.974 68.6343 cv
587.779 68.0596 587.137 65.4602 585.514 65.4602 cv
425.53 65.2939 mo
425.187 65.2939 424.831 65.4219 424.507 65.7258 cv
423.345 66.8153 424.414 68.4664 425.647 68.4664 cv
425.991 68.4664 426.347 68.3384 426.671 68.0345 cv
427.833 66.945 426.763 65.2939 425.53 65.2939 cv
631.845 60.1477 mo
631.164 60.1477 630.447 60.3646 629.745 60.8694 cv
626.557 63.1586 628.894 67.634 631.985 67.6341 cv
632.666 67.6341 633.383 67.4173 634.086 66.9125 cv
637.272 64.6233 634.936 60.1477 631.845 60.1477 cv
248.832 64.4466 mo
248.586 64.4466 248.333 64.5411 248.108 64.7664 cv
247.346 65.5299 248.088 66.6198 248.921 66.6199 cv
249.167 66.6199 249.42 66.5254 249.644 66.3001 cv
250.407 65.5366 249.665 64.4466 248.832 64.4466 cv
306.492 52.8515 mo
306.36 52.8515 306.225 52.8561 306.087 52.8655 cv
299.844 53.293 300.349 62.796 306.36 62.7968 cv
306.493 62.7968 306.627 62.7922 306.765 62.7827 cv
313.009 62.3554 312.503 52.8515 306.492 52.8515 cv
231.942 53.6694 mo
229.527 53.6694 227.093 55.3072 227.296 58.414 cv
227.479 61.2186 229.646 62.5584 231.829 62.5587 cv
234.244 62.5589 236.678 60.9209 236.475 57.814 cv
236.292 55.0093 234.125 53.6694 231.942 53.6694 cv
108.228 56.7717 mo
107.49 56.7717 106.742 57.0885 106.151 57.8521 cv
104.522 59.9589 106.492 62.3809 108.533 62.3812 cv
109.272 62.3813 110.02 62.0644 110.61 61.3008 cv
112.24 59.1941 110.27 56.7717 108.228 56.7717 cv
143.765 56.9961 mo
143.606 56.9961 143.437 57.0263 143.26 57.093 cv
141.787 57.6489 142.398 59.7546 143.723 59.7548 cv
143.882 59.7548 144.051 59.7246 144.228 59.6579 cv
145.702 59.1017 145.09 56.9961 143.765 56.9961 cv
530.783 55.6996 mo
530.643 55.6996 530.494 55.7239 530.338 55.7772 cv
528.905 56.2663 529.448 58.3242 530.736 58.3242 cv
530.876 58.3242 531.025 58.2999 531.181 58.2467 cv
532.614 57.7576 532.071 55.6996 530.783 55.6996 cv
269.777 53.9618 mo
268.73 53.9618 267.687 54.6196 267.643 55.9693 cv
267.597 57.3874 268.705 58.1163 269.807 58.1164 cv
270.855 58.1164 271.897 57.4586 271.941 56.109 cv
271.988 54.6908 270.88 53.9618 269.777 53.9618 cv
341.724 50.5122 mo
341.134 50.5122 340.509 50.6845 339.882 51.0818 cv
336.69 53.1034 338.789 57.585 341.798 57.5854 cv
342.388 57.5855 343.013 57.4131 343.64 57.0159 cv
346.832 54.9941 344.733 50.5122 341.724 50.5122 cv
196.638 54.5307 mo
194.833 54.5307 194.774 57.3566 196.61 57.4023 cv
196.624 57.4027 196.639 57.4028 196.654 57.4028 cv
198.458 57.4029 198.517 54.577 196.682 54.5313 cv
196.667 54.5309 196.652 54.5307 196.638 54.5307 cv
360.839 50.9347 mo
360.432 50.9347 360 51.037 359.555 51.2689 cv
356.84 52.685 358.346 56.5118 360.832 56.5121 cv
361.238 56.5122 361.671 56.4099 362.115 56.1779 cv
364.83 54.7621 363.324 50.9347 360.839 50.9347 cv
42.4897 47.1986 mo
41.7701 47.1986 41.0078 47.4081 40.2424 47.8906 cv
36.3303 50.3568 38.8927 55.8496 42.5769 55.8504 cv
43.2967 55.8506 44.0586 55.641 44.8243 55.1583 cv
48.7367 52.6919 46.1744 47.1986 42.4897 47.1986 cv
452.375 50.9112 mo
452.081 50.9112 451.768 50.974 451.441 51.114 cv
449.037 52.145 450.158 55.5591 452.326 55.5592 cv
452.621 55.5592 452.934 55.4964 453.26 55.3563 cv
455.664 54.3256 454.544 50.9112 452.375 50.9112 cv
543.49 43.5206 mo
543.15 43.5206 542.793 43.5563 542.42 43.6322 cv
536.721 44.7915 538.055 53.1782 543.27 53.1783 cv
543.61 53.1783 543.967 53.1426 544.34 53.0668 cv
550.038 51.9075 548.705 43.5206 543.49 43.5206 cv
624.523 50.7713 mo
624.208 50.7713 623.894 50.9186 623.685 51.2744 cv
623.213 52.0786 623.935 52.8347 624.65 52.8348 cv
624.965 52.8348 625.279 52.6875 625.487 52.3317 cv
625.959 51.5274 625.237 50.7713 624.523 50.7713 cv
383.252 44.4438 mo
382.213 44.4438 381.164 44.8954 380.353 45.9844 cv
378.178 48.905 380.892 52.1642 383.682 52.1645 cv
384.721 52.1645 385.77 51.7129 386.581 50.6238 cv
388.757 47.7035 386.042 44.4438 383.252 44.4438 cv
158.494 46.0417 mo
156.491 46.0417 154.563 48.4283 156.18 50.4855 cv
156.757 51.2195 157.482 51.5245 158.198 51.5245 cv
160.201 51.5247 162.129 49.1379 160.512 47.0809 cv
159.936 46.3469 159.21 46.0417 158.494 46.0417 cv
390.531 36.4471 mo
389.689 36.4471 388.816 36.7599 388.019 37.502 cv
385.146 40.1776 387.776 44.2579 390.816 44.2581 cv
391.658 44.2581 392.532 43.9453 393.328 43.2031 cv
396.201 40.5277 393.571 36.4471 390.531 36.4471 cv
586.435 36.6148 mo
586.408 36.6148 586.381 36.6154 586.354 36.6165 cv
584.285 36.7018 584.385 39.8765 586.407 39.8768 cv
586.434 39.8768 586.461 39.8763 586.488 39.8751 cv
588.558 39.7898 588.457 36.6148 586.435 36.6148 cv
459.827 27.8343 mo
457.848 27.8343 455.905 28.9675 455.475 31.4889 cv
454.917 34.7616 457.549 36.6777 460.121 36.6779 cv
462.1 36.6781 464.043 35.5448 464.473 33.0235 cv
465.031 29.7507 462.399 27.8343 459.827 27.8343 cv
341.962 28.2061 mo
341.022 28.2061 340.052 28.5663 339.186 29.4246 cv
336.229 32.3582 339.085 36.5828 342.302 36.5832 cv
343.241 36.5833 344.211 36.2229 345.077 35.3646 cv
348.035 32.4313 345.179 28.2061 341.962 28.2061 cv
641.496 30.2514 mo
640.217 30.2514 638.916 31.1658 639.123 32.8042 cv
639.293 34.1508 640.332 34.7709 641.385 34.771 cv
642.665 34.7712 643.965 33.8567 643.758 32.2183 cv
643.588 30.8717 642.549 30.2514 641.496 30.2514 cv
611.736 22.003 mo
610.165 22.003 608.6 22.7286 607.527 24.4814 cv
605.032 28.5589 608.714 32.5014 612.374 32.5019 cv
613.945 32.5021 615.511 31.7762 616.583 30.0234 cv
619.078 25.946 615.396 22.003 611.736 22.003 cv
510.574 24.6411 mo
507.735 24.6411 505.03 28.0778 507.374 30.9478 cv
508.186 31.9416 509.187 32.355 510.172 32.355 cv
513.011 32.355 515.716 28.9182 513.372 26.0482 cv
512.56 25.0545 511.559 24.6411 510.574 24.6411 cv
118.431 25.4252 mo
117.843 25.4252 117.222 25.6026 116.602 26.013 cv
113.582 28.016 115.649 32.256 118.523 32.2562 cv
119.111 32.2562 119.733 32.0788 120.352 31.6683 cv
123.373 29.6654 121.306 25.4252 118.431 25.4252 cv
204.731 23.1912 mo
202.267 23.1912 199.779 24.8713 200.005 28.0414 cv
200.208 30.8774 202.398 32.227 204.606 32.2272 cv
207.071 32.2274 209.558 30.5471 209.332 27.3769 cv
209.13 24.5409 206.94 23.1912 204.731 23.1912 cv
145.481 25.0805 mo
144.578 25.0805 143.664 25.4689 142.945 26.4049 cv
140.969 28.9756 143.37 31.9156 145.855 31.9156 cv
146.758 31.9156 147.673 31.5271 148.392 30.5912 cv
150.367 28.0206 147.966 25.0805 145.481 25.0805 cv
248.303 24.4472 mo
247.09 24.4472 245.901 25.0734 245.355 26.5551 cv
244.415 29.107 246.58 30.9711 248.673 30.9712 cv
249.886 30.9713 251.074 30.3451 251.62 28.8635 cv
252.561 26.3114 250.396 24.4472 248.303 24.4472 cv
65.732 18.306 mo
62.57 18.306 59.4115 21.7848 61.6595 25.2566 cv
62.5857 26.6869 63.8916 27.2796 65.1965 27.2798 cv
68.3587 27.2802 71.5171 23.801 69.269 20.3293 cv
68.3429 18.899 67.0369 18.306 65.732 18.306 cv
282.563 18.3332 mo
281.639 18.3332 280.676 18.6652 279.78 19.4502 cv
276.373 22.4342 279.333 27.2521 282.853 27.2526 cv
283.777 27.2527 284.739 26.9205 285.635 26.1355 cv
289.042 23.1517 286.082 18.3332 282.563 18.3332 cv
353.936 15.8737 mo
351.98 15.8737 350.051 18.093 351.515 20.19 cv
352.086 21.0082 352.855 21.3474 353.619 21.3475 cv
355.575 21.3478 357.504 19.1281 356.04 17.0312 cv
355.469 16.213 354.7 15.8737 353.936 15.8737 cv
340.104 12.8581 mo
339.305 12.8581 338.491 13.1923 337.825 13.9959 cv
335.887 16.3351 338.097 19.1781 340.429 19.1783 cv
341.228 19.1783 342.042 18.8441 342.708 18.0404 cv
344.646 15.7011 342.436 12.8581 340.104 12.8581 cv
257.415 299.864 mo
257.354 299.838 li
257.349 299.833 li
257.37 299.842 257.392 299.852 257.415 299.864 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.109804 0 .301961 ]
/C1 [.109804 0 .301961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.752941 .843137 1 ]
/C1 [.109804 0 .301961 ]
/N 1.30957 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.752941 .843137 1 ]
/C1 [.752941 .843137 1 ]
/N 1 
>>
]
/Bounds [.00537634 .827957 ]
/Encode [0 1 1 0 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~*#oq=*ZlLJ+sS?Z-7:2j.P!&%/h\n51,CaE2E*TU3]fGe5!M:u6:4.07Rfm=8P2WL9hnJ\;,U=l<E3($
=BSg3>[:ZC?XR;O@q9._B4kmlC27X&DJjB3EH6,BFEMbNG^4R\H[L6jIXcm!JqAW.KnbA<Ll%"HMi<XU
NfT9aOckomPa.Q$Q^F2/R[]h;SXuFFTV8'RUSFW]V5C/gW2ZbrWiN5&Xfeh1YHY79ZEggC['[6K[^NZT
\@B)[]"5Mc]Y(nj]tV4p^V@Ou^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$
~>
<~!!!!#!sAf5#RUqJ%M'*`',2/t(`=84*?QCI+s\H]-RgMq/M8\11,CaE2`NfY4?Ykm5sdq,77Tm?8kVlR
:Jane<)lt#=^#$7?!^oI@Uiq[B4u!oCM[j*E,fo>FEMbNG^=^aI=?ZrJV&N-KnkJ@MMmFQNfT9aP*;,q
QC!u,R[]h<StD[LU8+N\VPg>jWN*##Xfek3Z*CU@['d?O\@B)\]=bhj^;%J!_8=+.`5Ta:a2lBEb0.uP
c-=P[cd:%ddF-LmeC<!ue^i=&f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+
~>
<~9he>W:Jk"g<)lt#=BSg3?!^lG@:E_WAS,RgBkhF#DJsK6EcZ>FG'A1VH@($fIXcm!JqJ`1L51SAMMmFQ
NfT9aP*;,qQC!u,R[]h<StD[LU8+N\VPg>jWN*##Xfek3Z*L[A['d?O\@K2_]=bhk^VI\%_Sa=2`lH-@
ai_fNbg"GZd*U1ge'umtf%8R,g"P38gtgiDhr*JPioB([jlY^gkih9rlKdg'mI'E2n*ol;o()DEo_%nN
p@n=Vq"aa^qYU0fr;?Nlrr2ors8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
660.652 311.33 mo
660.652 579 li
.00247842 579 li
.00247842 327.53 li
10.2024 333.49 li
21.7824 333.49 li
25.2824 342.26 li
25.2824 347.88 li
33.7024 354.87 li
43.5226 354.87 li
43.5226 358.75 li
49.4924 358.75 li
56.8526 354.87 li
60.3625 358.75 li
82.1124 358.75 li
82.1124 351.38 li
86.6725 346.47 li
97.1924 346.47 li
109.502 349 li
142.502 327.53 li
164.003 330.79 li
179.503 314.5 li
189.002 319.1 li
222.733 290.86 li
236.292 290.86 li
278.962 309.05 li
319.973 302.1 li
324.273 306.4 li
372.233 300.12 li
382.492 301.77 li
395.063 296.08 li
407.293 296.08 li
423.172 305.74 li
436.073 293.08 li
441.692 293.08 li
445.833 290.94 li
445.992 290.86 li
460.552 303.42 li
460.552 309.71 li
467.823 315.33 li
475.432 310.37 li
479.732 319.1 li
495.333 319.1 li
511.982 298.96 li
518.672 290.86 li
527.333 290.86 li
535.332 303.33 li
550.672 296.08 li
660.652 311.33 li
.882353 .854902 .909804 rgb
f
-36.1082 414.22 mo
-36.1082 414.22 54.2254 383.312 53.0095 382.775 cv
50.5026 381.667 101.82 366.303 101.82 366.303 cv
118.006 381.956 li
134.804 394.972 li
167.754 417.911 li
189.788 434.93 li
169.823 412.642 li
182.096 410.517 li
265.858 411.386 li
257.715 395.181 li
275.882 379.673 li
341.901 354.874 li
471.009 359.323 li
515.336 326.667 li
660.656 330.787 li
660.656 330.787 660.656 422.667 660.656 430.667 cv
660.656 438.667 324.002 499.443 324.002 499.443 cv
75.4926 512.145 li
-30.4683 529.508 li
-36.1082 414.22 li
.788235 .72549 .85098 rgb
f
179.503 314.5 mo
184.878 325.238 li
169.913 333.659 li
196.498 335.944 li
203.436 330.921 li
189.002 319.1 li
179.503 314.5 li
f
33.7024 354.87 mo
47.669 366.31 li
50.5026 381.667 li
19.8333 350.648 li
21.7824 333.49 li
25.2824 342.26 li
33.7024 354.87 li
f
10.2024 346.64 mo
-7.0724 340.065 li
.0025 327.53 li
10.2024 333.49 li
10.2024 346.64 li
cp
f
113.003 400.667 mo
126.275 410.25 li
139.674 406.301 li
109.003 371.84 li
149.252 400.667 li
134.918 377.75 li
173.92 396.209 li
130.547 359.318 li
119.85 359.318 li
89.3358 359.318 li
92.7394 377.75 li
113.003 400.667 li
f
189.788 434.93 mo
204.722 447.35 li
212.767 444.979 li
182.096 410.517 li
222.346 439.344 li
208.011 416.427 li
260.336 428.238 li
203.641 397.995 li
192.944 397.995 li
151.114 405.973 li
165.833 416.427 li
189.788 434.93 li
f
380.002 435.667 mo
358.933 442.465 li
439.336 462.667 li
420.015 445.636 li
448.915 457.032 li
420.623 373.5 li
343.051 326.323 li
331.645 322.529 li
326.915 333.49 li
326.827 334.648 342.395 341.933 317.474 345.449 cv
326.115 358.238 li
381.222 394.972 li
380.002 435.667 li
f
50.5026 381.667 mo
12.7775 399.499 li
-36.1082 414.22 li
-44.8223 408.294 li
-63.3775 364.95 li
-53.5176 366.74 li
.00247842 378.21 li
-30.6673 337 li
.00247842 346.64 li
50.5026 381.667 li
f
236.292 290.86 mo
239.55 299.833 li
229.914 299.833 li
228.635 310.822 li
238.308 310.822 li
249.759 318.191 li
231.003 319.105 li
174.116 359.621 li
187.898 364.947 li
213.5 370.385 li
283.155 424.933 li
364.064 443.754 li
246.336 342 li
246.336 330.787 li
271.36 315.073 li
266.866 310.822 li
257.349 299.833 li
236.292 290.86 li
f
372.233 300.12 mo
382.336 310.822 li
377.284 322.667 li
382.336 336 li
468.336 452 li
558.003 438.314 li
423.172 305.74 li
407.293 296.08 li
403.669 306 li
382.492 301.77 li
372.233 300.12 li
f
637.153 392.92 mo
550.092 418.38 li
449.472 314.81 li
442.692 302.26 li
445.833 290.94 li
445.992 290.86 li
460.552 303.42 li
460.552 309.71 li
467.823 315.33 li
475.432 310.37 li
479.732 319.1 li
495.333 319.1 li
511.982 298.96 li
637.153 392.92 li
f
25.2825 342.26 mo
25.2825 347.88 li
33.7024 354.87 li
25.2825 342.26 li
cp
f
-14.3357 350.648 mo
-12.0003 351.946 19.8333 374.781 19.8333 374.781 cv
25.8844 374.781 li
30.5551 378.21 li
19.8333 379.992 li
-14.3357 350.648 li
cp
f
214.821 311.898 mo
190.838 322.326 li
209.805 319.105 li
214.821 311.898 li
cp
.956863 1 1 rgb
f
209.805 319.105 mo
203.27 327.624 li
204.062 327.755 217.359 324.586 217.359 324.586 cv
217.359 320.628 li
224.746 319.105 li
226.37 321.239 li
174.116 359.621 li
235.327 324.964 li
234.615 317.756 li
234.615 317.756 229.235 312.508 228.665 312.888 cv
228.095 313.268 229.914 299.833 229.914 299.833 cv
222.73 290.855 li
208.469 307.267 li
220.272 306.226 li
218.698 311.806 li
214.821 311.898 li
209.805 319.105 li
f
257.349 299.833 mo
258.975 300.526 266.866 310.822 266.866 310.822 cv
257.349 310.822 li
271.36 315.073 li
246.336 330.787 li
297.974 315.31 li
281.729 328.553 li
307.306 315.31 li
309.38 307.123 li
319.975 302.101 li
278.96 309.047 li
257.349 299.833 li
f
294.662 338.006 mo
295.699 337.154 307.45 349.942 308.487 349.942 cv
309.524 349.942 326.115 358.238 326.115 358.238 cv
321.967 348.101 li
331.99 345.794 li
346.507 351.325 li
333.719 341.647 li
339.475 338.008 li
327.497 330.587 li
330.954 330.587 li
326.806 326.323 li
343.051 326.323 li
327.943 318.041 li
331.645 322.529 li
320.584 325.75 li
324.041 328.858 li
317.819 330.241 li
330.262 340.61 li
317.474 345.449 li
305.031 338.139 li
309.524 344.412 li
294.662 338.006 li
f
214.821 333.49 mo
193.643 348.565 li
164.755 364.947 li
182.582 345.705 li
191.098 337.813 li
182.167 341.759 li
187.359 335.944 li
169.913 333.659 li
214.821 333.49 li
f
30.669 359.621 mo
47.669 373 li
47.669 373 46.3359 363.954 47.669 366.31 cv
49.0024 368.667 57.3359 375.333 57.3359 375.333 cv
70.3357 367.477 li
59.3357 381.667 li
50.5026 375 li
50.5026 381.667 li
30.669 367.667 li
34.6692 378.333 li
34.6692 378.333 -31.331 335.667 -30.6643 337 cv
-29.9976 338.333 24.0025 362.333 24.0025 362.333 cv
30.669 359.621 li
f
89.3358 359.318 mo
141.003 359.318 li
155.336 364.947 li
144.002 364.947 li
161.336 381.667 li
138.002 364.947 li
125.336 364.947 li
142.336 381.667 li
110.669 364.947 li
96.3359 364.947 li
96.0025 376 li
105.669 391.333 li
113.003 400.667 li
85.0025 369 li
74.669 375 li
56.6692 390.333 li
89.3358 359.318 li
f
141.572 327.296 mo
159.072 331.212 li
147.936 331.212 li
153.822 334.546 li
132.933 332.796 li
141.072 330.921 li
141.572 327.296 li
cp
f
167.503 400.667 mo
191.253 391.75 li
223.753 408.5 li
223.753 408.5 194.743 397.25 196.498 398 cv
198.253 398.75 212.003 406.5 212.003 406.5 cv
195.003 400.667 li
185.253 403.25 li
185.253 403.25 184.753 406.75 185.253 406.5 cv
185.753 406.25 177.805 403.5 177.805 403.5 cv
157.676 411.387 li
166.156 404.726 li
166.156 405.726 151.115 405.973 151.115 405.973 cv
167.503 400.667 li
cp
f
174.116 369.348 mo
177.805 377.75 li
179.686 374.008 li
181.376 379.992 li
184.878 379.992 li
190.072 386.809 li
186.449 375.878 li
190.072 375.878 li
190.072 375.878 198.525 393.551 198.525 391.75 cv
198.525 389.949 193.453 376.182 193.453 376.182 cv
202.873 386.809 li
206.738 386.809 li
213.017 391.75 li
210.119 385 li
213.017 385 li
213.017 381.375 li
215.916 381.375 li
214.466 377.75 li
218.814 377.75 li
241.706 394.972 li
213.5 370.385 li
178.844 361.448 li
177.805 368.452 li
174.116 369.348 li
f
75.448 439.511 mo
72.1147 447.511 li
79.1147 447.511 li
75.448 439.511 li
cp
.603922 .556863 .870588 rgb
f
88.9519 417.878 mo
85.3723 425.553 li
87.1302 413.253 li
88.9519 417.878 li
f
91.404 412.658 mo
87.8242 420.332 li
89.5821 408.033 li
91.404 412.658 li
f
101.887 414.22 mo
101.82 421.601 li
104.361 414.622 li
101.887 414.22 li
f
129.931 417.204 mo
127.324 423.461 li
132.799 423.461 li
129.931 417.204 li
cp
f
127.194 415.455 mo
124.587 421.712 li
130.062 421.712 li
127.194 415.455 li
cp
f
20.6345 421.981 mo
18.0272 428.239 li
23.5025 428.239 li
20.6345 421.981 li
cp
f
11.0356 428.774 mo
4.3613 444.792 li
18.3773 444.792 li
11.0356 428.774 li
cp
f
18.7974 442.688 mo
11.0649 456.397 li
25.0808 456.397 li
18.7974 442.688 li
cp
f
2.4604 409.869 mo
-.7179 425.888 li
5.9564 425.888 li
2.4604 409.869 li
cp
f
7.5395 409.082 mo
4.3613 425.1 li
11.0356 425.1 li
7.5395 409.082 li
cp
f
12.6187 408.294 mo
9.4405 424.312 li
16.1147 424.312 li
12.6187 408.294 li
cp
f
20.7648 403.327 mo
-4.7475 438.095 li
29.5025 416.303 li
20.7648 403.327 li
cp
f
100.563 440.974 mo
97.9562 447.231 li
103.432 447.231 li
100.563 440.974 li
cp
f
54.3357 438.095 mo
34.8345 459 li
0 488.333 li
-49.9675 555.859 li
231.836 496.113 li
135.15 426.183 li
132.155 430.975 li
127.962 435.74 li
121.972 435.74 li
118.388 443.511 li
113.287 442.688 li
110.197 448.134 li
95.6692 456.333 li
74.3359 441.807 li
62.9103 448.001 li
54.3357 438.095 li
f
222.645 402.687 mo
212.526 452.065 li
201.454 473.058 li
169.913 497.095 li
448.915 457.032 li
322.227 364.947 li
278.325 386.268 li
257.981 401.616 li
230.854 408.033 li
222.645 402.687 li
.788235 .72549 .85098 rgb
f
82.7565 438.095 mo
77.8358 449.905 li
90.3605 456.741 li
82.7565 438.095 li
cp
.603922 .556863 .870588 rgb
f
80.5535 426.906 mo
79.1147 447.511 li
82.7565 438.095 li
80.5535 426.906 li
cp
f
86.7609 422.118 mo
84.0982 419.403 li
82.7565 438.095 li
86.7609 422.118 li
cp
f
135.314 414.621 mo
130.062 433.429 li
139.547 431.015 li
135.314 414.621 li
cp
f
142.716 418.583 mo
137.464 437.39 li
146.949 434.976 li
142.716 418.583 li
cp
f
147.296 424.612 mo
143.72 437.418 li
149.551 437.752 li
147.296 424.612 li
cp
f
154.003 425.553 mo
152.563 451.76 li
162.79 446.238 li
154.003 425.553 li
cp
f
162.482 434.127 mo
161.042 460.335 li
171.27 454.813 li
162.482 434.127 li
cp
f
132.55 415.031 mo
128.974 427.837 li
134.804 428.172 li
132.55 415.031 li
cp
f
104.806 430.879 mo
99.8854 442.688 li
104.66 442.068 li
104.806 430.879 li
cp
f
109.727 421.001 mo
104.806 432.811 li
109.58 432.19 li
109.727 421.001 li
cp
f
118.006 409.827 mo
125.445 420.236 li
127.436 415.852 li
118.006 409.827 li
cp
f
107.978 405.973 mo
103.656 409.449 li
103.568 416.8 li
107.978 405.973 li
f
103.09 416.862 mo
98.7245 419.736 li
100.984 426.886 li
103.09 416.862 li
cp
f
88.4231 433.429 mo
86.7609 454.776 li
96.0272 452.074 li
88.4231 433.429 li
cp
f
50.1124 435.74 mo
42.9399 452.954 li
53.2732 452.954 li
50.1124 435.74 li
cp
f
97.5331 439.527 mo
90.3605 456.741 li
100.694 456.741 li
97.5331 439.527 li
cp
f
37.0425 453.701 mo
32.1219 465.511 li
42.4552 465.511 li
37.0425 453.701 li
f
20.659 463.135 mo
15.7384 474.944 li
26.0717 474.944 li
20.659 463.135 li
cp
f
23.8594 449.429 mo
20.905 456.52 li
27.1092 456.52 li
23.8594 449.429 li
cp
f
27.5935 452.618 mo
22.2218 465.511 li
33.5024 465.511 li
27.5935 452.618 li
cp
f
3.5804 434.199 mo
-1.7913 447.091 li
9.4892 447.091 li
3.5804 434.199 li
cp
f
18.0272 428.239 mo
14.2384 436.919 li
24.5717 436.919 li
82.7565 373.5 li
58.5376 393.981 li
53.2732 395 li
50.6684 400.635 li
47.2215 400.118 li
44.0846 406.203 li
39.732 406.451 li
36.3798 412.719 li
32.7073 412.392 li
30.2782 417.879 li
28.0025 417.091 li
26.0717 428.239 li
18.0272 428.239 li
cp
f
-1.79141 447.091 mo
-4.74742 497.095 li
37.2884 470.81 li
25.0809 456.397 li
18.3773 444.792 li
9.48914 439.511 li
-1.79141 447.091 li
f
55.5802 443.196 mo
79.3797 408.618 li
85.7844 397.644 li
77.4506 400.936 li
76.9506 406.862 li
74.8987 405.442 li
74.456 409.935 li
71.0376 409.935 li
70.3755 415.861 li
66.1821 416.3 li
62.359 426.129 li
62.359 426.129 59.4266 422.621 59.2593 424.07 cv
59.0919 425.519 57.0381 434.399 57.0381 434.399 cv
57.0381 434.399 52.813 427.301 53.5381 429.483 cv
54.2633 431.664 54.4015 449.333 53.4545 449.278 cv
52.5074 449.223 55.5802 443.196 55.5802 443.196 cv
cp
f
12.7775 399.499 mo
75.4926 375.563 li
69.2018 374.143 li
63.9738 377.002 li
62.0003 375.769 li
59.2125 377.802 li
57.146 376.865 li
55.0309 378.673 li
51.4043 377.629 li
49.3395 379.951 li
41.4244 379.548 li
38.743 383.52 li
32.2252 382.468 li
29.5024 387.094 li
23.5024 385.517 li
18.0729 394.183 li
9.44057 392.853 li
4.36128 397.674 li
6.10832 398.525 -4.74742 396.577 -4.74742 396.577 cv
-31.903 405.365 li
-31.903 405.365 -38.421 414.433 -36.1082 414.22 cv
-33.7953 414.007 12.7775 399.499 12.7775 399.499 cv
f
407.281 342.488 mo
412.798 332.689 li
410.039 332.558 li
416.003 325.098 li
421.003 333.793 li
421.003 333.793 417.539 334.558 417.848 334.578 cv
418.158 334.598 423.414 343.669 423.414 343.669 cv
428.671 336.35 li
428.671 336.35 425.373 336.659 425.579 336.556 cv
425.785 336.453 431.867 329.032 431.867 329.032 cv
431.867 329.032 426.198 333.464 426.507 333.361 cv
426.816 333.258 433.104 323.672 433.104 323.672 cv
433.104 323.672 438.464 330.894 438.258 330.787 cv
438.052 330.681 433.722 330.185 434.238 330.33 cv
434.753 330.475 437.96 333.836 438.263 334.578 cv
438.567 335.319 433.928 334.578 433.928 334.578 cv
441.247 341.71 li
445.576 337.999 li
441.968 339.133 li
450.524 328.619 li
450.524 328.619 456.915 337.175 456.812 336.866 cv
456.708 336.556 457.533 339.339 457.533 339.339 cv
457.533 339.339 453.513 335.423 453.822 335.319 cv
454.132 335.216 460.625 323.672 460.625 323.672 cv
455.575 329.547 li
460.625 318.209 li
460.625 318.209 466.81 328.001 466.913 327.692 cv
467.016 327.383 460.832 325.287 461.45 325.098 cv
462.069 324.909 467.635 334.598 467.635 334.598 cv
467.635 334.598 461.553 330.172 462.069 330.787 cv
462.584 331.402 468.253 338.721 468.253 338.721 cv
472.685 343.669 li
472.685 343.669 475.468 345.833 473.922 345.318 cv
472.376 344.803 464.852 341.504 465.161 341.504 cv
465.47 341.504 474.39 347.483 474.39 347.483 cv
469.387 347.483 li
565.821 326.134 li
659.394 334.578 li
387.6 464.5 li
233.503 475.5 li
249.835 439.256 li
304.135 388.174 li
311.962 366.665 li
355.352 342.526 li
407.281 342.488 li
.607843 .560784 .94902 rgb
f
278.922 381.071 mo
275.473 399.591 li
277.543 399.591 li
275.473 406.794 li
277.543 406.794 li
274.266 417.855 li
276.939 413.996 li
276.939 413.996 273.577 425.829 274.266 425.057 cv
274.565 424.723 277.186 425.029 280.065 425.334 cv
283.841 425.735 288.06 426.136 288.06 425.093 cv
288.06 423.257 283.06 414.511 283.06 414.511 cv
283.06 414.511 285.991 417.597 285.991 416.826 cv
285.991 416.054 282.543 407.015 282.543 407.015 cv
282.543 407.015 285.819 410.138 285.474 409.109 cv
285.129 408.08 281.117 399.591 281.117 399.591 cv
281.117 399.591 284.784 402.163 284.44 401.135 cv
284.095 400.106 278.922 381.071 278.922 381.071 cv
f
308.341 349.274 mo
304.893 361.689 li
306.962 361.689 li
304.893 366.517 li
306.962 366.517 li
303.686 373.931 li
306.358 371.345 li
306.358 371.345 302.996 379.276 303.686 378.759 cv
303.984 378.535 306.606 378.74 309.485 378.945 cv
313.261 379.213 317.48 379.482 317.48 378.783 cv
317.48 377.552 312.479 371.69 312.479 371.69 cv
312.479 371.69 315.411 373.759 315.411 373.241 cv
315.411 372.724 311.962 366.665 311.962 366.665 cv
311.962 366.665 315.238 368.758 314.893 368.069 cv
314.548 367.379 310.536 361.689 310.536 361.689 cv
310.536 361.689 314.204 363.413 313.859 362.724 cv
313.514 362.034 308.341 349.274 308.341 349.274 cv
f
554.861 310.121 mo
551.413 322.536 li
553.482 322.536 li
551.413 327.364 li
553.482 327.364 li
550.206 334.778 li
552.878 332.191 li
552.878 332.191 549.516 340.123 550.206 339.606 cv
550.504 339.382 553.125 339.587 556.004 339.791 cv
559.78 340.06 564 340.329 564 339.63 cv
564 338.399 559 332.536 559 332.536 cv
559 332.536 561.931 334.605 561.931 334.088 cv
561.931 333.571 558.482 327.512 558.482 327.512 cv
558.482 327.512 561.758 329.605 561.413 328.915 cv
561.069 328.226 557.056 322.536 557.056 322.536 cv
557.056 322.536 560.724 324.26 560.379 323.57 cv
560.034 322.881 554.861 310.121 554.861 310.121 cv
f
403.66 325.098 mo
400.211 337.512 li
402.28 337.512 li
400.211 342.34 li
402.28 342.34 li
399.004 349.754 li
401.677 347.168 li
401.677 347.168 398.315 355.1 399.004 354.582 cv
399.694 354.065 412.798 355.838 412.798 354.607 cv
412.798 353.375 407.798 347.513 407.798 347.513 cv
407.798 347.513 410.729 349.582 410.729 349.065 cv
410.729 348.547 407.281 342.488 407.281 342.488 cv
407.281 342.488 410.557 344.582 410.212 343.892 cv
409.867 343.202 405.855 337.512 405.855 337.512 cv
405.855 337.512 409.522 339.237 409.177 338.547 cv
408.832 337.857 403.66 325.098 403.66 325.098 cv
cp
f
540.974 306.874 mo
537.526 319.288 li
539.595 319.288 li
537.526 324.116 li
539.595 324.116 li
536.319 331.53 li
538.991 328.944 li
538.991 328.944 535.629 336.875 536.319 336.358 cv
537.008 335.841 550.113 337.613 550.113 336.382 cv
550.113 335.151 545.112 329.289 545.112 329.289 cv
545.112 329.289 548.044 331.358 548.044 330.841 cv
548.044 330.323 544.595 324.264 544.595 324.264 cv
544.595 324.264 547.871 326.358 547.526 325.668 cv
547.182 324.978 543.169 319.288 543.169 319.288 cv
543.169 319.288 546.837 321.012 546.492 320.323 cv
546.147 319.633 540.974 306.874 540.974 306.874 cv
cp
f
360.001 325.372 mo
356.553 337.786 li
358.622 337.786 li
356.553 342.614 li
358.622 342.614 li
355.346 350.028 li
358.018 347.442 li
358.018 347.442 354.656 355.373 355.346 354.856 cv
356.036 354.339 369.14 356.112 369.14 354.88 cv
369.14 353.649 364.14 347.787 364.14 347.787 cv
364.14 347.787 367.071 349.856 367.071 349.339 cv
367.071 348.821 363.622 342.762 363.622 342.762 cv
363.622 342.762 366.898 344.855 366.553 344.166 cv
366.209 343.476 362.196 337.786 362.196 337.786 cv
362.196 337.786 365.864 339.51 365.519 338.821 cv
365.174 338.131 360.001 325.372 360.001 325.372 cv
cp
f
377.909 319.962 mo
374.33 327.47 li
376.702 326.859 li
373.936 334.618 li
375.795 334.047 li
372.729 342.032 li
376.135 338.815 li
376.135 338.815 373.06 345.907 373.75 345.389 cv
374.44 344.872 387.22 345.184 387.22 343.953 cv
387.22 342.721 382.219 336.859 382.219 336.859 cv
382.219 336.859 387.737 340.315 387.737 339.797 cv
387.737 339.28 381.702 331.835 381.702 331.835 cv
381.702 331.835 387.564 335.314 387.22 334.625 cv
386.875 333.935 380.276 326.859 380.276 326.859 cv
380.276 326.859 382.408 327.211 382.063 326.521 cv
381.718 325.832 377.909 319.962 377.909 319.962 cv
f
339.598 332.558 mo
336.019 339.912 li
338.391 339.313 li
335.625 346.913 li
337.484 346.354 li
334.418 354.175 li
337.824 351.024 li
337.824 351.024 334.75 357.97 335.439 357.463 cv
336.129 356.957 348.909 357.262 348.909 356.056 cv
348.909 354.85 343.908 349.108 343.908 349.108 cv
343.908 349.108 349.426 352.493 349.426 351.986 cv
349.426 351.48 343.391 344.187 343.391 344.187 cv
343.391 344.187 349.253 347.595 348.909 346.92 cv
348.564 346.244 341.965 339.313 341.965 339.313 cv
341.965 339.313 344.097 339.658 343.752 338.983 cv
343.407 338.307 339.598 332.558 339.598 332.558 cv
f
323.157 345.25 mo
319.722 350.94 li
321.439 349.222 li
318.93 354.751 li
320.407 353.687 li
317.063 359.904 li
320.579 357.978 li
318.001 364.251 li
327.881 363.331 li
324.445 357.978 li
326.592 359.241 li
322.941 352.085 li
322.941 352.085 325.734 355.27 325.734 354.751 cv
325.734 354.232 322.941 349.222 322.941 349.222 cv
322.941 349.222 326.306 352.371 325.877 351.655 cv
325.447 350.94 323.157 345.25 323.157 345.25 cv
f
354.063 321.85 mo
350.628 331.093 li
352.346 328.302 li
349.836 337.284 li
351.313 335.556 li
347.97 345.655 li
351.485 342.526 li
348.907 352.718 li
358.787 351.222 li
355.351 342.526 li
357.499 344.579 li
353.847 332.953 li
353.847 332.953 356.64 338.127 356.64 337.284 cv
356.64 336.441 353.847 328.302 353.847 328.302 cv
353.847 328.302 357.212 333.418 356.783 332.255 cv
356.353 331.093 354.063 321.85 354.063 321.85 cv
cp
f
386.923 330.33 mo
383.488 336.176 li
385.206 334.411 li
382.696 340.093 li
384.173 339 li
380.829 345.389 li
384.345 343.409 li
381.767 349.857 li
383.959 349.647 li
380.75 359.1 li
394.449 356.55 li
391.647 348.911 li
388.212 343.409 li
390.359 344.708 li
386.707 337.353 li
386.707 337.353 389.5 340.626 389.5 340.093 cv
389.5 339.56 386.707 334.411 386.707 334.411 cv
386.707 334.411 390.072 337.647 389.643 336.912 cv
389.213 336.176 386.923 330.33 386.923 330.33 cv
f
394.779 326.134 mo
391.344 331.981 li
393.061 330.216 li
390.552 335.897 li
392.029 334.805 li
388.685 341.193 li
392.201 339.214 li
389.623 345.661 li
391.815 345.451 li
388.606 354.904 li
402.305 352.354 li
399.503 344.715 li
396.067 339.214 li
398.214 340.513 li
394.563 333.158 li
394.563 333.158 397.355 336.431 397.355 335.897 cv
397.355 335.364 394.563 330.216 394.563 330.216 cv
394.563 330.216 397.928 333.452 397.499 332.716 cv
397.069 331.981 394.779 326.134 394.779 326.134 cv
cp
f
367.871 319.881 mo
366.016 326.213 li
367.639 324.772 li
365.725 330.268 li
367.202 329.175 li
363.858 335.563 li
367.374 333.584 li
364.796 340.031 li
366.987 339.821 li
363.779 349.274 li
377.477 346.725 li
374.675 339.085 li
371.24 333.584 li
376.336 335.167 li
369.736 327.528 li
369.736 327.528 372.528 330.801 372.528 330.268 cv
372.528 329.734 369.14 324.772 369.14 324.772 cv
369.14 324.772 372.398 326.51 371.969 325.774 cv
371.539 325.039 367.871 319.881 367.871 319.881 cv
f
255.883 410.408 mo
260.413 420.143 li
258.014 420.143 li
260.413 424.297 li
258.014 422.557 li
262.283 431.137 li
258.948 428.833 li
262.283 436.759 li
247.544 439.256 li
253.679 427.62 li
249.696 431.17 li
253.731 422.489 li
249.696 426.972 li
253.653 416.841 li
249.696 421.054 li
254.18 414.867 li
255.883 410.408 li
cp
f
304.843 369.321 mo
299.625 380.271 li
303.083 379.379 li
299.049 390.696 li
301.761 389.864 li
297.289 401.508 li
302.257 396.816 li
302.257 396.816 299.477 412.141 300.482 411.386 cv
301.488 410.632 318.422 406.105 318.422 404.309 cv
318.422 402.513 311.13 393.964 311.13 393.964 cv
311.13 393.964 319.176 399.003 319.176 398.249 cv
319.176 397.495 310.375 386.636 310.375 386.636 cv
310.375 386.636 318.925 391.711 318.422 390.705 cv
317.919 389.699 308.296 379.379 308.296 379.379 cv
308.296 379.379 311.405 379.893 310.902 378.888 cv
310.399 377.882 304.843 369.321 304.843 369.321 cv
.4 .388235 .729412 rgb
f
575.054 312.095 mo
569.835 323.045 li
573.293 322.154 li
569.26 333.47 li
571.971 332.638 li
567.5 344.282 li
572.467 339.59 li
572.467 339.59 567.983 349.933 568.989 349.178 cv
569.995 348.424 588.633 348.879 588.633 347.083 cv
588.633 345.288 581.34 336.738 581.34 336.738 cv
581.34 336.738 589.387 341.777 589.387 341.023 cv
589.387 340.269 580.586 329.41 580.586 329.41 cv
580.586 329.41 589.136 334.485 588.633 333.479 cv
588.13 332.473 578.506 322.154 578.506 322.154 cv
578.506 322.154 581.616 322.668 581.113 321.662 cv
580.61 320.656 575.054 312.095 575.054 312.095 cv
f
631.68 285.46 mo
623.748 296.604 li
627.625 296.514 li
621.493 305.9 li
627.66 305.328 li
620.488 314.151 li
626.796 311.506 li
626.796 311.506 617.651 325.894 618.657 325.14 cv
619.663 324.385 642.964 323.239 642.964 321.444 cv
642.964 319.648 635.672 311.099 635.672 311.099 cv
635.672 311.099 642.261 311.854 642.261 311.099 cv
642.261 310.345 634.917 303.771 634.917 303.771 cv
634.917 303.771 640.498 305.328 639.995 304.322 cv
639.492 303.316 632.838 296.514 632.838 296.514 cv
637.174 294.617 li
636.05 294.61 631.68 285.46 631.68 285.46 cv
cp
f
503.922 335.576 mo
498.704 346.525 li
502.162 345.634 li
498.129 356.95 li
500.84 356.118 li
496.368 367.763 li
501.336 363.07 li
501.336 363.07 496.852 373.413 497.858 372.659 cv
498.864 371.905 517.501 372.359 517.501 370.564 cv
517.501 368.768 510.209 360.219 510.209 360.219 cv
510.209 360.219 518.256 365.258 518.256 364.504 cv
518.256 363.749 509.455 352.891 509.455 352.891 cv
509.455 352.891 518.004 357.966 517.501 356.96 cv
516.998 355.954 507.375 345.634 507.375 345.634 cv
507.375 345.634 510.484 346.148 509.981 345.142 cv
509.478 344.137 503.922 335.576 503.922 335.576 cv
cp
f
649.282 282.274 mo
641.686 292.307 li
647.888 291.962 li
638.254 300.928 li
644.935 302.108 li
636.764 312.874 li
644.332 309.052 li
644.332 309.052 636.354 318.53 637.466 317.943 cv
638.578 317.357 659.529 319.68 659.811 317.906 cv
660.093 316.133 653.894 308.005 653.894 308.005 cv
660.656 308.559 li
660.775 307.814 654.301 301.066 654.301 301.066 cv
660.656 302.549 li
660.318 301.477 651.989 292.248 651.989 292.248 cv
656.377 293.869 li
656.038 292.797 649.282 282.274 649.282 282.274 cv
cp
f
338.532 378.293 mo
333.314 389.242 li
336.772 388.351 li
332.738 399.667 li
335.45 398.835 li
330.978 410.48 li
335.946 405.788 li
335.946 405.788 331.462 416.131 332.468 415.376 cv
333.473 414.622 352.111 415.077 352.111 413.281 cv
352.111 411.486 344.819 402.936 344.819 402.936 cv
344.819 402.936 352.865 407.975 352.865 407.221 cv
352.865 406.467 344.064 395.608 344.064 395.608 cv
344.064 395.608 352.614 400.683 352.111 399.677 cv
351.608 398.671 341.985 388.351 341.985 388.351 cv
341.985 388.351 345.094 388.865 344.591 387.86 cv
344.088 386.854 338.532 378.293 338.532 378.293 cv
f
455.634 340.092 mo
449.611 353.775 li
454.766 348.62 li
447.079 361.896 li
452.886 356.749 li
446.799 368.066 li
453.2 364.56 li
450.635 370.8 li
460.568 370.225 li
460.238 364.56 li
466.492 366.476 li
457.499 353.831 li
457.499 353.831 464.7 360.567 464.7 359.622 cv
464.7 358.677 457.499 348.62 457.499 348.62 cv
457.499 348.62 463.626 354.352 462.844 353.049 cv
462.062 351.747 455.634 340.092 455.634 340.092 cv
cp
f
457.499 353.831 mo
445.308 379.417 li
455.205 369.52 li
445.655 386.012 li
452.869 379.618 li
445.308 393.677 li
453.259 389.321 li
447.429 403.509 li
469.771 401.427 li
462.003 389.321 li
469.771 391.701 li
458.6 375.994 li
458.6 375.994 467.545 384.361 467.545 383.188 cv
467.545 382.014 458.6 369.52 458.6 369.52 cv
458.6 369.52 467.463 377.599 466.492 375.98 cv
465.521 374.362 457.499 353.831 457.499 353.831 cv
cp
f
415.383 343.174 mo
411.227 356.141 li
413.771 353.392 li
409.759 364.597 li
412.016 362.554 li
405.863 375.388 li
411.071 371.832 li
405.921 384.918 li
408.895 384.849 li
402.104 404.134 li
421.024 401.103 li
419.328 384.605 li
416.219 372.485 li
422.583 376.666 li
415.829 359.528 li
415.829 359.528 418.676 366.866 418.818 365.747 cv
418.96 364.628 415.77 353.646 415.77 353.646 cv
415.77 353.646 419.646 357.843 419.27 356.227 cv
418.894 354.612 415.383 343.174 415.383 343.174 cv
f
614.321 289.01 mo
610.165 301.978 li
612.709 299.229 li
608.697 310.434 li
610.955 308.391 li
604.801 321.225 li
610.01 317.668 li
604.859 330.755 li
607.833 330.686 li
601.042 349.971 li
619.963 346.94 li
618.266 330.442 li
615.158 318.322 li
621.521 322.504 li
614.768 305.365 li
614.768 305.365 617.614 312.703 617.756 311.584 cv
617.899 310.466 614.709 299.483 614.709 299.483 cv
614.709 299.483 618.584 303.68 618.208 302.064 cv
617.832 300.449 614.321 289.01 614.321 289.01 cv
cp
f
357.759 368.359 mo
348.552 380.711 li
353.155 380.711 li
348.552 388.679 li
353.155 385.342 li
344.966 401.801 li
351.362 397.381 li
344.966 412.585 li
364.082 408.202 li
361.472 395.054 li
364.082 397.381 li
361.472 373.937 li
361.472 363.18 li
357.759 368.359 li
cp
f
402.782 359.879 mo
394.32 371.231 li
394.013 371.643 394.307 372.23 394.821 372.23 cv
397.096 372.23 li
397.577 372.23 397.878 372.751 397.637 373.168 cv
395.044 377.657 li
394.706 378.241 395.406 378.871 395.952 378.475 cv
396.119 378.354 li
396.648 377.971 397.336 378.554 397.045 379.139 cv
391.07 391.149 li
390.783 391.727 391.454 392.309 391.985 391.941 cv
394.624 390.118 li
395.138 389.763 395.797 390.299 395.555 390.875 cv
390.463 402.98 li
390.265 403.449 390.682 403.945 391.178 403.831 cv
408.513 399.857 li
408.843 399.781 409.053 399.457 408.987 399.126 cv
406.858 388.403 li
406.741 387.815 407.44 387.415 407.887 387.815 cv
408.315 388.196 408.988 387.848 408.925 387.279 cv
406.499 365.491 li
406.495 365.422 li
406.495 356.644 li
406.495 356.036 405.716 355.786 405.362 356.28 cv
402.782 359.879 li
cp
f
363.555 390.885 mo
354.349 403.236 li
358.952 403.236 li
354.349 411.205 li
358.952 407.867 li
350.763 424.327 li
357.159 419.906 li
350.763 435.11 li
376.331 432.912 li
367.268 417.579 li
369.878 419.906 li
367.268 396.463 li
367.268 385.705 li
363.555 390.885 li
f
298.733 381.1 mo
293.306 397.544 li
296.903 396.206 li
292.708 413.2 li
295.528 411.951 li
290.877 429.439 li
296.044 422.391 li
296.044 422.391 291.38 437.925 292.426 436.792 cv
293.472 435.659 312.855 436.342 312.855 433.645 cv
312.855 430.948 305.271 418.109 305.271 418.109 cv
305.271 418.109 313.64 425.677 313.64 424.544 cv
313.64 423.411 304.487 407.104 304.487 407.104 cv
304.487 407.104 313.379 414.725 312.855 413.215 cv
312.333 411.704 302.324 396.206 302.324 396.206 cv
302.324 396.206 305.558 396.978 305.035 395.467 cv
304.512 393.956 298.733 381.1 298.733 381.1 cv
f
321.636 377.947 mo
316.208 389.1 li
319.805 388.193 li
315.61 399.72 li
318.43 398.872 li
313.78 410.735 li
318.946 405.954 li
318.946 405.954 314.283 416.491 315.329 415.722 cv
316.375 414.954 335.758 415.417 335.758 413.588 cv
335.758 411.759 328.174 403.049 328.174 403.049 cv
328.174 403.049 336.543 408.183 336.543 407.414 cv
336.543 406.646 327.389 395.585 327.389 395.585 cv
327.389 395.585 336.281 400.755 335.758 399.73 cv
335.235 398.705 325.226 388.193 325.226 388.193 cv
325.226 388.193 328.46 388.716 327.937 387.692 cv
327.414 386.667 321.636 377.947 321.636 377.947 cv
cp
f
277.518 428.884 mo
269.907 439.095 li
273.712 439.095 li
269.907 445.683 li
273.712 442.924 li
266.943 456.531 li
272.23 452.877 li
266.943 465.446 li
282.745 461.822 li
280.588 450.953 li
282.745 452.877 li
280.588 433.496 li
280.588 424.602 li
277.518 428.884 li
f
285.378 411.463 mo
280.139 420.955 li
284.74 420.955 li
280.139 428.921 li
284.74 425.585 li
276.554 442.039 li
282.948 437.62 li
276.554 452.82 li
302.574 455.254 li
289.518 424.963 li
292.758 425.143 li
288.438 419.563 li
293.43 419.838 li
285.378 411.463 li
f
366.215 367.661 mo
360.996 378.611 li
364.455 377.719 li
360.421 389.036 li
363.133 388.203 li
358.661 399.848 li
363.629 395.156 li
363.629 395.156 359.145 405.499 360.15 404.744 cv
361.156 403.99 379.794 404.445 379.794 402.649 cv
379.794 400.853 372.501 392.304 372.501 392.304 cv
372.501 392.304 380.548 397.343 380.548 396.589 cv
380.548 395.835 371.747 384.976 371.747 384.976 cv
371.747 384.976 380.297 390.051 379.794 389.045 cv
379.291 388.039 369.667 377.719 369.667 377.719 cv
369.667 377.719 372.777 378.233 372.274 377.228 cv
371.771 376.222 366.215 367.661 366.215 367.661 cv
cp
f
218.301 494.778 mo
250.428 472.918 li
271.186 455.358 li
276.13 455.661 li
295.255 431.021 li
311.13 393.964 li
318.737 402.053 li
326.921 378.363 li
344.966 397.893 li
361.472 380.362 li
384.853 376.656 li
390.973 368.063 li
392.788 392.714 li
412.798 368.063 li
426.734 378.67 li
433.003 368.063 li
428.967 369.979 li
436.596 360.892 li
432.658 360.892 li
440.586 353.116 li
443.363 364.947 li
441.014 362.447 li
442.01 372.194 li
439.502 368.672 li
442.931 384.456 li
440.656 384.129 li
445.308 397.893 li
466.492 369.321 li
490.518 364.371 li
533.659 372.255 li
555.534 361.57 li
550.488 360.642 li
555.606 354.32 li
552.048 353.832 li
556.73 349.221 li
553.68 348.244 li
558.716 339.149 li
564.439 346.898 li
561.859 348.302 li
567.902 351.588 li
592.503 332.558 li
660.656 307.5 li
660.656 439.568 li
399.553 481 li
218.301 494.778 li
f
526.677 329.102 mo
515.323 347.782 li
522.912 338.834 li
513.912 354.817 li
521.14 348.921 li
513.328 363.009 li
516.209 361.671 520.155 356.471 520.155 356.471 cv
511.958 371.901 li
521.278 365.621 li
513.202 379.922 li
537.297 378.948 li
528.538 362.834 li
539.221 370.165 li
531.185 354.82 li
536.481 360.818 li
528.289 346.952 li
534.647 352.754 li
528.289 338.834 li
532.274 345.269 li
526.677 329.102 li
f
117.221 469.013 mo
107.836 484.454 li
114.109 477.057 li
106.669 490.27 li
112.644 485.396 li
106.186 497.041 li
108.568 495.935 111.829 491.637 111.829 491.637 cv
105.054 504.392 li
112.758 499.201 li
106.082 511.022 li
126 510.218 li
118.76 496.897 li
127.591 502.957 li
120.947 490.272 li
125.326 495.231 li
118.554 483.768 li
123.81 488.565 li
118.554 477.057 li
121.848 482.377 li
117.221 469.013 li
f
54.8106 486.031 mo
45.4251 501.472 li
51.6984 494.075 li
44.2587 507.288 li
50.2334 502.414 li
43.7754 514.059 li
46.1574 512.953 49.4188 508.655 49.4188 508.655 cv
42.6433 521.41 li
50.3475 516.219 li
43.6716 528.04 li
63.5892 527.236 li
56.3492 513.915 li
65.1801 519.975 li
58.5367 507.291 li
62.915 512.248 li
56.1432 500.786 li
61.3992 505.583 li
56.1432 494.075 li
59.4368 499.395 li
54.8106 486.031 li
f
2.5259 490.31 mo
-9.0826 515.345 li
-.1776 511.265 li
-7.8814 524.601 li
-3.2782 521.263 li
-11.4673 537.723 li
-5.0711 533.302 li
-11.4673 548.506 li
22.0961 545.621 li
8.2604 515.345 li
16.5191 524.631 li
8.2604 508.171 li
16.5191 512.655 li
2.5259 490.31 li
cp
.458824 .368627 .670588 rgb
f
82.3417 493.193 mo
88.4359 506.29 li
85.208 506.29 li
88.4359 511.877 li
85.208 509.537 li
90.9505 521.079 li
86.465 517.979 li
102.662 531.235 li
71.1241 532.001 li
79.376 516.347 li
74.0189 521.123 li
79.4469 509.445 li
74.0189 515.476 li
79.3418 501.847 li
74.0189 507.515 li
81.0373 483.917 li
82.3417 493.193 li
f
69.6157 499.391 mo
75.7097 512.488 li
72.4818 512.488 li
75.7097 518.075 li
72.4818 515.735 li
78.2243 527.277 li
73.7391 524.177 li
89.9363 537.433 li
58.3981 538.199 li
66.65 522.546 li
61.2929 527.322 li
66.7209 515.643 li
61.2929 521.674 li
66.6158 508.046 li
61.2929 513.713 li
68.3111 490.115 li
69.6157 499.391 li
f
473.19 349.538 mo
466.301 365.188 li
472.198 359.291 li
463.405 374.476 li
470.047 368.589 li
463.085 381.533 li
470.406 377.522 li
467.473 384.66 li
478.834 384.003 li
478.456 377.522 li
485.609 379.714 li
475.323 365.252 li
475.323 365.252 483.56 372.956 483.56 371.875 cv
483.56 370.795 475.323 359.291 475.323 359.291 cv
475.323 359.291 482.331 365.848 481.437 364.358 cv
480.543 362.868 473.19 349.538 473.19 349.538 cv
cp
.4 .388235 .729412 rgb
f
243.354 439.295 mo
229.41 468.558 li
240.73 457.239 li
229.807 476.102 li
238.058 468.789 li
229.41 484.868 li
238.504 479.886 li
231.835 496.113 li
257.39 493.732 li
248.505 479.886 li
257.39 482.609 li
244.613 464.643 li
244.613 464.643 254.844 474.214 254.844 472.871 cv
254.844 471.529 244.613 457.239 244.613 457.239 cv
244.613 457.239 254.75 466.479 253.64 464.628 cv
252.529 462.777 243.354 439.295 243.354 439.295 cv
cp
f
95.7844 463.607 mo
88.8946 479.257 li
94.7915 473.36 li
85.9991 488.545 li
92.6408 482.658 li
85.6794 495.602 li
92.9999 491.591 li
90.0669 498.729 li
101.428 498.072 li
101.05 491.591 li
108.203 493.783 li
97.9176 479.321 li
97.9176 479.321 106.154 487.025 106.154 485.944 cv
106.154 484.864 97.9176 473.36 97.9176 473.36 cv
97.9176 473.36 104.925 479.917 104.031 478.427 cv
103.136 476.937 95.7844 463.607 95.7844 463.607 cv
.458824 .368627 .670588 rgb
f
97.9176 479.321 mo
83.9737 508.584 li
95.2932 497.265 li
84.3708 516.128 li
92.6217 508.815 li
83.9737 524.894 li
93.0676 519.913 li
86.3991 536.14 li
111.954 533.758 li
103.068 519.913 li
111.954 522.635 li
99.1764 504.67 li
99.1764 504.67 109.408 514.24 109.408 512.898 cv
109.408 511.555 99.1764 497.265 99.1764 497.265 cv
99.1764 497.265 109.314 506.505 108.203 504.654 cv
107.092 502.803 97.9176 479.321 97.9176 479.321 cv
f
132.562 473.143 mo
122.591 502.407 li
130.686 491.087 li
122.875 509.95 li
128.775 502.637 li
122.591 518.716 li
129.094 513.735 li
124.325 529.962 li
142.601 527.58 li
136.246 513.735 li
142.601 516.457 li
133.463 498.492 li
133.463 498.492 140.78 508.062 140.78 506.72 cv
140.78 505.377 133.463 491.087 133.463 491.087 cv
133.463 491.087 140.713 500.328 139.919 498.476 cv
139.124 496.625 132.562 473.143 132.562 473.143 cv
f
20.8401 467.187 mo
15.0153 508.234 li
23.1106 492.356 li
15.2993 518.815 li
21.1999 508.557 li
15.0153 531.111 li
21.5189 524.123 li
16.7499 546.884 li
35.0256 543.544 li
28.6709 524.123 li
35.0256 527.942 li
25.8879 502.743 li
25.8879 502.743 33.2049 516.166 33.2049 514.283 cv
33.2049 512.401 25.8879 492.356 25.8879 492.356 cv
25.8879 492.356 33.1378 505.318 32.3434 502.721 cv
31.5491 500.124 20.8401 467.187 20.8401 467.187 cv
f
56.6332 535.472 mo
42.2371 519.074 li
42.6686 518.858 li
46.1579 521.445 53.4908 526.758 53.4908 525.735 cv
53.4908 525.029 50.0025 520.748 46.6923 516.843 cv
43.7568 512.214 li
47.3627 514.82 52.9436 518.76 52.0038 517.492 cv
51.4273 516.713 49.0884 512.105 46.5731 507.029 cv
51.9755 507.73 li
41.1347 492.487 li
41.1347 492.487 51.3658 502.058 51.3658 500.715 cv
51.3658 499.373 41.1347 485.083 41.1347 485.083 cv
41.1347 485.083 51.2719 494.323 50.1613 492.472 cv
49.0505 490.621 39.8759 467.139 39.8759 467.139 cv
25.932 496.402 li
37.2512 485.083 li
26.3288 503.946 li
34.5797 496.633 li
25.932 512.712 li
27.831 511.672 li
22.0961 521.422 li
36.0683 510.103 li
22.5861 528.966 li
32.7705 521.652 li
22.0961 537.732 li
36.4993 531.339 li
31.3268 548.506 li
56.6332 546.596 li
45.6652 532.75 li
56.6332 535.472 li
f
374.294 374.665 mo
380.241 369.896 li
372.513 382.839 li
378.458 380.547 li
367.333 398.066 li
376.159 392.5 li
363.411 411.396 li
373.879 406.777 li
357.382 428.36 li
372.016 417.399 li
359.888 436.988 li
392.381 434.16 li
389.099 416.441 li
398.319 424.771 li
389.762 404.707 li
398.915 410.648 li
386.357 390.601 li
394.231 398.816 li
387.885 378.769 li
392.544 382.058 li
383.879 365.667 li
392.102 375.033 li
381.663 350.211 li
374.294 374.665 li
.4 .388235 .729412 rgb
f
481.294 349.665 mo
487.241 344.896 li
479.513 357.839 li
485.458 355.547 li
474.332 373.066 li
483.159 367.5 li
470.411 386.396 li
480.879 381.776 li
464.382 403.36 li
479.016 392.399 li
466.888 411.988 li
499.381 409.16 li
496.099 391.441 li
505.319 399.771 li
496.762 379.707 li
505.915 385.648 li
493.357 365.601 li
501.231 373.816 li
494.885 353.769 li
499.544 357.058 li
490.879 340.667 li
499.102 350.033 li
488.663 325.211 li
481.294 349.665 li
f
587.794 323.665 mo
593.741 318.896 li
586.013 331.839 li
591.958 329.547 li
580.833 347.066 li
589.659 341.5 li
576.911 360.396 li
587.379 355.777 li
570.882 377.36 li
585.516 366.399 li
573.388 385.988 li
605.881 383.16 li
602.599 365.441 li
611.819 373.771 li
603.262 353.707 li
612.415 359.648 li
599.857 339.601 li
607.731 347.816 li
601.385 327.769 li
606.044 331.058 li
597.379 314.667 li
605.602 324.033 li
595.163 299.211 li
587.794 323.665 li
cp
f
-58.064 548.508 mo
127.207 506.401 li
248.701 490.652 li
321.476 464.873 li
360.061 461.078 li
446.483 474.379 li
560.685 431.405 li
606.433 409.652 li
660.656 404.406 li
660.656 635 li
396.002 700 li
-4.78609 803.359 li
-58.064 548.508 li
.909804 1 1 rgb
f
204.003 522 mo
214.537 522.574 245.002 532 245.002 532 cv
245.002 532 135.195 547.623 133.002 551.115 cv
133.002 551.115 -43.7876 647.793 -49.9975 647.793 cv
-49.9975 589.233 li
-49.9975 589.233 93.6834 540.723 143.003 530 cv
158.032 526.732 188.645 521.164 204.003 522 cv
.721569 .921569 1 rgb
f
660.656 404.406 mo
660.656 404.406 660.108 446.865 660.108 447.865 cv
653.458 448.576 556.003 469 556.003 469 cv
556.003 469 501.674 480.264 474.003 492.63 cv
474.003 492.63 542.031 456.066 567.003 451.07 cv
579.188 448.632 620.788 414.321 620.788 414.321 cv
660.656 404.406 li
f
-26.9975 665 mo
-23.9976 664 103.282 615 103.282 615 cv
103.282 615 326.003 528.115 362.002 530 cv
398.002 531.885 632.002 522 632.002 522 cv
660.652 539 li
660.656 635 li
-4.78609 803.359 li
-26.9975 665 li
f
474.003 509 mo
632.002 522 li
660.652 539 li
660.108 479 li
660.108 479 628.002 457 474.003 509 cv
f
255.05 490.443 mo
255.05 490.443 350.386 488.305 385.194 486.152 cv
420.002 484 459.002 474.379 459.002 474.379 cv
459.002 474.379 419.384 468.807 404.693 465.903 cv
390.002 463 375.05 457.421 357.026 461.71 cv
339.003 466 346.017 479.265 255.05 490.443 cv
f
165.964 533.463 mo
195.258 539.886 li
254.502 536.505 li
254.502 536.505 218.042 525.82 208.449 522.496 cv
198.856 519.171 174.426 529.427 165.964 533.463 cv
f
308.819 517.601 mo
308.819 524.896 305.028 524.72 297.733 524.72 cv
294.702 524.72 289.79 529.799 287.565 528.075 cv
287.463 527.899 li
287.296 527.871 li
285.934 526.759 284.794 525.387 283.959 523.83 cv
282.968 521.976 282.402 519.854 282.402 517.601 cv
282.402 510.306 288.316 504.393 295.611 504.393 cv
296.269 504.393 296.927 504.439 297.557 504.532 cv
297.733 504.56 li
301.802 505.218 305.241 507.73 307.169 511.196 cv
308.226 513.096 308.819 515.275 308.819 517.601 cv
cp
0 .309804 .176471 rgb
f
288.508 516.694 mo
294.706 522.784 li
293.489 530.323 li
298.471 530.323 li
297.733 518.099 li
301.636 514.678 li
296.327 516.928 li
293.489 512.74 li
295.278 518.099 li
295.255 520.875 li
288.508 516.694 li
cp
.188235 0 0 rgb
f
286.854 515.735 mo
285.323 517.386 284.317 522.014 285.309 523.867 cv
286.143 525.425 285.934 526.759 287.296 527.871 cv
283.246 527.213 279.807 524.711 277.879 521.253 cv
276.813 519.353 276.21 517.156 276.21 514.83 cv
276.21 507.535 282.124 501.621 289.419 501.621 cv
292.45 501.621 306.792 499.697 310.761 510.324 cv
310.911 518.099 308.596 519.744 308.634 519.8 cv
308.109 513.906 300.169 509.841 299.51 509.841 cv
292.216 509.841 291.781 510.421 286.854 515.735 cv
cp
.721569 .921569 1 rgb
f
310.761 510.324 mo
308.536 508.619 297.228 501.726 294.197 501.726 cv
286.902 501.726 281.057 505.784 279.898 516.411 cv
279.646 518.724 282.23 524.629 283.296 526.529 cv
280.144 524.119 274.452 518.099 274.916 511.654 cv
275.439 504.378 278.611 497.552 285.906 497.552 cv
290.874 497.552 308.346 492.065 310.761 510.324 cv
cp
.909804 1 1 rgb
f
297.733 504.56 mo
297.557 504.532 li
297.455 504.346 li
297.548 504.411 297.641 504.485 297.733 504.56 cv
cp
.721569 .921569 1 rgb
f
287.565 528.075 mo
287.472 528.01 287.389 527.945 287.296 527.871 cv
287.463 527.899 li
287.565 528.075 li
cp
f
190.396 483.079 mo
191.494 481.614 205.672 454.655 205.672 454.655 cv
196.518 454.655 li
205.672 437.812 li
199.447 437.812 li
213.169 414.667 li
224.336 440.833 li
217.669 438.5 li
227.275 461.245 li
227.275 461.245 218.487 457.95 219.952 459.049 cv
221.416 460.147 230.571 488.667 230.571 488.667 cv
230.571 488.667 219.22 483.581 220.684 487.608 cv
222.149 491.636 230.571 516.168 230.571 516.168 cv
230.571 516.168 181.8 520.965 183.997 520.233 cv
186.194 519.5 201.644 485.045 201.644 485.045 cv
190.396 483.079 li
.0745098 .392157 .541176 rgb
f
203.782 518.317 mo
203.782 528.008 li
208.449 528.008 li
208.449 510.675 li
203.782 518.317 li
cp
.188235 0 0 rgb
f
199.753 454.655 mo
199.753 454.655 204.315 444.75 207.284 442.5 cv
210.253 440.25 212.514 435.667 212.514 435.667 cv
212.514 435.667 214.148 426.581 216.456 425.093 cv
218.764 423.605 212.514 412.933 209.623 406.25 cv
206.568 399.186 199.505 417.562 198.336 422.333 cv
197.368 426.284 193.254 432.983 196.503 438.5 cv
197.149 439.599 202.003 441 202.003 441 cv
202.003 441 194.259 449.456 196.518 454.655 cv
197.503 456.919 199.753 454.655 199.753 454.655 cv
cp
.909804 1 1 rgb
f
200.508 457.22 mo
200.508 457.22 190.253 475.75 188.503 481.75 cv
190.253 485.5 201.565 484.5 207.284 479.75 cv
213.003 475 212.503 454.655 212.503 454.655 cv
212.503 454.655 205.547 450.131 200.508 457.22 cv
cp
f
207.284 487.275 mo
207.284 487.275 197.337 485.546 194.711 487.275 cv
188.069 491.647 182.139 509.353 182.139 509.353 cv
182.139 509.353 197.778 515.526 206.531 501.193 cv
211.313 493.362 207.284 487.275 207.284 487.275 cv
f
75.615 545.083 mo
76.794 550.385 li
82.3357 551.269 li
80.2819 536.505 li
75.615 545.083 li
.188235 0 0 rgb
f
51.7016 543.887 mo
52.5547 557.174 li
55.915 557.174 li
53.861 542.409 li
51.7016 543.887 li
cp
f
60.2525 547.25 mo
60.2525 547.25 53.7526 552.5 47.7525 551 cv
41.7525 549.5 40.2526 542.25 42.0026 538.75 cv
42.0026 539 36.7588 534.901 35.2157 534 cv
30.5124 531.253 24.0025 515 43.2525 503.5 cv
52.0025 498.591 63.0025 506.75 63.0025 506.75 cv
63.0025 506.75 73.5024 484.036 98.0026 498.591 cv
104.753 506 103.003 524.25 103.003 524.25 cv
91.0025 541.25 li
91.0025 541.25 77.9484 546.75 71.2525 549.5 cv
67.3026 551.122 60.2525 547.25 60.2525 547.25 cv
0 .309804 .176471 rgb
f
66.7225 529.75 mo
66.7225 529.75 59.5025 534.5 51.7525 536.5 cv
44.4524 538.39 47.9891 551.909 45.6691 551.409 cv
45.279 551.329 44.0025 551.422 41.5025 550.06 cv
37.99 548.146 36.7525 541 41.5025 533 cv
46.2525 525 66.7225 529.75 66.7225 529.75 cv
cp
.909804 1 1 rgb
f
66.7225 529.75 mo
66.7225 529.75 59.5025 534.5 51.7525 536.5 cv
44.4524 538.39 49.4477 551.27 49.4477 551.27 cv
48.0378 551.27 43.3526 551.98 42.8426 550.19 cv
41.9125 546.87 41.0891 541.695 44.1691 536.505 cv
48.9191 528.505 66.7225 529.75 66.7225 529.75 cv
cp
.721569 .921569 1 rgb
f
35.2157 536.505 mo
35.2157 536.505 33.0024 519.5 42.7526 516 cv
52.5024 512.5 63.1964 513.75 66.7244 512.75 cv
70.2524 511.75 76.7526 500.749 82.0024 500.749 cv
87.2524 500.75 100.04 506.817 102.896 512.659 cv
106.002 511 107.002 494.5 94.0024 488.5 cv
87.0341 485.284 82.4088 487.72 78.1643 490.157 cv
74.4903 492.266 71.1013 494.376 66.7244 492.819 cv
52.4695 487.75 35.5024 493.721 26.2525 508 cv
16.171 523.562 35.2157 536.505 35.2157 536.505 cv
.909804 1 1 rgb
f
47.5025 520.309 mo
47.5025 520.309 39.7616 540.423 35.2157 536.505 cv
30.6695 532.587 24.5386 519.963 33.8957 511.731 cv
43.2525 503.5 53.0026 500.835 59.0026 500.792 cv
65.0024 500.75 83.2525 498.181 88.2525 498.591 cv
93.2524 499 105.464 500.39 104.86 505.487 cv
104.257 510.582 103.114 515.494 103.114 515.494 cv
103.114 515.494 87.6445 500.75 77.9484 508 cv
68.2526 515.25 52.5024 513.367 47.5025 520.309 cv
.721569 .921569 1 rgb
f
158.574 530.993 mo
158.574 530.993 150.574 515.674 154.574 505.084 cv
158.574 494.493 158.574 484.493 170.574 478.993 cv
182.574 473.493 189.074 471.993 195.074 488.243 cv
201.074 504.493 205.063 520.459 190.569 526.726 cv
176.074 532.993 165.574 535.993 158.574 530.993 cv
0 .309804 .176471 rgb
f
195.244 477.553 mo
195.064 482.273 192.644 487.473 188.714 490.533 cv
180.904 496.593 174.574 500.993 165.964 509.493 cv
157.354 517.993 165.964 533.463 165.964 533.463 cv
165.964 533.463 165.964 533.463 158.574 530.993 cv
156.264 530.213 154.524 528.193 153.194 525.533 cv
150.294 519.673 149.434 510.693 149.074 505.083 cv
148.224 491.823 158.574 479.493 162.144 475.193 cv
165.704 470.893 179.074 464.993 188.714 467.493 cv
193.484 468.733 195.444 472.913 195.244 477.553 cv
.721569 .921569 1 rgb
f
195.244 477.553 mo
177.474 477.013 167.394 495.973 159.404 503.853 cv
155.094 508.123 153.604 517.373 153.194 525.533 cv
150.294 519.673 149.434 510.693 149.074 505.083 cv
148.224 491.823 158.574 479.493 162.144 475.193 cv
165.704 470.893 179.074 464.993 188.714 467.493 cv
193.484 468.733 195.444 472.913 195.244 477.553 cv
.909804 1 1 rgb
f
179.442 519.629 mo
180.295 532.916 li
183.655 532.916 li
181.601 518.151 li
179.442 519.629 li
cp
.188235 0 0 rgb
f
343.552 505.94 mo
343.552 515.02 338.133 522.38 331.452 522.38 cv
330.402 522.38 329.383 522.2 328.413 521.85 cv
324.533 525.06 317.152 527.05 307.622 526.15 cv
303.813 526.15 298.253 519.52 298.253 513.46 cv
298.253 508.05 302.833 500.45 308.622 500.01 cv
308.413 499.15 308.313 498.25 308.313 497.32 cv
308.313 491.44 312.522 486.67 317.733 486.67 cv
324.402 485.88 327.952 487.23 329.753 489.66 cv
330.302 489.56 330.872 489.5 331.452 489.5 cv
338.133 489.5 343.552 496.86 343.552 505.94 cv
cp
0 .309804 .176471 rgb
f
320.902 512.768 mo
327.589 519.338 li
326.277 527.472 li
331.651 527.472 li
328.349 506.84 li
328.206 514.284 li
328.182 517.278 li
320.902 512.768 li
cp
.188235 0 0 rgb
f
343.552 504.35 mo
340.932 507.5 340.182 504.35 333.503 504.35 cv
332.452 504.35 317.402 499 309.503 510.67 cv
308.622 515.32 310.692 522.5 301.163 521.6 cv
300.962 521.6 300.772 521.58 300.573 521.54 cv
297.003 520.92 293.872 514.75 293.872 509 cv
293.872 503.59 297.253 498.59 300.172 496.22 cv
299.962 495.36 303.503 486.44 314.233 480.44 cv
320.902 479.65 331.212 480.1 331.753 480.33 cv
336.432 482.27 341.142 488.85 343.323 494.82 cv
344.783 498.79 345.112 502.48 343.552 504.35 cv
cp
.909804 1 1 rgb
f
343.552 504.35 mo
340.932 507.5 340.182 504.35 333.503 504.35 cv
332.452 504.35 317.402 499 309.503 510.67 cv
308.622 515.32 310.692 522.5 301.163 521.6 cv
300.962 521.6 300.772 521.58 300.573 521.54 cv
300.513 520.97 300.483 520.39 300.483 519.82 cv
300.483 514.41 303.862 509.42 306.783 507.04 cv
306.573 506.18 310.112 497.27 320.843 491.27 cv
327.513 490.48 337.823 490.93 338.362 491.15 cv
340.052 491.85 341.742 493.15 343.323 494.82 cv
344.783 498.79 345.112 502.48 343.552 504.35 cv
cp
.721569 .921569 1 rgb
f
289.447 530.323 mo
293.489 530.323 349.003 526.067 364.336 526.367 cv
366.336 525 350.408 520.974 340.93 521.677 cv
331.452 522.38 289.447 530.323 289.447 530.323 cv
cp
f
52.5547 557.174 mo
23.3083 568 li
23.3083 568 44.6833 578.5 64.0928 575.5 cv
83.5026 572.5 115.503 566 116.002 560.5 cv
116.503 555 85.9064 549.189 76.794 550.385 cv
67.6818 551.581 52.5547 557.174 52.5547 557.174 cv
f
532.749 480 mo
570.252 465.913 li
570.252 465.913 593.515 455.333 593.925 455.333 cv
594.336 455.333 620.336 442.201 638.002 444.1 cv
643.669 442.333 638.669 438.579 626.669 439.456 cv
614.669 440.333 555.829 462.667 532.749 480 cv
f
548.449 460.008 mo
549.302 473.295 li
552.662 473.295 li
550.608 458.53 li
548.449 460.008 li
cp
.188235 0 0 rgb
f
583.669 448.667 mo
572.836 455.333 566.317 454.11 561.127 455.25 cv
563.703 460.023 561.877 461.25 557.753 464.809 cv
553.267 468.679 536.252 473.875 522.189 472.739 cv
522.189 472.739 506.803 454.95 510.802 444.36 cv
514.782 433.84 514.802 423.89 526.583 418.38 cv
526.472 415.22 527.112 412.43 528.682 410 cv
528.682 410 543.602 401.28 554.372 404.78 cv
565.142 408.27 575.132 407.8 581.192 419.52 cv
587.252 431.25 598.423 439.587 583.669 448.667 cv
0 .309804 .176471 rgb
f
560.246 419.333 mo
560.066 424.053 556.449 426.866 551.483 427.25 cv
548.252 427.5 533.373 434.328 524.753 445.75 cv
514.752 459 522.189 472.739 522.189 472.739 cv
522.189 472.739 522.189 472.739 514.799 470.269 cv
512.489 469.489 510.749 467.469 509.419 464.809 cv
506.519 458.949 505.659 449.969 505.299 444.359 cv
504.449 431.099 514.799 418.769 518.369 414.469 cv
521.929 410.169 535.299 404.269 544.939 406.769 cv
549.709 408.009 560.446 414.693 560.246 419.333 cv
.721569 .921569 1 rgb
f
551.469 416.829 mo
533.699 416.289 523.619 435.249 515.629 443.129 cv
511.319 447.399 509.829 456.649 509.419 464.809 cv
506.519 458.949 505.659 449.969 505.299 444.359 cv
504.449 431.099 514.799 418.769 518.369 414.469 cv
521.929 410.169 535.299 404.269 544.939 406.769 cv
549.709 408.009 551.669 412.189 551.469 416.829 cv
.909804 1 1 rgb
f
555.712 444.837 mo
555.146 447.29 552.971 448.4 550.333 448.104 cv
548.617 447.912 540.144 449.999 534.489 455.116 cv
527.928 461.052 530.447 468.988 530.447 468.988 cv
530.447 468.988 530.447 468.988 526.826 466.956 cv
525.694 466.316 524.985 465.085 524.555 463.56 cv
523.623 460.202 524.071 455.415 524.444 452.442 cv
525.325 445.415 531.977 439.996 534.276 438.102 cv
536.57 436.207 544.159 434.455 548.955 436.728 cv
551.328 437.854 556.281 442.428 555.712 444.837 cv
cp
.721569 .921569 1 rgb
f
551.368 442.648 mo
542.119 440.588 534.946 449.505 529.975 452.831 cv
527.291 454.635 525.586 459.329 524.555 463.56 cv
523.623 460.202 524.071 455.415 524.444 452.442 cv
525.325 445.415 531.977 439.996 534.276 438.102 cv
536.57 436.207 544.159 434.455 548.955 436.728 cv
551.328 437.854 551.937 440.239 551.368 442.648 cv
cp
.909804 1 1 rgb
f
593.542 437.1 mo
592.532 441.92 588.442 444.08 583.802 444.1 cv
579.083 444.14 573.773 441.97 570.523 438.19 cv
564.102 430.68 559.413 424.56 550.513 416.36 cv
550.393 416.25 550.262 416.14 550.143 416.03 cv
541.202 408.43 526.563 417.5 526.563 417.5 cv
526.563 417.5 526.563 417.5 528.682 410 cv
529.352 407.66 531.292 405.82 533.883 404.37 cv
539.603 401.19 548.533 399.91 554.112 399.28 cv
567.322 397.81 580.123 407.56 584.593 410.92 cv
586.573 412.42 588.972 415.84 590.833 420.03 cv
593.163 425.26 594.672 431.69 593.542 437.1 cv
.721569 .921569 1 rgb
f
562.446 455.408 mo
564.463 468.988 li
570.253 465.913 li
562.69 446.43 li
563.596 441.686 564.949 433.888 564.151 435.491 cv
561.144 442.595 li
558.698 439.456 li
558.167 429.429 li
556.679 438.425 li
552.214 433.607 li
552.157 433.742 559.759 446.452 560.249 449.606 cv
560.249 449.606 560.109 452.737 558.811 452.987 cv
556.317 453.465 560.617 453.646 562.446 455.408 cv
cp
.188235 0 0 rgb
f
590.833 420.03 mo
590.092 420.56 589.262 421.1 588.333 421.62 cv
578.333 427.23 562.672 418.33 555.672 416.67 cv
554.755 416.454 553.484 416.581 552.176 416.708 cv
551.246 416.799 550.297 416.89 549.445 416.857 cv
540.505 409.257 526.563 417.5 526.563 417.5 cv
526.563 417.5 526.563 417.5 528.682 410 cv
529.352 407.66 531.292 405.82 533.883 404.37 cv
539.603 401.19 548.533 399.91 554.112 399.28 cv
567.322 397.81 580.123 407.56 584.593 410.92 cv
586.573 412.42 588.972 415.84 590.833 420.03 cv
.909804 1 1 rgb
f
0 722.453 mo
0 722.453 30.9944 674.539 52.8556 671.913 cv
74.7168 669.288 446.003 638.287 454.002 636.37 cv
462.003 634.453 560.848 608.452 593.925 590.453 cv
627.002 572.453 660.656 540.686 660.656 540.686 cv
660.656 990.025 li
0 990.025 li
0 722.453 li
f
37.9199 823.465 mo
37.9199 823.465 104.693 755.652 80.3411 725.226 cv
55.9896 694.799 34.1534 673.709 61.8025 670.3 cv
89.4515 666.892 125.75 673.118 149.577 678.07 cv
185.105 685.453 255.145 725.226 255.145 725.226 cv
177.698 785.115 li
29.1936 842.682 li
37.9199 823.465 li
.501961 .858824 1 rgb
f
344.087 733.908 mo
337.415 736.576 190.24 782.494 180.197 785.325 cv
172.346 787.727 li
172.202 787.781 166.333 789.531 166.26 789.549 cv
166.05 785.115 li
166.05 785.115 177.41 745.989 183.973 729.779 cv
183.973 729.779 198.379 692.094 248 689.39 cv
277.192 687.803 297.982 691.409 312.298 698.225 cv
322.324 702.967 329.175 709.278 333.521 716.454 cv
344.087 733.908 358.457 728.156 344.087 733.908 cv
.909804 1 1 rgb
f
344.087 733.908 mo
337.415 736.576 176.304 786.718 166.26 789.549 cv
170.949 788.071 208.296 771.448 214.463 756.266 cv
214.463 756.266 257.503 701.128 307.105 698.423 cv
308.909 698.333 310.621 698.261 312.298 698.225 cv
322.324 702.967 329.175 709.278 333.521 716.454 cv
344.087 733.908 358.457 728.156 344.087 733.908 cv
.501961 .858824 1 rgb
f
grestore
383.682 52.1645 mo
380.892 52.1642 378.178 48.905 380.353 45.9844 cv
381.164 44.8954 382.213 44.4438 383.252 44.4438 cv
386.042 44.4438 388.757 47.7035 386.581 50.6238 cv
385.77 51.7129 384.721 52.1645 383.682 52.1645 cv
false sop
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~T9ZmXQ+*BN\"AqpT9ZmXQ+*BN\"AqpT9ZmXQ+*BN\"AqpT9ZmXQ+*BN\"AqpT9ZmXQ+*BN\"AqpT9ZmX
Q+*BN\"AqpT9ZmXQ+*BN\"AqpT9ZmXQ+*BN\"AqpT9ZmXQ+*BN\"AqpT9ZmXQ+*BN\"AqpT9ZmXQ+*BN
\"AqpT9ZmXQ+*BN\"AqpT9ZmXQ+*BN\"AqpT9ZmXQ+*BN\"AqpT9ZmXQ+*BN\"AqpT9ZmXQ+*BN\"Aqp
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~jR3'/mf2>8ro<DFj6Za(li#f-r8Ho;i9C*qkP<usq;(0-guS4aj7_6ep"JBsg#)DRhX]:Sn^cLbe_9KA
g$[>AmF'VQdFIR0eEYB/kfqN<bg>LqcK33njN5U*aN<G^aPb%Who*Lj_o1?I_V;lAg:tDU^:i.3][ja,
e[i9>\[U"r[F)FhcaC((['7f\Y04)Ob-7qfY,TIDVoGg7`2]WNWM75,TYRFr^87@5URJiiRC]&X\Y#.r
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~jR3'/mf2A9s5`VJjR3'/mf2A9s5`VJjR3'/mf2A9s5`VJjR3'/mf2A9s5`VJjR3'/mf2A9s5`VJjR3'/
mf2A9s5`VJjR3'/mf2A9s5`VJjR3'/mf2A9s5`VJjR3'/mf2A9s5`VJjR3'/mf2A9s5`VJjR3'/mf2A9
s5`VJjR3'/mf2A9s5`VJjR3'/mf2A9s5`VJjR3'/mf2A9s5`VJjR3'/mf2A9s5`VJjR3'/mf2A9s5`VJ
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00537634 .827957 ]
/Encode [0 1 1 0 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~St;RHT:hjNTq\9UUSFW]V5:#cVP^8hW2ZbqWN*#"XK8M*Xf\_.YHP17Yd(I<Z*L^B['[3J[C*EN[^NZS
\@K/\\[oDb]Y(nj]tM+n^:q@s^VIY$_8=(+_o'C1`5KU5`l?'>a2l?CaN;QGb0%lLbKJ)Qbfn>VcHab^
cd:%cdF$@hdaHRme'lgreC<%!e^i=&f@SX+f\"j0g"G*5g=k97g=tB:gt^]?h;-oDhVR/Ihr!AMi8EPO
iSibSio8tWio8tWio9"Yj5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[
~>
<~Pa%GuQC!r*R$jA1R[T_9S=Q4BT:_dLTq\9VUSO]]V5:&eVl6PnWiE,#X/rD)Xfek2YctC<ZEgdB['[6K
[^W`T\%&uZ]"5Md]Y(nj^:q@s^VIY$_8=+-`5KU5`Pog9a2c9BaN;QHb0.uPc-=MXcHjh`d*U1fdaHUn
e'umse^`7%f@SX,f\"m1g"G*6gYCT>h;-oChVR,Hhr*JPiSieUioB(ZjQ,C_jlPUdk2tjikih6okiq?r
lK[["lg*m'm-O-,mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.
~>
<~[^NZS\@K/\\[oDb]Y(nj]tM+n^V@S"^qmk(_Sa:/`5KX7`l?$=a2c9Bai_cKb0/#Qc-=MYcHa_]d*U1f
dF-IkdaQ^qe^`4$f%/F(f\"m1g"P06g=tB:gt^`BhVR,Hhr!AMiSrkVioB(ZjQ,C_jlPUdk2tjikND'n
l0@R!lg*m&m-O*+mHs?0mdBQ4n*oi9naZ/>o()ACoCMVHo^qhLp%J+Qp\4FVq"XXZq"X[\q>'m`qYU0e
r;?Kjr;?KkrVc]nrVc`prr<#us8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
342.302 36.5832 mo
339.085 36.5828 336.229 32.3582 339.186 29.4246 cv
340.052 28.5663 341.022 28.2061 341.962 28.2061 cv
345.179 28.2061 348.035 32.4313 345.077 35.3646 cv
344.211 36.2229 343.241 36.5833 342.302 36.5832 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~C0?O2=cI0!NG;UUC0?O2=cI0!NG;UUC0?O2=cI0!NG;UUC0?O2=cI0!NG;UUC0?O2=cI0!NG;UUC0?O2
=cI0!NG;UUC0?O2=cI0!NG;UUC0?O2=cI0!NG;UUC0?O2=cI0!NG;UUC0?O2=cI0!NG;UUC0?O2=cI0!
NG;UUC0?O2=cI0!NG;UUC0?O2=cI0!NG;UUC0?O2=cI0!NG;UUC0?O2=cI0!NG;UUC0?O2=cI0!NG;UU
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~f&cq^jSmZirm]s+e)C5Qi;:pYqU"'oceS9>g@ibDouktYajot'e*tE*n&<W@`6R_dbj*$ekeG4%^;f9I
`8nPIijlk_\@pe.]A9j)gTn<AYdN)dZIZ.^e>ob#WN4CEWQqB<bbV&WU8#`%T>mIn`13:5S!UpYQG/]L
]9SJhPE*/7Mm\S%Z]'XDMM&*gJ?=QSWeGeuJp=/CG,0S-U3ppPH#9*rC7B?YQulo*EFG)M?]f/0O(qgW
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~f&cq_jo<ons46<3f&cq_jo<ons46<3f&cq_jo<ons46<3f&cq_jo<ons46<3f&cq_jo<ons46<3f&cq_
jo<ons46<3f&cq_jo<ons46<3f&cq_jo<ons46<3f&cq_jo<ons46<3f&cq_jo<ons46<3f&cq_jo<on
s46<3f&cq_jo<ons46<3f&cq_jo<ons46<3f&cq_jo<ons46<3f&cq_jo<ons46<3f&cq_jo<ons46<3
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00537634 .827957 ]
/Encode [0 1 1 0 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Bk_<sCM[j*DJsK5EH6,BFEDVIG'8(RG^4U]H[L6iIXZcsJ:W9'K7nr4Knb>;LPUeDMMd=NN/`gWO,oBb
P*;)oPa.Q#Q^=)-R@9S6S"#q<SXuFFT:hmOU8"EYUnsobVl-JlW2ZbrWiN2%Xf\b/YHP.6Yd(L>Za7$H
[C3NQ\@B&Y\[oAa]=Y_g]tM.o^;%Fu_83t(_Sa:0`5KX6`l?'>a2l?CaiV]JbKJ)Qbfn>VcHab^cd:%c
dF$@hdaHRme'ldpe'lgreCE+"e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#
~>
<~=BJ^0>?kH??=.)J@:EbYAS,OeBPD3sCi+'-DfB]9EcZAHG'A.TH$XgaI!pHmIt3*%K7nr5LPL\BMMd=N
NK0$[O-#KePE_>uQBmi'R$jD4S=Q4BStD[LU8"EYUnsobVl6SoWiN2%Xfeh1YctC;ZEppG[C3QR\@B)\
]">Se]tV7r^qmk(_Sa=1`Poj;a2l?Db0%oNbg"DXcHab^d*U1gdaQ[pe^`7%f@\a/g"G*5gY:N=gtgfB
hVR/Ii8EPPiSieUj5]1[j5f:^jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_
~>
<~N/WaUNfT6_OHG]iPa%H!QC!r*R@9V7S=Q4BStD[LU8"EYUnsobVl-JlWN*#"XKAY.YHP18Z*L[A['[6L
\%&rY\[oA`]=bhk^;%Fu_84"*_o0L4`Q#s=aN2KGb0.uPc-=PZcd:%ddF-IleC<%!f%/F(f@\d0g=k<:
gtgfChr!>Ki8NYSioB+\jQ,Fbk3(pjkih9qlKdd&m-X6/mdBQ4n*oi:o()ABoCV\Jp%A%Pp@e7Uq"aa]
qYL'bqtp9gr;?NlrVc]nrVlfqs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
353.619 21.3475 mo
352.855 21.3474 352.086 21.0082 351.515 20.19 cv
350.051 18.093 351.98 15.8737 353.936 15.8737 cv
354.7 15.8737 355.469 16.213 356.04 17.0312 cv
357.504 19.1281 355.575 21.3478 353.619 21.3475 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
340.429 19.1783 mo
338.097 19.1781 335.887 16.3351 337.825 13.9959 cv
338.491 13.1923 339.305 12.8581 340.104 12.8581 cv
342.436 12.8581 344.646 15.7011 342.708 18.0404 cv
342.042 18.8441 341.228 19.1783 340.429 19.1783 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
567.093 523.68 mo
566.003 523.68 564.898 522.536 565.607 521.302 cv
565.925 520.748 566.41 520.519 566.898 520.519 cv
567.278 520.519 567.659 520.658 567.965 520.891 cv
568.093 521.086 568.246 521.256 568.418 521.402 cv
568.656 521.822 568.698 522.35 568.384 522.897 cv
568.066 523.451 567.581 523.68 567.093 523.68 cv
.996078 1 1 rgb
f
566.494 498.737 mo
562.639 498.737 560.618 492.679 564.887 490.815 cv
565.476 490.558 566.043 490.443 566.575 490.443 cv
570.429 490.443 572.45 496.501 568.182 498.364 cv
567.592 498.621 567.026 498.737 566.494 498.737 cv
.882353 .968627 1 rgb
f
623.494 397.104 mo
619.64 397.104 617.619 391.046 621.887 389.183 cv
622.477 388.926 623.043 388.811 623.575 388.811 cv
627.429 388.811 629.45 394.869 625.182 396.732 cv
624.592 396.989 624.026 397.105 623.494 397.104 cv
.968627 .968627 .984314 rgb
f
425.441 361.958 mo
424.007 361.958 422.602 361.17 422.163 359.368 cv
421.527 356.757 423.662 355.109 425.737 355.109 cv
427.171 355.109 428.576 355.897 429.014 357.699 cv
429.651 360.31 427.515 361.958 425.441 361.958 cv
.745098 .713725 .968627 rgb
f
443.615 325.84 mo
438.71 321.017 li
439.263 320.304 440.12 319.82 441.273 319.82 cv
441.321 319.82 441.37 319.82 441.419 319.822 cv
444.82 319.94 445.478 324.002 443.615 325.84 cv
.94902 .941176 .964706 rgb
f
441.325 326.729 mo
441.277 326.729 441.228 326.728 441.179 326.726 cv
437.957 326.614 437.198 322.965 438.71 321.017 cv
443.615 325.84 li
443.067 326.38 442.302 326.729 441.325 326.729 cv
.909804 .886274 .941176 rgb
f
515.573 433.899 mo
513.061 433.898 510.58 431.052 512.446 428.354 cv
513.182 427.29 514.175 426.85 515.163 426.85 cv
517.675 426.85 520.156 429.696 518.29 432.395 cv
517.554 433.458 516.561 433.899 515.573 433.899 cv
.941176 1 1 rgb
f
516.458 444.694 mo
515.817 444.694 515.171 444.575 514.571 444.347 cv
514.903 443.906 515.255 443.499 515.629 443.129 cv
517.095 441.683 518.631 439.865 520.272 437.862 cv
520.829 438.727 521.077 439.832 520.811 441.136 cv
520.308 443.602 518.402 444.694 516.458 444.694 cv
.882353 .968627 1 rgb
f
514.571 444.347 mo
512.683 443.632 511.238 441.842 511.758 439.29 cv
512.261 436.824 514.167 435.732 516.112 435.732 cv
517.738 435.732 519.392 436.497 520.272 437.862 cv
518.631 439.865 517.095 441.683 515.629 443.129 cv
515.255 443.499 514.903 443.906 514.571 444.347 cv
.960784 1 1 rgb
f
482.762 400.38 mo
481.498 400.38 480.855 398.388 482.256 397.797 cv
482.444 397.718 482.623 397.683 482.792 397.683 cv
484.055 397.683 484.699 399.674 483.297 400.266 cv
483.11 400.345 482.93 400.38 482.762 400.38 cv
.745098 .745098 .890196 rgb
f
521.603 411.758 mo
520.764 410.472 521.432 408.27 523.334 408.27 cv
523.406 408.27 523.48 408.274 523.555 408.28 cv
524.543 408.365 525.138 408.957 525.373 409.681 cv
523.976 410.337 522.701 411.042 521.603 411.758 cv
f
523.402 412.662 mo
523.33 412.662 523.256 412.658 523.18 412.652 cv
522.436 412.588 521.915 412.237 521.603 411.758 cv
522.701 411.042 523.976 410.337 525.373 409.681 cv
525.79 410.965 525.071 412.662 523.402 412.662 cv
.960784 1 1 rgb
f
447.148 250.052 mo
445.941 250.052 444.759 249.384 444.411 247.863 cv
443.919 245.709 445.674 244.371 447.382 244.371 cv
448.588 244.371 449.77 245.039 450.118 246.559 cv
450.61 248.714 448.855 250.052 447.148 250.052 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~oCDVHo(M\Gp@IkKoCDVHo(M\Gp@IkKoCDVHo(M\Gp@IkKoCDVHo(M\Gp@IkKoCDVHo(M\Gp@IkKoCDVH
o(M\Gp@IkKoCDVHo(M\Gp@IkKoCDVHo(M\Gp@IkKoCDVHo(M\Gp@IkKoCDVHo(M\Gp@IkKoCDVHo(M\G
p@IkKoCDVHo(M\Gp@IkKoCDVHo(M\Gp@IkKoCDVHo(M\Gp@IkKoCDVHo(M\Gp@IkKoCDVHo(M\Gp@IkK
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~r;HZmrVucns82cpqu-QlrVucms82`nqu$Hjr;QTkrqlWmqY^?hr;QQirqcNkqYU6fqu-BgrVHEiqYU6e
qYg6drV?<gq>1$bqY^0cr;$0dq"aj_q>C$`r:p*bq"Xa]q"sj]qtKm_p\=X[q"jaZqY0a\p\4OXp\OUX
qY'XYp@e=UpA+FUq=XIWp%A.Rp%\4Qq"==Tp%8%Oo_A(Nq"44Qo^qnMoCqkJp[e"NoCM\Io(M\Gp@IkK
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~r;HZnrVufos8;iqr;HZnrVufos8;iqr;HZnrVufos8;iqr;HZnrVufos8;iqr;HZnrVufos8;iqr;HZn
rVufos8;iqr;HZnrVufos8;iqr;HZnrVufos8;iqr;HZnrVufos8;iqr;HZnrVufos8;iqr;HZnrVufo
s8;iqr;HZnrVufos8;iqr;HZnrVufos8;iqr;HZnrVufos8;iqr;HZnrVufos8;iqr;HZnrVufos8;iq
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00537634 .827957 ]
/Encode [0 1 1 0 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~o()ABo()ABo()ABo()ABo()ACoCMSFoCMSFoCMSFoCMSGo^qeJo^qeJo^qeJo^qeJo^qeKp%A"Np%A"N
p%A"Np%A"Np%A"Op@e4Rp@e4Rp@e4Rp@e4Rp@e4Sp\4FVp\4FVp\4FVp\4FVp\4FVp\4FWq"XXZq"XXZ
q"XXZq"XXZq"XXZq"X[\q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^qYL'bqYL'bqYL'bqYL'bqYL'b
qYL'bqYL'bqYL'bqYL'bqYU0eqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
~>
<~naZ/>naZ/>nac8Ao()ABo()ABo()DDoCMSFoCMSFoCMSFoCMSGo^qeJo^qeJo^qeJp%A"Np%A"Np%A"N
p%A"Np%J+Qp@e4Rp@e4Rp@e4Rp@n=Up\4FVp\4FVp\4FVp\4FVp\=OYq"XXZq"XXZq"XXZq"X[\q>'j^
q>'j^q>'j^q>'j^q>'m`qYL'bqYL'bqYL'bqYL'bqYL'bqYL*dqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kj
~>
<~p%A"Np%A"Np%A"Np@e4Rp@e4Rp@e4Rp@e4Rp@n=Up\4FVp\4FVp\4FVp\4FVp\=OYq"XXZq"XXZq"XXZ
q"XXZq"aa]q>'j^q>'j^q>'j^q>'j^q>0saqYL'bqYL'bqYL'bqYL'bqYU0eqtp9fqtp9fqtp9fqtp9f
qtp9fr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?KkrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVlfq
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
502.723 428.332 mo
500.94 428.332 499.156 426.374 500.412 424.411 cv
500.936 423.594 501.677 423.256 502.419 423.256 cv
504.203 423.256 505.986 425.214 504.73 427.176 cv
504.207 427.993 503.465 428.332 502.723 428.332 cv
1 1 1 rgb
f
336.599 388.837 mo
336.27 388.481 li
336.772 388.351 li
336.599 388.837 li
.745098 .713725 .968627 rgb
f
337.54 389.856 mo
336.599 388.837 li
336.772 388.351 li
336.27 388.481 li
335.348 387.483 li
335.434 387.47 335.52 387.463 335.607 387.463 cv
336.77 387.463 337.906 388.629 337.54 389.856 cv
.607843 .6 .827451 rgb
f
335.816 391.218 mo
334.459 391.217 333.138 389.63 334.198 388.211 cv
334.525 387.773 334.931 387.547 335.348 387.483 cv
336.27 388.481 li
336.599 388.837 li
337.54 389.856 li
337.479 390.061 337.376 390.267 337.225 390.47 cv
336.83 390.998 336.32 391.218 335.816 391.218 cv
f
560.873 403.594 mo
559.441 403.594 558.099 401.823 559.314 400.41 cv
559.719 399.939 560.206 399.743 560.682 399.743 cv
562.113 399.743 563.456 401.515 562.24 402.927 cv
561.835 403.398 561.349 403.594 560.873 403.594 cv
.960784 1 1 rgb
f
504.956 395.888 mo
504.648 395.888 504.324 395.849 503.985 395.766 cv
503.835 395.729 503.693 395.686 503.556 395.637 cv
501.516 390.853 li
502.005 389.504 503.166 388.414 504.793 388.414 cv
505.1 388.414 505.424 388.453 505.763 388.536 cv
510.083 389.598 508.864 395.888 504.956 395.888 cv
.968627 .968627 .984314 rgb
f
503.556 395.637 mo
501.394 394.862 500.87 392.632 501.516 390.853 cv
503.556 395.637 li
f
565.884 380.962 mo
565.126 380.962 564.384 380.545 564.152 379.593 cv
563.816 378.213 564.944 377.342 566.041 377.342 cv
566.798 377.342 567.54 377.759 567.773 378.711 cv
568.109 380.09 566.98 380.962 565.884 380.962 cv
.745098 .745098 .890196 rgb
f
515.077 348.315 mo
514.412 348.315 513.727 347.777 513.945 346.945 cv
514.092 346.385 514.529 346.141 514.976 346.141 cv
515.376 346.141 515.784 346.337 515.997 346.674 cv
515.323 347.782 li
516.094 346.874 li
516.158 347.058 516.17 347.273 516.107 347.511 cv
515.961 348.072 515.523 348.315 515.077 348.315 cv
.745098 .713725 .968627 rgb
f
515.323 347.782 mo
515.997 346.674 li
516.036 346.736 516.069 346.803 516.094 346.874 cv
515.323 347.782 li
.607843 .6 .827451 rgb
f
566.767 341.936 mo
565.423 341.936 564.238 341.076 563.596 339.925 cv
563.855 339.855 564 339.759 564 339.63 cv
564 339.296 563.631 338.62 563.094 337.813 cv
563.158 336.861 563.63 335.923 564.66 335.225 cv
565.334 334.768 566.014 334.571 566.658 334.571 cv
568.287 334.571 569.683 335.835 570.162 337.35 cv
568.614 341.379 li
567.99 341.767 567.363 341.936 566.767 341.936 cv
.835294 .815686 .980392 rgb
f
563.596 339.925 mo
563.235 339.279 563.045 338.542 563.094 337.813 cv
563.631 338.62 564 339.296 564 339.63 cv
564 339.759 563.855 339.855 563.596 339.925 cv
f
568.614 341.379 mo
570.162 337.35 li
570.589 338.701 570.285 340.251 568.765 341.282 cv
568.715 341.316 568.664 341.348 568.614 341.379 cv
.745098 .745098 .890196 rgb
f
550.749 309.662 mo
549.144 309.662 547.535 308.614 547.57 306.549 cv
547.604 304.536 549.161 303.544 550.723 303.544 cv
552.328 303.544 553.937 304.592 553.902 306.657 cv
553.868 308.67 552.31 309.662 550.749 309.662 cv
1 1 1 rgb
f
526.035 327.015 mo
523.358 327.015 520.592 324.78 521.576 321.453 cv
522.208 319.317 523.886 318.4 525.601 318.4 cv
528.278 318.4 531.044 320.635 530.06 323.963 cv
529.428 326.098 527.75 327.015 526.035 327.015 cv
f
539.944 272.743 mo
536.095 272.742 533.589 266.903 537.742 264.519 cv
538.487 264.092 539.218 263.905 539.907 263.905 cv
543.756 263.905 546.262 269.745 542.109 272.129 cv
541.365 272.556 540.633 272.743 539.944 272.743 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
534.523 298.983 mo
533.299 298.983 532.285 298.383 531.596 297.505 cv
531.135 296.787 li
530.108 294.801 530.488 292.041 533.198 291.056 cv
533.709 290.871 534.196 290.786 534.655 290.786 cv
538.624 290.786 540.397 297.108 535.98 298.713 cv
535.469 298.899 534.981 298.983 534.523 298.983 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
531.596 297.505 mo
531.421 297.282 531.266 297.041 531.135 296.787 cv
531.596 297.505 li
.921569 .905882 .941176 rgb
f
562.138 249.389 mo
560.63 249.389 559.122 247.757 560.108 246.1 cv
560.063 247.313 561.124 248.518 562.362 248.518 cv
562.789 248.518 563.236 248.375 563.667 248.04 cv
563.899 247.859 564.078 247.66 564.21 247.45 cv
564.175 247.759 564.064 248.08 563.858 248.401 cv
563.408 249.1 562.773 249.389 562.138 249.389 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
548.23 194.101 mo
545.096 194.101 542.252 190.071 545.055 187.124 cv
545.916 186.218 546.904 185.839 547.866 185.839 cv
551 185.839 553.844 189.869 551.041 192.817 cv
550.18 193.722 549.191 194.101 548.23 194.101 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00537634 .827957 ]
/Encode [0 1 1 0 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
255 255 255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
515.085 268.121 mo
511.479 268.121 509.466 262.497 513.441 260.627 cv
514.031 260.349 514.601 260.226 515.135 260.226 cv
518.741 260.226 520.753 265.85 516.779 267.72 cv
516.188 267.998 515.619 268.121 515.085 268.121 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
569.803 226.523 mo
568.799 226.523 567.778 225.808 567.931 224.523 cv
568.059 223.454 568.882 222.96 569.716 222.96 cv
570.72 222.96 571.741 223.675 571.588 224.96 cv
571.46 226.03 570.637 226.523 569.803 226.523 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
564.21 247.45 mo
564.356 246.137 563.117 245.033 561.877 245.033 cv
561.241 245.033 560.606 245.323 560.157 246.022 cv
560.14 246.048 560.124 246.074 560.108 246.1 cv
560.129 245.547 560.379 244.992 560.948 244.549 cv
561.379 244.214 561.827 244.071 562.253 244.071 cv
563.825 244.071 565.112 246.015 564.21 247.45 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
562.362 248.518 mo
561.124 248.518 560.063 247.313 560.108 246.1 cv
560.124 246.074 560.14 246.048 560.157 246.022 cv
560.606 245.323 561.241 245.033 561.877 245.033 cv
563.117 245.033 564.356 246.137 564.21 247.45 cv
564.078 247.66 563.899 247.859 563.667 248.04 cv
563.236 248.375 562.789 248.518 562.362 248.518 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~qYL*cqYU-cqtg0dqYL*cqYU-cqtg0dqYL*cqYU-cqtg0dqYL*cqYU-cqtg0dqYL*cqYU-cqtg0dqYL*c
qYU-cqtg0dqYL*cqYU-cqtg0dqYL*cqYU-cqtg0dqYL*cqYU-cqtg0dqYL*cqYU-cqtg0dqYL*cqYU-c
qtg0dqYL*cqYU-cqtg0dqYL*cqYU-cqtg0dqYL*cqYU-cqtg0dqYL*cqYU-cqtg0dqYL*cqYU-cqtg0d
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~rr2rrrr;rrs8DrsrVliqrr;rrs8DrsrVliqrr;rrs8DrsrVliqrr;rqs8DorrVc`orVlcorr)fprVc`n
rVl`nrqu`or;HWmrVl`nrqu`or;HWmrVl`nrqu`nr;?Nkr;HQkrVZTlr;?Nkr;HQkrVZTlr;?Njr;HNj
rVQKjqtp?hqu-EhrVQKjqtp?hqu$?gr;6Bhqtg6eqY^3dr;-9fqYL-dqY^3dr;-9fqYL*cqYU-cqtg0d
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~rr2rsrr;uss8N#trr2rsrr;uss8N#trr2rsrr;uss8N#trr2rsrr;uss8N#trr2rsrr;uss8N#trr2rs
rr;uss8N#trr2rsrr;uss8N#trr2rsrr;uss8N#trr2rsrr;uss8N#trr2rsrr;uss8N#trr2rsrr;us
s8N#trr2rsrr;uss8N#trr2rsrr;uss8N#trr2rsrr;uss8N#trr2rsrr;uss8N#trr2rsrr;uss8N#t
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00537634 .827957 ]
/Encode [0 1 1 0 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j_qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
qYL'bqYL'bqYL'cqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
qtp9fqtp9fqtp9fqtp<hr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;?Kjr;HTmrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n
~>
<~q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j_qYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
qYL'bqYU0eqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqu$Bir;?Kjr;?Kjr;?Kjr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?NlrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n
~>
<~qYL'bqYL'bqYL'bqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqu$Bir;?Kjr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;HTmrVc]nrVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]orr2rts8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
535.485 217.164 mo
534.537 217.164 533.596 216.588 533.5 215.37 cv
533.392 213.992 534.474 213.257 535.545 213.257 cv
536.494 213.257 537.434 213.834 537.53 215.052 cv
537.639 216.429 536.557 217.165 535.485 217.164 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
583.027 195.871 mo
580.903 195.871 578.752 194.398 578.997 191.673 cv
579.21 189.3 581.036 188.186 582.883 188.186 cv
585.007 188.186 587.158 189.659 586.914 192.384 cv
586.701 194.757 584.875 195.871 583.027 195.871 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
578.378 208.598 mo
576.701 208.598 575.872 205.947 577.735 205.188 cv
577.975 205.091 578.205 205.046 578.422 205.046 cv
580.099 205.046 580.927 207.698 579.065 208.456 cv
578.824 208.554 578.594 208.598 578.378 208.598 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
601.85 199.633 mo
599.429 199.633 597.019 196.945 598.758 194.305 cv
599.468 193.226 600.456 192.779 601.443 192.779 cv
603.863 192.779 606.274 195.467 604.535 198.108 cv
603.825 199.186 602.837 199.633 601.85 199.633 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
455.363 148.439 mo
452.901 148.439 450.465 146.959 450.163 143.802 cv
449.813 140.138 452.702 138.151 455.555 138.151 cv
458.018 138.151 460.453 139.631 460.755 142.789 cv
461.106 146.453 458.217 148.439 455.363 148.439 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
588.594 166.793 mo
586.968 166.793 585.332 165.71 585.419 163.618 cv
585.5 161.656 587.015 160.705 588.539 160.705 cv
590.165 160.705 591.801 161.788 591.714 163.88 cv
591.633 165.842 590.118 166.793 588.594 166.793 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
520.662 217.255 mo
519.7 217.255 519.475 215.71 520.521 215.515 cv
520.584 215.503 520.644 215.498 520.701 215.498 cv
521.663 215.498 521.888 217.043 520.842 217.238 cv
520.779 217.25 520.719 217.255 520.662 217.255 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
472.501 166.305 mo
471.95 165.289 472.376 164.349 473.114 163.842 cv
472.713 164.507 472.481 165.328 472.501 166.305 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
492.934 215.122 mo
492.78 215.122 492.62 215.109 492.454 215.083 cv
489.193 214.565 489.804 209.726 492.819 209.726 cv
492.973 209.726 493.133 209.739 493.298 209.765 cv
496.56 210.283 495.948 215.122 492.934 215.122 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
528.502 147.548 mo
528.343 147.548 528.178 147.538 528.009 147.518 cv
523.586 146.989 524.219 140.362 528.367 140.362 cv
528.526 140.362 528.691 140.372 528.86 140.392 cv
533.283 140.92 532.651 147.548 528.502 147.548 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
418.27 143.79 mo
412.61 143.789 411.205 134.689 417.381 133.469 cv
417.773 133.392 418.148 133.355 418.507 133.355 cv
424.167 133.355 425.573 142.457 419.396 143.676 cv
419.004 143.754 418.629 143.79 418.27 143.79 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
478.505 133.153 mo
477.819 133.153 477.134 132.713 477.129 131.832 cv
477.124 130.941 477.815 130.495 478.506 130.495 cv
479.191 130.495 479.876 130.934 479.881 131.816 cv
479.886 132.706 479.195 133.153 478.505 133.153 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
416.832 169.887 mo
415.527 169.887 414.245 169.143 413.95 167.485 cv
413.564 165.306 415.315 164.025 417.027 164.025 cv
418.332 164.025 419.614 164.77 419.908 166.428 cv
420.295 168.607 418.543 169.887 416.832 169.887 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
382.452 203.468 mo
378.257 203.467 377.756 196.799 382.172 196.374 cv
382.309 196.361 382.442 196.354 382.572 196.354 cv
386.766 196.354 387.268 203.024 382.852 203.448 cv
382.715 203.462 382.582 203.468 382.452 203.468 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
400.614 169.792 mo
398.663 169.791 396.65 167.955 397.659 165.623 cv
398.198 164.38 399.219 163.859 400.258 163.859 cv
402.209 163.859 404.222 165.696 403.213 168.027 cv
402.675 169.271 401.653 169.792 400.614 169.792 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
377.036 190.6 mo
372.149 190.599 369.083 183.125 374.392 180.226 cv
375.3 179.73 376.187 179.513 377.021 179.513 cv
381.908 179.513 384.975 186.988 379.666 189.886 cv
378.757 190.382 377.87 190.6 377.036 190.6 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
386.017 215.466 mo
383.928 215.466 382.532 212.317 384.773 210.984 cv
385.189 210.737 385.599 210.629 385.986 210.629 cv
388.074 210.629 389.47 213.777 387.229 215.111 cv
386.814 215.358 386.403 215.466 386.017 215.466 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
319.337 200.693 mo
319.028 200.693 318.725 200.529 318.608 200.145 cv
318.424 199.539 318.928 199.129 319.416 199.129 cv
319.726 199.129 320.029 199.293 320.146 199.677 cv
320.33 200.283 319.826 200.694 319.337 200.693 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
365.014 178.933 mo
361.073 178.933 358.906 172.773 363.256 170.764 cv
363.891 170.47 364.502 170.34 365.076 170.34 cv
369.017 170.34 371.184 176.499 366.834 178.509 cv
366.199 178.803 365.588 178.933 365.014 178.933 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
343.244 148.922 mo
339.695 148.922 336.198 144.878 338.859 141.082 cv
339.897 139.601 341.288 138.987 342.671 138.987 cv
346.22 138.987 349.717 143.032 347.056 146.828 cv
346.018 148.309 344.627 148.922 343.244 148.922 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
370.368 132.397 mo
368.947 132.397 367.662 130.561 368.941 129.233 cv
369.331 128.829 369.774 128.66 370.206 128.66 cv
371.628 128.66 372.912 130.496 371.633 131.824 cv
371.244 132.228 370.8 132.397 370.368 132.397 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
349.598 163.826 mo
345.888 163.826 345.672 157.988 349.484 157.805 cv
349.544 157.802 349.602 157.801 349.659 157.801 cv
353.37 157.801 353.586 163.639 349.773 163.822 cv
349.714 163.825 349.656 163.826 349.598 163.826 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
376.002 148.903 mo
373.231 148.902 371.671 144.584 374.724 143.134 cv
375.182 142.916 375.624 142.82 376.038 142.82 cv
378.81 142.82 380.369 147.138 377.316 148.588 cv
376.858 148.806 376.417 148.903 376.002 148.903 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
372.216 161.522 mo
371.045 161.522 370.104 159.872 371.276 158.937 cv
371.56 158.711 371.857 158.614 372.141 158.614 cv
373.312 158.614 374.253 160.264 373.081 161.199 cv
372.797 161.426 372.5 161.522 372.216 161.522 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
315.079 166.017 mo
314.457 166.017 313.82 165.545 313.97 164.757 cv
314.083 164.167 314.538 163.905 315.002 163.905 cv
315.623 163.905 316.261 164.376 316.11 165.165 cv
315.998 165.754 315.543 166.017 315.079 166.017 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
302.643 167.447 mo
301.031 167.446 299.446 166.642 298.604 164.72 cv
297.012 161.084 300.15 158.214 303.194 158.214 cv
304.805 158.214 306.39 159.019 307.232 160.941 cv
308.824 164.577 305.686 167.447 302.643 167.447 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
243.233 177.518 mo
241.995 177.518 240.763 176.748 240.689 175.155 cv
240.609 173.442 241.947 172.554 243.277 172.554 cv
244.516 172.554 245.748 173.324 245.822 174.916 cv
245.902 176.63 244.564 177.518 243.233 177.518 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
244.874 167.067 mo
243.206 167.067 241.797 164.789 243.407 163.367 cv
243.834 162.99 244.293 162.83 244.734 162.83 cv
246.403 162.83 247.812 165.109 246.202 166.531 cv
245.775 166.908 245.316 167.067 244.874 167.067 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
280.297 231.59 mo
278.26 231.59 276.675 228.678 278.746 227.115 cv
279.224 226.754 279.717 226.6 280.186 226.6 cv
282.222 226.6 283.808 229.511 281.737 231.075 cv
281.259 231.435 280.766 231.59 280.297 231.59 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
257.915 246.019 mo
255.084 245.109 253.061 241.408 255.725 238.591 cv
256.67 237.592 257.756 237.174 258.813 237.174 cv
262.243 237.174 265.362 241.574 262.304 244.81 cv
261.917 245.219 261.507 245.53 261.085 245.755 cv
260.713 245.53 260.265 245.397 259.746 245.397 cv
259.624 245.397 259.499 245.405 259.37 245.42 cv
258.766 245.49 258.283 245.708 257.915 246.019 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
259.641 250.975 mo
256.978 250.975 256.19 247.475 257.915 246.019 cv
258.335 246.153 258.772 246.227 259.215 246.227 cv
259.84 246.227 260.475 246.081 261.085 245.755 cv
263.027 246.931 262.897 250.616 260.017 250.953 cv
259.887 250.968 259.762 250.975 259.641 250.975 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
259.215 246.227 mo
258.772 246.227 258.335 246.153 257.915 246.019 cv
258.283 245.708 258.766 245.49 259.37 245.42 cv
259.499 245.405 259.624 245.397 259.746 245.397 cv
260.265 245.397 260.713 245.53 261.085 245.755 cv
260.475 246.081 259.84 246.227 259.215 246.227 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~SWgLQPI@$G[[iVjSWgLQPI@$G[[iVjSWgLQPI@$G[[iVjSWgLQPI@$G[[iVjSWgLQPI@$G[[iVjSWgLQ
PI@$G[[iVjSWgLQPI@$G[[iVjSWgLQPI@$G[[iVjSWgLQPI@$G[[iVjSWgLQPI@$G[[iVjSWgLQPI@$G
[[iVjSWgLQPI@$G[[iVjSWgLQPI@$G[[iVjSWgLQPI@$G[[iVjSWgLQPI@$G[[iVjSWgLQPI@$G[[iVj
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~jR3'.mJc/5ro<AEip6R&lho`,r8?i:i9:$okP<usq;(0,guS4aiq;$ap"A9qf\c;PhXT1PnC?:_eCs?>
g$[;?m*XDMdF@I-e*50*kfqK;bKo:nc/m'kj2fC&a2m5Za5=kThS[:f_SY*E_:lZ=ftP/P^:Vt/]@FO(
e%3$;\@'_mZd6%bcEsh#ZEDEVXNIcIaKMS`Xf'1?VSoO1_l9BHVkCi&T"h+l]qh.0U6rNcQaiZQ\"/_k
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~jR3'/mf2A9s5`VJjR3'/mf2A9s5`VJjR3'/mf2A9s5`VJjR3'/mf2A9s5`VJjR3'/mf2A9s5`VJjR3'/
mf2A9s5`VJjR3'/mf2A9s5`VJjR3'/mf2A9s5`VJjR3'/mf2A9s5`VJjR3'/mf2A9s5`VJjR3'/mf2A9
s5`VJjR3'/mf2A9s5`VJjR3'/mf2A9s5`VJjR3'/mf2A9s5`VJjR3'/mf2A9s5`VJjR3'/mf2A9s5`VJ
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00537634 .827957 ]
/Encode [0 1 1 0 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~S=H.@StDXJTV8'QU8"EYUnjf_V5:&dVPg>jW2ZesX/i;&XK8M*Y-+t3YHY78Yd(I<ZEggD['[3J[C*HO
\%&rY\[oA`]=Y\f]Y2"l]tM.o^;%Fu^qmk'_SX1-_o0L4`Poj:`lH-?a2l?CaiV]Jb0%lMbKS5Uc-=PZ
cHjh`d*U.ddF$@idaHUne'lgreCE+"f%/F'f@SX,f\"m1g"G*5g=tB:gt^]?h;-oCh;-rEhr!>Khr*GN
iSibSiSibTio8tWio8tWioB(Zj5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[
~>
<~P*2#mPa.N"QC!r)R$jD4S"#n;SXl@DT:hjNTq\9UUSO``VP^5gW2Q\pWN)u!X/rG*Y-+t4Yd(I=ZEggC
['d<M[^WcV\[f;_]"5Jb]Y(qk^;%Fu^qmk'_SX4/`5KU5`l?'>a2l?Dai_cLbfn;Tc-FV\cd0tbd*U1g
daQ[oeC<%!f%/F(f@\d0g"G*5g=tB:gt^`AhVR,Hhr!AMi8ESQiSrkWjQ,C_jlPUdk2tjikND'mkiq?r
lK[["lK[[#lg*p(m-O**m-X3-mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.
~>
<~[C*HO[^W`T\%&uZ]"5Jb]=bei^:q@s^VIY#^qmn)_o'C1`5T^8`l?'>a2l?Dai_fMbfn;Uc-=MYcHab^
d*^7hdaHRle'lgse^`4$f@S[-f\+s2g"P38gt^]@h;-oDhVR/Ii8NYRiSrkVj5]4]jQ,C`jlYahkND'm
kiq?rlK[["lg*m'm-X3-mHs?1n*f`6nF5r:nac8BoCMVHo^qeJo_%nNp@e4Rp\=OYq"X[\q>'m`qYU0e
qtp9fr;?KkrVc]nrVc]nrVlfqs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
185.762 153.783 mo
183.638 153.783 181.527 152.471 181.373 149.74 cv
181.204 146.756 183.538 145.195 185.856 145.195 cv
187.981 145.195 190.091 146.507 190.246 149.238 cv
190.415 152.222 188.08 153.783 185.762 153.783 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
164.641 244.097 mo
160.976 244.097 159.275 238.925 162.082 236.696 cv
162.43 236.972 162.853 237.142 163.302 237.142 cv
163.699 237.142 164.114 237.009 164.514 236.696 cv
164.861 236.425 165.08 236.11 165.194 235.78 cv
169.061 236.181 170.445 242.472 165.968 243.883 cv
165.502 244.03 165.059 244.097 164.641 244.097 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
263.509 265.187 mo
260.453 265.186 258.637 260.465 261.983 258.762 cv
262.519 258.49 263.038 258.37 263.526 258.37 cv
266.582 258.37 268.398 263.091 265.052 264.794 cv
264.517 265.066 263.997 265.187 263.509 265.187 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
156.523 282.404 mo
153.69 282.404 151.038 278.888 153.452 276.1 cv
154.253 275.175 155.21 274.79 156.149 274.79 cv
158.982 274.79 161.634 278.306 159.22 281.095 cv
158.419 282.019 157.461 282.404 156.523 282.404 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
139.665 250.202 mo
138.778 250.202 138.251 248.832 139.223 248.338 cv
139.378 248.259 139.529 248.224 139.67 248.224 cv
140.557 248.224 141.084 249.594 140.113 250.088 cv
139.958 250.167 139.807 250.202 139.665 250.202 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
208.29 369.041 mo
200.558 367.047 li
201.073 366.544 201.751 366.142 202.608 365.899 cv
203.101 365.759 203.57 365.694 204.014 365.694 cv
206.161 365.694 207.7 367.211 208.29 369.041 cv
1 1 1 rgb
f
203.811 375.288 mo
199.697 375.288 197.818 369.725 200.558 367.047 cv
208.29 369.041 li
209.043 371.376 208.253 374.221 205.217 375.083 cv
204.724 375.223 204.255 375.288 203.811 375.288 cv
f
182.836 333.611 mo
182.3 332.356 182.542 330.778 184.116 330 cv
184.559 329.781 184.988 329.684 185.391 329.684 cv
187.306 329.684 188.628 331.878 188.041 333.591 cv
182.836 333.611 li
.909804 .886274 .941176 rgb
f
185.368 335.426 mo
184.21 335.426 183.269 334.624 182.836 333.611 cv
188.041 333.591 li
187.833 334.197 187.387 334.742 186.643 335.11 cv
186.2 335.329 185.771 335.426 185.368 335.426 cv
.980392 1 1 rgb
f
145.186 356.167 mo
142.102 356.167 138.993 352.866 141.072 349.416 cv
141.975 347.917 143.308 347.297 144.645 347.297 cv
147.729 347.297 150.838 350.598 148.759 354.048 cv
147.856 355.547 146.523 356.168 145.186 356.167 cv
.94902 .941176 .964706 rgb
f
162.167 345.853 mo
159.714 345.853 157.803 342.347 160.297 340.461 cv
160.873 340.026 161.467 339.839 162.033 339.839 cv
164.486 339.839 166.398 343.345 163.904 345.231 cv
163.328 345.667 162.733 345.854 162.167 345.853 cv
.921569 .905882 .941176 rgb
f
180.426 331.123 mo
180.098 331.123 179.77 330.976 179.532 330.621 cv
178.94 329.738 179.748 328.83 180.561 328.83 cv
180.888 328.83 181.216 328.977 181.454 329.331 cv
182.047 330.215 181.239 331.123 180.426 331.123 cv
.909804 .886274 .941176 rgb
f
73.4874 248.985 mo
70.8145 248.985 69.4837 244.762 72.4508 243.543 cv
72.8377 243.384 73.208 243.313 73.5559 243.313 cv
76.2289 243.313 77.5597 247.536 74.5924 248.755 cv
74.2055 248.914 73.8353 248.985 73.4874 248.985 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
130.682 318.427 mo
129.534 318.427 128.386 317.903 127.576 316.641 cv
125.625 313.598 128.389 310.571 131.153 310.571 cv
132.301 310.571 133.45 311.094 134.259 312.356 cv
136.21 315.399 133.446 318.427 130.682 318.427 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
162.082 236.696 mo
161.137 235.947 160.758 234.424 161.988 233.463 cv
162.388 233.15 162.803 233.017 163.2 233.017 cv
164.526 233.017 165.635 234.508 165.194 235.78 cv
165.066 235.766 164.936 235.759 164.803 235.759 cv
164.385 235.759 163.941 235.827 163.476 235.973 cv
162.925 236.147 162.462 236.395 162.082 236.696 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
163.302 237.142 mo
162.853 237.142 162.43 236.972 162.082 236.696 cv
162.462 236.395 162.925 236.147 163.476 235.973 cv
163.941 235.827 164.385 235.759 164.803 235.759 cv
164.936 235.759 165.066 235.766 165.194 235.78 cv
165.08 236.11 164.861 236.425 164.514 236.696 cv
164.114 237.009 163.699 237.142 163.302 237.142 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~f$iX0e)Js-imuT<f$iX0e)Js-imuT<f$iX0e)Js-imuT<f$iX0e)Js-imuT<f$iX0e)Js-imuT<f$iX0
e)Js-imuT<f$iX0e)Js-imuT<f$iX0e)Js-imuT<f$iX0e)Js-imuT<f$iX0e)Js-imuT<f$iX0e)Js-
imuT<f$iX0e)Js-imuT<f$iX0e)Js-imuT<f$iX0e)Js-imuT<f$iX0e)Js-imuT<f$iX0e)Js-imuT<
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~o_AIYq#Bs\s7?$coCr7Up\saWrpod]o(N%Pp&4FRrUKOXnFZYJoDA%KqsX.Rn+->CnbV\Dq<mbJmI9r=
n+c8<q!@GCm-aW6mJ#r6p?M#;l0J$,lh'H,o]YQ3kiq^%kjmm!o&f-+k2u3qk4%HnnDr["j5f[hj6kse
mc*3miSj1_i9]CZm,6dehqm\Uh<NkPlJC=\h:q/Kg?@>GkM+\QgXtZBf]Ll=jk85Gf[]'8e`592j4;]=
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~o_AIYq#C!]s7H*do_AIYq#C!]s7H*do_AIYq#C!]s7H*do_AIYq#C!]s7H*do_AIYq#C!]s7H*do_AIY
q#C!]s7H*do_AIYq#C!]s7H*do_AIYq#C!]s7H*do_AIYq#C!]s7H*do_AIYq#C!]s7H*do_AIYq#C!]
s7H*do_AIYq#C!]s7H*do_AIYq#C!]s7H*do_AIYq#C!]s7H*do_AIYq#C!]s7H*do_AIYq#C!]s7H*d
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00537634 .827957 ]
/Encode [0 1 1 0 0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~e^`7%f%8O*f@SX+f\"j/f\"j0g"G*5g=k97g=tB:gY:K<gt^]@h;-oCh;-oCh;7#Fhr!>Khr!>Li8EPO
i8NYRiSrkVio8tWio8tXj5]1[j5f:^jQ5LbjlPUcjlPUdk2tjikND$kkNM-nkih6okih6pl07KulK[["
lKdd%lg*m&lg*m'm-O**m-O-,mHs<.mHs<.mdBN2mdBQ4n*f`6n*f`6nF5r:nF5r:nF5u<naZ/>naZ/>
o()ABo()ABo()ABo()DDoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSF
~>
<~daHUne'umseC<!te^`4$f%/F(f@SX+f@\a.f\+s2g"G'4g=k98gY:K;gYCT>gtgfBhVR,GhVR,Hhr!AM
i8EPOi8NYRio8tXj5]1[j5]4]jQ5LbjlPUck2tggk2tghkND'mkih6okiq?rlK[["lK[[#lg*p(m-O**
m-X3-mHs<.mdBN2mdBQ4n*f`6n*oi9nF5r:naZ/?o()ABo()ABo(2JEoCMSFo^qeJo^qhLp%A"Np%A"N
p@e4Rp@e4Sp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
~>
<~iSieUio8tWioB(Zj5]1\jQ,C`jlPUcjlY^fk2tggkND$kkND$lkih9ql07Hsl0@R!lK[[#lg*m&lg*p(
m-O**m-X3-mHs</mdBN3n*f`6n*f`6n*oi9naZ/>naZ/>naZ2@o(2JEoCMSFoCMSFo^qeJo^qhLp%A%P
p@e4Rp@e4Rp\4FVp\4IXq"XXZq"XXZq>'j^q>'j_qYL'bqYL'bqYU0eqtp9fr;?Kjr;?Kjr;?Kjr;HTm
rVc]nrVc]orr2rts8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
68.2381 201.636 mo
65.2886 201.636 62.295 199.563 62.6925 195.783 cv
63.0305 192.568 65.5038 191.073 68.0092 191.073 cv
70.9587 191.073 73.9523 193.146 73.5549 196.925 cv
73.2168 200.141 70.7435 201.636 68.2381 201.636 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
63.0539 292.775 mo
60.9326 292.775 58.8482 291.563 58.3795 288.866 cv
57.7671 285.341 60.5973 283.277 63.3648 283.277 cv
65.486 283.277 67.5705 284.49 68.0392 287.187 cv
68.6516 290.712 65.8214 292.775 63.0539 292.775 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
56.8898 267.14 mo
55.2498 267.14 53.7256 266.228 52.7468 264.918 cv
53.3055 265.153 53.9173 265.268 54.5313 265.268 cv
56.8388 265.268 59.1786 263.647 58.8633 260.686 cv
58.6248 258.446 57.0566 257.274 55.3296 257.049 cv
55.7512 256.924 56.1723 256.866 56.5861 256.866 cv
60.6786 256.866 64.0498 262.545 60.0257 265.921 cv
59.006 266.777 57.9252 267.14 56.8898 267.14 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
88.4548 248.869 mo
87.1262 248.869 85.8073 248.052 85.6987 246.345 cv
85.5789 244.46 87.0562 243.467 88.5213 243.467 cv
89.8501 243.467 91.169 244.284 91.2774 245.991 cv
91.3972 247.877 89.9201 248.869 88.4548 248.869 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
115.591 128.111 mo
112.899 128.11 110.329 124.865 112.53 122.132 cv
113.303 121.173 114.261 120.774 115.204 120.774 cv
117.895 120.774 120.466 124.02 118.265 126.753 cv
117.492 127.712 116.534 128.111 115.591 128.111 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
75.6686 124.629 mo
72.5676 124.629 69.9602 120.382 72.9631 117.754 cv
73.7525 117.064 74.6 116.771 75.4139 116.771 cv
78.5149 116.771 81.1221 121.018 78.1192 123.646 cv
77.3298 124.337 76.4824 124.629 75.6686 124.629 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
130.293 135.307 mo
127.048 135.307 123.926 131.439 126.535 128.106 cv
127.472 126.909 128.65 126.412 129.813 126.412 cv
133.058 126.412 136.18 130.28 133.571 133.613 cv
132.635 134.81 131.456 135.307 130.293 135.307 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
106.231 97.1522 mo
104.901 97.1522 103.816 95.2969 105.133 94.2131 cv
105.46 93.943 105.806 93.8282 106.137 93.8282 cv
107.467 93.8282 108.552 95.6835 107.236 96.7673 cv
106.908 97.0374 106.562 97.1522 106.231 97.1522 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
150.475 83.7627 mo
145.001 83.7617 143.561 74.9556 149.552 73.7021 cv
149.955 73.6178 150.34 73.5782 150.708 73.5782 cv
156.182 73.5782 157.622 82.3855 151.631 83.6389 cv
151.228 83.7232 150.843 83.7628 150.475 83.7627 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
80.2836 84.2207 mo
78.936 84.2206 77.5984 83.3926 77.4882 81.6611 cv
77.3664 79.7483 78.8649 78.7414 80.3512 78.7414 cv
81.6989 78.7414 83.0365 79.5695 83.1467 81.301 cv
83.2685 83.2138 81.7699 84.2208 80.2836 84.2207 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
158.198 51.5245 mo
157.482 51.5245 156.757 51.2195 156.18 50.4855 cv
154.563 48.4283 156.491 46.0417 158.494 46.0417 cv
159.21 46.0417 159.936 46.3469 160.512 47.0809 cv
162.129 49.1379 160.201 51.5247 158.198 51.5245 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
555.945 175.521 mo
554.905 175.521 553.846 174.776 554.014 173.446 cv
554.153 172.35 554.996 171.847 555.851 171.847 cv
556.891 171.847 557.95 172.592 557.782 173.922 cv
557.643 175.018 556.8 175.521 555.945 175.521 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
525.788 139.082 mo
519.963 139.081 519.221 129.809 525.37 129.18 cv
525.573 129.159 525.77 129.149 525.962 129.149 cv
531.788 129.149 532.529 138.422 526.38 139.051 cv
526.177 139.072 525.98 139.082 525.788 139.082 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
581.77 171.014 mo
579.685 171.014 577.53 169.265 578.309 166.677 cv
578.805 165.028 580.103 164.32 581.429 164.32 cv
583.514 164.32 585.669 166.069 584.89 168.657 cv
584.394 170.306 583.096 171.014 581.77 171.014 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
514.438 114.247 mo
508.821 114.246 506.781 105.228 513.013 103.414 cv
513.593 103.245 514.146 103.167 514.668 103.167 cv
520.286 103.167 522.325 112.186 516.094 114 cv
515.513 114.169 514.96 114.247 514.438 114.247 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
534.483 132.062 mo
532.584 132.061 530.7 130.899 530.531 128.46 cv
530.343 125.742 532.475 124.304 534.587 124.304 cv
536.486 124.304 538.37 125.466 538.539 127.905 cv
538.728 130.624 536.596 132.062 534.483 132.062 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
531.6 120.282 mo
530.922 120.282 530.222 119.725 530.457 118.879 cv
530.612 118.322 531.048 118.082 531.493 118.082 cv
532.171 118.082 532.871 118.638 532.636 119.484 cv
532.482 120.041 532.046 120.282 531.6 120.282 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
555.638 105.371 mo
553.752 105.371 551.801 103.68 552.664 101.385 cv
553.16 100.066 554.221 99.5098 555.303 99.5098 cv
557.189 99.5098 559.139 101.201 558.276 103.496 cv
557.781 104.814 556.72 105.371 555.638 105.371 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
489.436 104.316 mo
482.534 104.315 482.468 93.5735 489.4 93.5114 cv
489.42 93.5113 489.439 93.5112 489.46 93.5112 cv
496.363 93.5112 496.428 104.253 489.496 104.315 cv
489.476 104.316 489.457 104.316 489.436 104.316 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
512.033 83.3254 mo
508.615 83.325 506.365 78.1545 510.043 76.0093 cv
510.712 75.6189 511.371 75.4484 511.992 75.4484 cv
515.41 75.4484 517.661 80.6193 513.982 82.7645 cv
513.313 83.1549 512.654 83.3255 512.033 83.3254 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
526.146 120.434 mo
524.135 120.434 522.122 119.133 522.134 116.546 cv
522.146 113.974 524.138 112.695 526.133 112.695 cv
528.144 112.695 530.157 113.995 530.145 116.583 cv
530.133 119.154 528.14 120.434 526.146 120.434 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
438.719 111.898 mo
435.889 111.898 433.128 108.634 435.232 105.656 cv
434.815 106.447 434.753 107.429 435.307 108.46 cv
435.923 109.607 436.912 110.084 437.91 110.084 cv
440.042 110.084 442.217 107.91 440.898 105.456 cv
440.641 104.978 440.32 104.617 439.96 104.358 cv
442.054 105.312 443.469 107.911 441.703 110.304 cv
440.872 111.431 439.791 111.899 438.719 111.898 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
493.38 79.6744 mo
488.903 79.6734 487.122 72.5057 492.099 70.9102 cv
492.609 70.7468 493.094 70.672 493.552 70.672 cv
498.028 70.672 499.809 77.8407 494.832 79.4362 cv
494.322 79.5996 493.837 79.6745 493.38 79.6744 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
435.232 105.656 mo
435.808 104.563 437.058 103.832 438.294 103.832 cv
438.877 103.832 439.456 103.994 439.96 104.358 cv
439.429 104.115 438.853 103.979 438.275 103.979 cv
437.204 103.979 436.123 104.446 435.291 105.574 cv
435.271 105.601 435.251 105.628 435.232 105.656 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
437.91 110.084 mo
436.912 110.084 435.923 109.607 435.307 108.46 cv
434.753 107.429 434.815 106.447 435.232 105.656 cv
435.251 105.628 435.271 105.601 435.291 105.574 cv
436.123 104.446 437.204 103.979 438.275 103.979 cv
438.853 103.979 439.429 104.115 439.96 104.358 cv
440.32 104.617 440.641 104.978 440.898 105.456 cv
442.217 107.91 440.042 110.084 437.91 110.084 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
461.571 104.929 mo
457.866 104.928 454.584 100.052 458 96.6843 cv
458.995 95.7038 460.107 95.2923 461.184 95.2923 cv
464.889 95.2923 468.171 100.169 464.755 103.537 cv
463.76 104.517 462.648 104.929 461.571 104.929 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
408.029 110.693 mo
403.457 110.693 399.894 104.163 404.539 100.646 cv
405.613 99.8328 406.722 99.485 407.777 99.485 cv
412.349 99.485 415.912 106.015 411.267 109.532 cv
410.193 110.345 409.084 110.693 408.029 110.693 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
442.24 85.7529 mo
437.172 85.7518 435.18 77.632 440.815 75.8502 cv
441.384 75.6702 441.926 75.5876 442.438 75.5876 cv
447.507 75.5876 449.498 83.7083 443.863 85.4903 cv
443.294 85.6704 442.752 85.753 442.24 85.7529 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
418.17 84.898 mo
417.151 84.898 416.13 84.2366 416.143 82.9256 cv
416.156 81.633 417.157 80.9924 418.16 80.9924 cv
419.178 80.9924 420.199 81.6538 420.186 82.9648 cv
420.174 84.2573 419.173 84.898 418.17 84.898 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
322.443 81.1335 mo
321.576 81.1335 320.761 80.0628 321.495 79.2042 cv
321.74 78.9165 322.036 78.7967 322.327 78.7967 cv
323.194 78.7967 324.009 79.8675 323.275 80.726 cv
323.029 81.0136 322.733 81.1335 322.443 81.1335 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
341.895 113.265 mo
338.245 113.265 334.646 109.114 337.373 105.204 cv
338.441 103.673 339.876 103.039 341.303 103.039 cv
344.953 103.039 348.552 107.19 345.825 111.1 cv
344.757 112.631 343.322 113.265 341.895 113.265 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
293.076 91.1646 mo
292.981 91.1645 292.885 91.1622 292.787 91.1574 cv
286.561 90.8536 286.939 81.338 292.978 81.338 cv
293.072 81.338 293.169 81.3403 293.266 81.3451 cv
299.493 81.6491 299.115 91.165 293.076 91.1646 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
294.692 115.277 mo
293.115 115.277 292.444 112.758 294.199 112.153 cv
294.392 112.086 294.576 112.056 294.749 112.056 cv
296.326 112.056 296.997 114.575 295.242 115.18 cv
295.049 115.247 294.865 115.277 294.692 115.277 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
342.344 122.581 mo
340.782 122.581 339.81 120.187 341.51 119.27 cv
341.797 119.115 342.078 119.046 342.342 119.046 cv
343.904 119.046 344.876 121.441 343.176 122.358 cv
342.889 122.513 342.608 122.581 342.344 122.581 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
281.92 88.7772 mo
278.654 88.777 275.467 84.9791 277.996 81.5456 cv
278.947 80.2541 280.184 79.7186 281.411 79.7186 cv
284.678 79.7186 287.864 83.5166 285.336 86.9503 cv
284.385 88.2418 283.147 88.7773 281.92 88.7772 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
295.088 105.089 mo
293.632 105.089 292.131 103.709 292.896 101.974 cv
293.3 101.058 294.055 100.675 294.822 100.675 cv
296.278 100.675 297.78 102.055 297.014 103.79 cv
296.61 104.706 295.856 105.089 295.088 105.089 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
329.754 105.774 mo
328.605 105.774 328.438 103.941 329.659 103.799 cv
329.704 103.794 329.748 103.791 329.791 103.791 cv
330.941 103.791 331.107 105.625 329.887 105.766 cv
329.841 105.771 329.797 105.774 329.754 105.774 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
312.055 128.964 mo
308.617 128.964 306.03 123.976 309.582 121.444 cv
310.36 120.89 311.152 120.652 311.903 120.652 cv
315.342 120.652 317.929 125.64 314.376 128.172 cv
313.599 128.726 312.807 128.964 312.055 128.964 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
257.442 130.862 mo
254.948 130.862 252.438 129.201 252.57 125.993 cv
252.693 122.98 255.019 121.521 257.358 121.521 cv
259.852 121.521 262.362 123.182 262.23 126.39 cv
262.107 129.403 259.781 130.862 257.442 130.862 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
266.476 108.745 mo
264.272 108.745 262.806 105.42 265.172 104.02 cv
265.608 103.761 266.039 103.649 266.445 103.649 cv
268.648 103.649 270.115 106.974 267.748 108.374 cv
267.312 108.632 266.881 108.745 266.476 108.745 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
231.992 137.511 mo
230.667 137.511 229.369 136.824 228.791 135.204 cv
227.807 132.45 230.132 130.471 232.38 130.471 cv
233.705 130.471 235.003 131.158 235.581 132.778 cv
236.565 135.532 234.24 137.511 231.992 137.511 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
213.428 136.896 mo
211.878 136.896 210.354 136.003 210.037 134.029 cv
209.631 131.501 211.655 130.04 213.637 130.04 cv
215.186 130.04 216.711 130.934 217.027 132.907 cv
217.433 135.436 215.409 136.896 213.428 136.896 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
150.72 139.561 mo
149.65 139.561 148.598 138.952 148.353 137.592 cv
148.03 135.798 149.473 134.741 150.883 134.741 cv
151.953 134.741 153.004 135.35 153.249 136.709 cv
153.573 138.503 152.13 139.561 150.72 139.561 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
127.88 145.134 mo
125.624 145.133 123.485 142.387 125.356 140.121 cv
126 139.341 126.789 139.016 127.565 139.016 cv
129.82 139.016 131.959 141.763 130.088 144.029 cv
129.444 144.809 128.655 145.134 127.88 145.134 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
177.107 111.767 mo
171.307 111.766 170.801 102.592 176.832 102.164 cv
176.97 102.154 177.105 102.149 177.238 102.149 cv
183.038 102.149 183.544 111.324 177.513 111.752 cv
177.374 111.762 177.239 111.767 177.107 111.767 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
59.1767 75.7501 mo
55.2058 75.7498 51.4143 70.9592 54.6639 66.9294 cv
55.804 65.5155 57.2166 64.928 58.6075 64.928 cv
62.5785 64.928 66.3701 69.7188 63.1203 73.7487 cv
61.9801 75.1625 60.5675 75.7501 59.1767 75.7501 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
478.648 517.799 mo
478.497 517.799 478.338 517.781 478.171 517.741 cv
475.98 517.219 476.58 514.025 478.565 514.025 cv
478.716 514.025 478.875 514.043 479.042 514.083 cv
481.233 514.604 480.633 517.799 478.648 517.799 cv
1 1 1 rgb
f
114.809 503.413 mo
113.221 503.413 112.737 500.858 114.487 500.433 cv
114.624 500.4 114.754 500.384 114.877 500.384 cv
116.465 500.384 116.95 502.939 115.2 503.365 cv
115.063 503.398 114.933 503.413 114.809 503.413 cv
.607843 .6 .827451 rgb
f
130.672 604.479 mo
129.91 602.756 130.322 600.491 132.61 599.686 cv
133.045 599.533 133.46 599.463 133.85 599.463 cv
134.285 599.463 134.69 599.55 135.057 599.705 cv
134.901 600.526 135.053 601.435 135.652 602.338 cv
135.697 602.406 135.743 602.472 135.79 602.535 cv
134.027 603.203 132.318 603.852 130.672 604.479 cv
.960784 1 1 rgb
f
133.728 606.611 mo
132.299 606.611 131.202 605.676 130.672 604.479 cv
132.318 603.852 134.027 603.203 135.79 602.535 cv
136.206 603.096 136.699 603.478 137.224 603.709 cv
137.074 604.844 136.376 605.893 134.968 606.388 cv
134.533 606.541 134.118 606.611 133.728 606.611 cv
.882353 .968627 1 rgb
f
43.9184 476.291 mo
43.7588 476.291 43.5994 476.264 43.4473 476.206 cv
43.2824 475.791 43.1194 475.379 42.9602 474.977 cv
42.9595 474.653 42.9161 474.332 42.8359 474.021 cv
43.1351 473.645 43.6164 473.403 44.095 473.403 cv
44.5376 473.403 44.978 473.61 45.2697 474.109 cv
45.9288 475.237 44.9176 476.291 43.9184 476.291 cv
.741176 .709804 .917647 rgb
f
43.4473 476.206 mo
43.2359 476.126 43.0383 475.986 42.8731 475.776 cv
42.9327 475.509 42.9607 475.242 42.9602 474.977 cv
43.1194 475.379 43.2824 475.791 43.4473 476.206 cv
.647059 .588235 .788235 rgb
f
60.2434 519.553 mo
57.9618 519.553 56.3306 517.554 56.1053 515.459 cv
58.5851 514.763 61.3321 514.206 64.1263 513.55 cv
64.9897 515.572 64.5281 518.17 61.8989 519.218 cv
61.3191 519.449 60.7643 519.553 60.2434 519.553 cv
.345098 .54902 .470588 rgb
f
56.1053 515.459 mo
55.9235 513.768 56.6569 512.014 58.7027 511.199 cv
59.2825 510.968 59.8371 510.864 60.3581 510.864 cv
62.1145 510.864 63.4854 512.048 64.1263 513.55 cv
61.3321 514.206 58.5851 514.763 56.1053 515.459 cv
.819608 .94902 1 rgb
f
106.413 494.252 mo
105.529 494.252 104.66 493.75 104.454 492.634 cv
107.924 493.698 li
107.518 494.058 106.963 494.252 106.413 494.252 cv
108.053 493.572 mo
106.727 491.707 li
107.085 491.544 107.436 491.304 107.769 490.978 cv
107.831 490.916 107.89 490.854 107.947 490.792 cv
108.221 491.056 108.424 491.421 108.508 491.897 cv
108.589 492.353 108.532 492.75 108.382 493.082 cv
108.242 493.334 li
108.186 493.419 108.122 493.498 108.053 493.572 cv
.976471 .976471 .992157 rgb
f
108.242 493.334 mo
108.382 493.082 li
108.342 493.171 108.295 493.255 108.242 493.334 cv
.968627 .968627 .984314 rgb
f
107.924 493.698 mo
104.454 492.634 li
104.452 492.627 104.451 492.621 104.45 492.614 cv
104.399 492.326 104.403 492.061 104.451 491.821 cv
104.775 491.927 105.114 491.985 105.458 491.985 cv
105.879 491.985 106.308 491.898 106.727 491.707 cv
108.053 493.572 li
108.012 493.616 107.969 493.658 107.924 493.698 cv
f
107.947 490.792 mo
107.602 490.461 107.147 490.29 106.678 490.263 cv
108.816 488.519 li
108.843 489.285 108.589 490.079 107.947 490.792 cv
105.786 490.384 mo
102.746 486.109 li
102.785 486.067 102.826 486.026 102.868 485.984 cv
103.373 485.489 103.918 485.195 104.467 485.062 cv
105.233 485.656 105.825 486.048 106.052 486.048 cv
106.119 486.048 106.154 486.015 106.154 485.944 cv
106.154 485.803 106.013 485.483 105.767 485.033 cv
106.907 485.249 107.924 486.069 108.447 487.114 cv
106.673 490.263 li
106.631 490.26 106.588 490.259 106.545 490.259 cv
106.288 490.259 106.03 490.302 105.786 490.384 cv
.831372 .815686 .94902 rgb
f
106.678 490.263 mo
106.676 490.263 106.675 490.263 106.673 490.263 cv
108.447 487.114 li
108.666 487.552 108.798 488.03 108.816 488.519 cv
106.678 490.263 li
.745098 .745098 .890196 rgb
f
104.451 491.821 mo
102.276 491.11 100.755 488.232 102.746 486.109 cv
105.786 490.384 li
105.139 490.602 104.596 491.098 104.451 491.821 cv
106.052 486.048 mo
105.825 486.048 105.233 485.656 104.467 485.062 cv
104.704 485.004 104.943 484.977 105.179 484.977 cv
105.377 484.977 105.574 484.996 105.767 485.033 cv
106.013 485.483 106.154 485.803 106.154 485.944 cv
106.154 486.015 106.119 486.048 106.052 486.048 cv
.772549 .737255 .866667 rgb
f
106.727 491.707 mo
105.786 490.384 li
106.03 490.302 106.288 490.259 106.545 490.259 cv
106.588 490.259 106.631 490.26 106.673 490.263 cv
106.669 490.27 li
106.678 490.263 li
107.147 490.29 107.602 490.461 107.947 490.792 cv
107.89 490.854 107.831 490.916 107.769 490.978 cv
107.436 491.304 107.085 491.544 106.727 491.707 cv
.988235 .992157 .996078 rgb
f
106.669 490.27 mo
106.673 490.263 li
106.675 490.263 106.676 490.263 106.678 490.263 cv
106.669 490.27 li
.988235 .988235 .992157 rgb
f
105.458 491.985 mo
105.114 491.985 104.775 491.927 104.451 491.821 cv
104.596 491.098 105.139 490.602 105.786 490.384 cv
106.727 491.707 li
106.308 491.898 105.879 491.985 105.458 491.985 cv
f
134.077 478.532 mo
133.81 477.586 133.567 476.723 133.357 475.977 cv
133.359 475.977 133.361 475.977 133.363 475.977 cv
133.864 475.977 134.355 476.229 134.607 476.83 cv
134.917 477.569 134.598 478.196 134.077 478.532 cv
1 1 1 rgb
f
133.197 478.796 mo
132.697 478.795 132.205 478.543 131.953 477.943 cv
131.489 476.836 132.436 475.981 133.357 475.977 cv
133.567 476.723 133.81 477.586 134.077 478.532 cv
133.816 478.7 133.505 478.796 133.197 478.796 cv
f
162.007 475.359 mo
157.988 475.179 157.192 468.664 161.639 467.916 cv
161.883 467.875 162.117 467.855 162.343 467.855 cv
164.772 467.855 166.084 470.128 165.863 472.174 cv
164.233 473.186 162.942 474.23 162.144 475.193 cv
162.1 475.247 162.054 475.303 162.007 475.359 cv
f
162.177 475.363 mo
162.12 475.363 162.063 475.361 162.007 475.359 cv
162.054 475.303 162.1 475.247 162.144 475.193 cv
162.942 474.23 164.233 473.186 165.863 472.174 cv
165.705 473.638 164.762 474.986 162.882 475.302 cv
162.637 475.343 162.403 475.363 162.177 475.363 cv
f
473.571 612.221 mo
472.043 612.221 470.546 611.389 470.047 609.475 cv
469.306 606.632 471.642 604.803 473.909 604.803 cv
474.413 604.803 474.914 604.893 475.376 605.083 cv
475.533 606.515 476.345 607.9 477.573 608.631 cv
477.552 610.847 475.535 612.221 473.571 612.221 cv
.984314 .996078 1 rgb
f
224.122 266.104 mo
220.934 266.104 217.639 263.456 218.79 259.488 cv
219.534 256.919 221.55 255.814 223.61 255.814 cv
226.798 255.814 230.092 258.462 228.942 262.43 cv
228.198 264.999 226.182 266.104 224.122 266.104 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
210.106 497.14 mo
209.799 497.14 209.497 496.962 209.436 496.57 cv
209.359 496.073 209.757 495.788 210.146 495.788 cv
210.453 495.788 210.755 495.966 210.816 496.357 cv
210.893 496.854 210.495 497.14 210.106 497.14 cv
.607843 .74902 .815686 rgb
f
99.9174 196.157 mo
95.6301 196.156 92.5646 189.82 97.0786 186.853 cv
97.9966 186.25 98.9167 185.989 99.7871 185.989 cv
104.074 185.989 107.14 192.326 102.626 195.293 cv
101.708 195.896 100.788 196.157 99.9174 196.157 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
313.625 217.995 mo
310.957 217.995 308.245 216.098 308.648 212.683 cv
308.984 209.835 311.175 208.52 313.397 208.52 cv
316.065 208.52 318.777 210.417 318.374 213.832 cv
318.038 216.68 315.847 217.995 313.625 217.995 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
456.688 204.426 mo
451.54 204.426 449.274 196.219 455.003 194.171 cv
455.656 193.938 456.278 193.831 456.864 193.831 cv
462.012 193.831 464.278 202.038 458.549 204.087 cv
457.896 204.32 457.274 204.426 456.688 204.426 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
287.189 432.113 mo
285.626 432.113 284.018 430.882 284.474 428.914 cv
284.795 427.528 285.87 426.921 286.968 426.921 cv
288.531 426.921 290.139 428.152 289.683 430.121 cv
289.362 431.506 288.287 432.113 287.189 432.113 cv
.968627 .968627 .984314 rgb
f
360.944 469.25 mo
360.499 469.25 360.062 469.019 359.868 468.475 cv
359.538 467.55 360.319 466.886 361.074 466.886 cv
361.519 466.886 361.956 467.117 362.15 467.661 cv
362.48 468.586 361.699 469.25 360.944 469.25 cv
.819608 .94902 1 rgb
f
338.985 470.761 mo
338.943 469.598 339.419 468.413 340.642 467.511 cv
341.434 466.928 342.246 466.678 343.018 466.678 cv
343.721 466.678 344.392 466.886 344.982 467.239 cv
343.229 468.325 341.314 469.507 338.985 470.761 cv
1 1 1 rgb
f
343.189 475.024 mo
340.958 475.024 339.065 472.933 338.985 470.761 cv
341.314 469.507 343.229 468.325 344.982 467.239 cv
347.264 468.605 348.351 472.137 345.564 474.191 cv
344.773 474.774 343.961 475.024 343.189 475.024 cv
f
414.866 376.758 mo
413.827 376.758 413.173 375.168 414.303 374.55 cv
414.496 374.444 414.685 374.397 414.863 374.397 cv
415.903 374.397 416.557 375.988 415.427 376.605 cv
415.234 376.711 415.044 376.758 414.866 376.758 cv
.968627 .968627 .984314 rgb
f
401.392 425.438 mo
400.57 425.438 399.763 424.972 399.568 423.93 cv
399.306 422.538 400.428 421.711 401.523 421.711 cv
402.345 421.711 403.152 422.177 403.347 423.22 cv
403.609 424.611 402.487 425.438 401.392 425.438 cv
.607843 .6 .827451 rgb
f
224.067 450.247 mo
223.517 450.247 222.964 450.106 222.465 449.855 cv
220.748 445.789 li
220.813 445.625 220.894 445.459 220.991 445.292 cv
221.654 444.152 222.656 443.68 223.664 443.68 cv
225.933 443.68 228.229 446.073 226.74 448.634 cv
226.078 449.775 225.076 450.247 224.067 450.247 cv
1 1 1 rgb
f
222.465 449.855 mo
221.041 449.142 220.047 447.54 220.748 445.789 cv
222.465 449.855 li
f
437.891 403.529 mo
436.854 403.529 435.827 402.898 435.724 401.568 cv
435.608 400.066 436.787 399.266 437.955 399.266 cv
438.991 399.266 440.019 399.897 440.122 401.227 cv
440.238 402.729 439.059 403.529 437.891 403.529 cv
.607843 .6 .827451 rgb
f
288.99 415.22 mo
285.378 411.463 li
284.671 412.743 li
284.392 411.967 284.097 411.164 283.819 410.414 cv
284.46 409.906 285.155 409.688 285.834 409.688 cv
288.373 409.688 290.673 412.754 288.99 415.22 cv
283.382 415.08 mo
283.18 414.72 283.06 414.511 283.06 414.511 cv
283.06 414.511 283.22 414.679 283.465 414.928 cv
283.382 415.08 li
.980392 .976471 .996078 rgb
f
283.23 415.355 mo
282.224 414.094 281.975 412.256 283.427 410.768 cv
283.555 410.637 283.686 410.519 283.819 410.414 cv
284.097 411.164 284.392 411.967 284.671 412.743 cv
283.465 414.928 li
283.22 414.679 283.06 414.511 283.06 414.511 cv
283.06 414.511 283.18 414.72 283.382 415.08 cv
283.23 415.355 li
f
286.138 416.842 mo
285.013 416.842 283.935 416.24 283.23 415.355 cv
283.382 415.08 li
283.465 414.928 li
284.671 412.743 li
285.378 411.463 li
288.99 415.22 li
288.864 415.404 288.716 415.585 288.545 415.761 cv
287.801 416.523 286.957 416.842 286.138 416.842 cv
.968627 .968627 .984314 rgb
f
245.083 363.468 mo
243.823 363.468 242.575 362.707 242.43 361.09 cv
242.264 359.231 243.728 358.229 245.175 358.229 cv
246.435 358.229 247.683 358.99 247.828 360.607 cv
247.995 362.466 246.531 363.468 245.083 363.468 cv
.988235 .984314 .992157 rgb
f
306.901 410.094 mo
306.268 410.094 305.648 409.749 305.441 408.956 cv
305.133 407.777 306.102 407.019 307.041 407.019 cv
307.675 407.019 308.295 407.364 308.502 408.157 cv
308.81 409.336 307.841 410.094 306.901 410.094 cv
.607843 .6 .827451 rgb
f
297.065 386.155 mo
296.529 385.302 296.443 384.189 297.237 383.148 cv
297.567 382.715 297.949 382.426 298.352 382.256 cv
297.065 386.155 li
300.813 385.749 mo
300.144 384.248 299.549 382.919 299.169 382.07 cv
299.212 382.068 299.256 382.067 299.3 382.067 cv
300.219 382.067 301.125 382.562 301.686 383.3 cv
300.813 385.749 li
1 1 1 rgb
f
301.328 386.906 mo
301.153 386.513 300.98 386.125 300.813 385.749 cv
301.686 383.3 li
302.352 384.176 302.531 385.395 301.666 386.528 cv
301.559 386.669 301.445 386.795 301.328 386.906 cv
f
299.604 387.609 mo
298.595 387.609 297.603 387.013 297.065 386.155 cv
298.352 382.256 li
298.618 382.144 298.893 382.084 299.169 382.07 cv
299.549 382.919 300.144 384.248 300.813 385.749 cv
300.98 386.125 301.153 386.513 301.328 386.906 cv
300.809 387.399 300.203 387.609 299.604 387.609 cv
f
343.644 386.28 mo
343.058 385.338 342.278 384.113 341.505 382.906 cv
341.833 382.533 342.31 382.286 342.926 382.286 cv
342.993 382.286 343.062 382.289 343.132 382.295 cv
345.44 382.492 345.451 385.659 343.644 386.28 cv
.835294 .815686 .980392 rgb
f
342.989 386.385 mo
342.922 386.385 342.853 386.382 342.783 386.376 cv
340.87 386.212 340.535 384.009 341.505 382.906 cv
342.278 384.113 343.058 385.338 343.644 386.28 cv
343.447 386.347 343.229 386.385 342.989 386.385 cv
.745098 .745098 .890196 rgb
f
249.84 345.029 mo
246.336 342 li
246.336 337.089 li
246.881 336.897 247.457 336.794 248.03 336.794 cv
249.693 336.794 251.322 337.659 252.037 339.697 cv
252.902 342.164 251.651 344.122 249.84 345.029 cv
.94902 .941176 .964706 rgb
f
247.55 345.577 mo
245.887 345.577 244.258 344.712 243.544 342.675 cv
242.586 339.945 244.22 337.838 246.336 337.089 cv
246.336 342 li
249.84 345.029 li
249.132 345.384 248.337 345.577 247.55 345.577 cv
.909804 .886274 .941176 rgb
f
568.037 369.233 mo
567.395 369.233 566.731 368.684 566.986 367.891 cv
567.144 367.4 567.532 367.191 567.929 367.191 cv
568.571 367.191 569.235 367.74 568.98 368.533 cv
568.822 369.023 568.434 369.233 568.037 369.233 cv
.607843 .6 .827451 rgb
f
257.195 367.652 mo
255.921 367.652 254.859 365.898 256.101 364.83 cv
256.422 364.554 256.765 364.436 257.095 364.436 cv
258.368 364.436 259.431 366.19 258.189 367.258 cv
257.867 367.535 257.524 367.652 257.195 367.652 cv
.909804 .886274 .941176 rgb
f
248.366 396.259 mo
243.403 396.259 242.96 388.405 248.126 388.031 cv
248.247 388.023 248.364 388.018 248.48 388.018 cv
253.443 388.018 253.886 395.872 248.721 396.247 cv
248.6 396.255 248.482 396.26 248.366 396.259 cv
1 1 1 rgb
f
275.367 473.297 mo
272.421 473.297 270.184 469.039 273.216 466.845 cv
273.889 466.358 274.576 466.149 275.229 466.149 cv
278.175 466.149 280.412 470.407 277.381 472.601 cv
276.708 473.088 276.02 473.297 275.367 473.297 cv
.968627 .968627 .984314 rgb
f
277.987 464.706 mo
274.815 464.705 271.616 461.316 273.747 457.763 cv
274.676 456.216 276.05 455.575 277.43 455.575 cv
280.602 455.575 283.801 458.965 281.669 462.517 cv
280.741 464.065 279.367 464.706 277.987 464.706 cv
.607843 .6 .827451 rgb
f
581.172 621.143 mo
580.761 621.01 580.328 620.941 579.898 620.941 cv
579.488 620.941 579.081 621.004 578.698 621.135 cv
578.482 620.385 578.846 619.446 579.852 619.386 cv
579.885 619.384 579.917 619.383 579.948 619.383 cv
580.958 619.383 581.389 620.368 581.172 621.143 cv
.941176 1 1 rgb
f
259.212 486.929 mo
258.487 485.59 259.513 483.625 261.111 483.625 cv
261.402 483.625 261.711 483.689 262.032 483.835 cv
262.829 484.195 263.206 484.826 263.271 485.491 cv
259.212 486.929 li
.745098 .745098 .890196 rgb
f
261.145 488.043 mo
260.854 488.043 260.545 487.978 260.224 487.833 cv
259.74 487.614 259.41 487.295 259.212 486.929 cv
263.271 485.491 li
263.39 486.709 262.462 488.043 261.145 488.043 cv
.960784 1 1 rgb
f
351.806 556.022 mo
350.497 556.021 350.23 553.921 351.644 553.691 cv
351.718 553.679 351.789 553.673 351.858 553.673 cv
353.167 553.673 353.434 555.773 352.02 556.004 cv
351.946 556.016 351.875 556.022 351.806 556.022 cv
.882353 .968627 1 rgb
f
380.507 515.912 mo
379.434 515.912 378.338 515.124 378.55 513.756 cv
378.717 512.676 379.548 512.188 380.393 512.188 cv
381.466 512.188 382.562 512.976 382.35 514.344 cv
382.183 515.423 381.353 515.912 380.507 515.912 cv
.941176 1 1 rgb
f
623.118 635.566 mo
621.802 635.566 620.445 634.495 620.886 632.85 cv
621.181 631.752 622.038 631.277 622.915 631.277 cv
624.23 631.277 625.587 632.348 625.146 633.993 cv
624.852 635.091 623.994 635.566 623.118 635.566 cv
1 1 1 rgb
f
489.384 622.466 mo
488.628 622.466 487.895 621.575 488.493 620.79 cv
488.712 620.502 488.992 620.383 489.269 620.383 cv
490.025 620.383 490.757 621.274 490.16 622.059 cv
489.941 622.347 489.66 622.466 489.384 622.466 cv
.819608 .94902 1 rgb
f
76.2617 491.241 mo
76.0972 490.341 76.2862 489.352 76.9962 488.398 cv
77.8075 487.309 78.8564 486.858 79.8952 486.858 cv
79.9835 486.858 80.0717 486.861 80.1597 486.867 cv
79.3864 489.467 li
78.9745 489.694 78.5677 489.926 78.1643 490.157 cv
77.5236 490.525 76.8918 490.893 76.2617 491.241 cv
81.6571 488.324 mo
81.5005 487.21 li
81.9047 487.391 82.2841 487.634 82.6191 487.926 cv
82.2937 488.05 81.9733 488.184 81.6571 488.324 cv
1 1 1 rgb
f
79.3864 489.467 mo
80.1597 486.867 li
80.6201 486.901 81.0744 487.021 81.5005 487.21 cv
81.6571 488.324 li
80.8773 488.671 80.1238 489.062 79.3864 489.467 cv
f
80.3259 494.578 mo
78.4466 494.578 76.6012 493.099 76.2617 491.241 cv
76.8918 490.893 77.5236 490.525 78.1643 490.157 cv
78.5677 489.926 78.9745 489.694 79.3864 489.467 cv
80.1238 489.062 80.8773 488.671 81.6571 488.324 cv
81.9733 488.184 82.2937 488.05 82.6191 487.926 cv
83.9955 489.125 84.6292 491.152 83.2247 493.037 cv
82.4136 494.127 81.3646 494.578 80.3259 494.578 cv
f
35.2553 476.836 mo
34.3302 475.369 34.2384 473.417 35.8298 471.838 cv
35.9827 471.687 36.1391 471.551 36.2977 471.429 cv
36.9757 471.005 li
37.3808 470.805 37.7949 470.687 38.2067 470.642 cv
35.2553 476.836 li
42.6784 474.264 mo
42.3928 473.542 42.12 472.851 41.8639 472.201 cv
42.3215 472.729 42.6638 473.354 42.8359 474.021 cv
42.7754 474.097 42.7224 474.178 42.6784 474.264 cv
.976471 .976471 .992157 rgb
f
36.2977 471.429 mo
36.5196 471.26 36.7459 471.119 36.9757 471.005 cv
36.2977 471.429 li
f
38.945 478.997 mo
37.4588 478.997 36.0496 478.095 35.2553 476.836 cv
38.2067 470.642 li
38.34 470.627 38.4728 470.62 38.6052 470.62 cv
39.8512 470.62 41.0431 471.254 41.8639 472.201 cv
42.12 472.851 42.3928 473.542 42.6784 474.264 cv
42.4851 474.641 42.4641 475.107 42.7439 475.585 cv
42.7842 475.654 42.8274 475.718 42.8731 475.776 cv
42.7185 476.466 42.352 477.152 41.7203 477.779 cv
40.8548 478.637 39.8847 478.997 38.945 478.997 cv
.968627 .968627 .984314 rgb
f
42.9602 474.977 mo
42.865 474.736 42.7711 474.499 42.6784 474.264 cv
42.7224 474.178 42.7754 474.097 42.8359 474.021 cv
42.9161 474.332 42.9595 474.653 42.9602 474.977 cv
.984314 .984314 .996078 rgb
f
42.8731 475.776 mo
42.8274 475.718 42.7842 475.654 42.7439 475.585 cv
42.4641 475.107 42.4851 474.641 42.6784 474.264 cv
42.7711 474.499 42.865 474.736 42.9602 474.977 cv
42.9607 475.242 42.9327 475.509 42.8731 475.776 cv
.980392 .980392 .988235 rgb
f
50.2627 463.761 mo
49.4984 463.761 48.7297 463.422 48.1585 462.604 cv
46.6946 460.507 48.6239 458.287 50.5794 458.287 cv
51.3437 458.287 52.1125 458.627 52.6836 459.445 cv
54.1473 461.542 52.2182 463.762 50.2627 463.761 cv
.741176 .709804 .917647 rgb
f
34.0498 459.661 mo
33.5634 458.692 33.5683 457.496 34.4687 456.41 cv
35.0319 455.73 35.7011 455.386 36.378 455.296 cv
34.8347 459 li
34.8345 459 li
34.0498 459.661 li
37.9436 455.667 mo
37.8594 455.483 li
37.9214 455.507 37.9828 455.533 38.0434 455.56 cv
37.9436 455.667 li
.909804 .886274 .941176 rgb
f
34.3538 460.154 mo
34.2384 459.998 34.1363 459.833 34.0498 459.661 cv
34.8345 459 li
34.3538 460.154 li
39.8112 459.742 mo
37.9436 455.667 li
38.0434 455.56 li
39.5588 456.244 40.6264 458.036 39.8112 459.742 cv
.831372 .815686 .94902 rgb
f
37.0721 461.592 mo
36.0165 461.592 34.9858 461.009 34.3538 460.154 cv
34.8347 459 li
36.378 455.296 li
36.5012 455.28 36.6245 455.272 36.7475 455.272 cv
37.1272 455.272 37.5035 455.347 37.8594 455.483 cv
37.9436 455.667 li
39.8112 459.742 li
39.6964 459.982 39.5444 460.22 39.3509 460.454 cv
38.6852 461.258 37.8716 461.592 37.0721 461.592 cv
f
434.595 463.519 mo
433.007 463.519 432.522 460.964 434.272 460.539 cv
434.409 460.506 434.539 460.49 434.663 460.49 cv
436.251 460.49 436.735 463.045 434.985 463.471 cv
434.848 463.504 434.718 463.519 434.595 463.519 cv
.745098 .745098 .890196 rgb
f
438.014 513.632 mo
437.571 513.632 437.131 513.425 436.839 512.926 cv
436.18 511.798 437.191 510.744 438.19 510.744 cv
438.633 510.744 439.073 510.951 439.365 511.45 cv
440.024 512.578 439.013 513.632 438.014 513.632 cv
.941176 1 1 rgb
f
380.029 479.659 mo
376.094 479.659 374.094 473.711 377.903 471.582 cv
378.198 473.124 379.303 474.476 381.328 474.715 cv
381.521 474.738 381.708 474.749 381.889 474.749 cv
382.753 474.749 383.485 474.499 384.073 474.086 cv
384.7 476.033 384.13 478.349 381.684 479.324 cv
381.104 479.555 380.55 479.659 380.029 479.659 cv
.819608 .94902 1 rgb
f
426.198 454.358 mo
425.309 454.358 424.435 453.85 424.235 452.72 cv
424.185 452.432 424.189 452.167 424.236 451.927 cv
424.561 452.033 424.9 452.09 425.244 452.09 cv
426.025 452.091 426.831 451.793 427.554 451.083 cv
427.617 451.022 427.676 450.96 427.732 450.898 cv
428.006 451.162 428.21 451.527 428.294 452.003 cv
428.556 453.487 427.364 454.358 426.198 454.358 cv
.745098 .745098 .890196 rgb
f
424.236 451.927 mo
422.018 451.201 420.48 448.223 422.654 446.09 cv
423.376 445.381 424.183 445.083 424.964 445.083 cv
427.594 445.083 429.926 448.463 427.732 450.898 cv
427.355 450.535 426.846 450.365 426.331 450.365 cv
425.392 450.365 424.435 450.931 424.236 451.927 cv
.607843 .6 .827451 rgb
f
425.244 452.09 mo
424.9 452.09 424.561 452.033 424.236 451.927 cv
424.435 450.931 425.392 450.365 426.331 450.365 cv
426.846 450.365 427.355 450.535 427.732 450.898 cv
427.676 450.96 427.617 451.022 427.554 451.083 cv
426.831 451.793 426.025 452.091 425.244 452.09 cv
.831372 .835294 .929412 rgb
f
452.983 438.901 mo
452.482 438.901 451.99 438.649 451.738 438.049 cv
451.273 436.939 452.226 436.083 453.149 436.083 cv
453.649 436.083 454.141 436.335 454.393 436.936 cv
454.858 438.045 453.905 438.901 452.983 438.901 cv
.745098 .745098 .890196 rgb
f
400.111 454.684 mo
397.321 454.684 394.606 451.424 396.782 448.504 cv
397.593 447.415 398.642 446.963 399.681 446.963 cv
402.471 446.963 405.185 450.223 403.01 453.143 cv
402.199 454.233 401.15 454.684 400.111 454.684 cv
1 1 1 rgb
f
358.73 439.103 mo
355.513 439.102 352.657 434.878 355.615 431.944 cv
356.481 431.086 357.451 430.726 358.391 430.726 cv
359.988 430.726 361.497 431.768 362.248 433.176 cv
359.888 436.988 li
362.332 436.775 li
362.135 437.157 361.863 437.53 361.506 437.884 cv
360.64 438.743 359.67 439.103 358.73 439.103 cv
.607843 .6 .827451 rgb
f
359.888 436.988 mo
362.248 433.176 li
362.828 434.261 362.958 435.564 362.332 436.775 cv
359.888 436.988 li
f
368.404 423.233 mo
368.24 423.087 368.086 422.913 367.944 422.709 cv
367.495 422.066 367.365 421.412 367.457 420.813 cv
370.665 418.411 li
370.876 418.436 371.086 418.489 371.29 418.572 cv
368.404 423.233 li
f
370.048 423.867 mo
369.474 423.867 368.897 423.675 368.404 423.233 cv
371.29 418.572 li
371.724 418.75 372.131 419.067 372.469 419.551 cv
373.933 421.648 372.004 423.867 370.048 423.867 cv
367.457 420.813 mo
367.666 419.46 369.009 418.393 370.365 418.393 cv
370.465 418.393 370.565 418.399 370.665 418.411 cv
367.457 420.813 li
f
422.211 562.342 mo
419.88 562.342 417.67 559.499 419.607 557.159 cv
420.273 556.356 421.087 556.022 421.886 556.022 cv
424.218 556.022 426.428 558.865 424.49 561.204 cv
423.824 562.008 423.011 562.342 422.211 562.342 cv
.882353 .968627 1 rgb
f
316.568 569.604 mo
315.967 569.604 315.358 568.973 315.749 568.293 cv
315.924 567.988 316.191 567.861 316.46 567.861 cv
317.061 567.861 317.67 568.492 317.279 569.172 cv
317.104 569.477 316.837 569.604 316.568 569.604 cv
.984314 .996078 1 rgb
f
316.237 555.856 mo
314.113 555.856 312.999 552.517 315.352 551.49 cv
315.677 551.348 315.989 551.285 316.282 551.285 cv
318.406 551.285 319.52 554.624 317.168 555.651 cv
316.842 555.793 316.53 555.856 316.237 555.856 cv
.882353 .968627 1 rgb
f
572.994 636.667 mo
571.529 636.666 570.026 635.542 570.404 633.688 cv
570.681 632.329 571.731 631.728 572.803 631.728 cv
574.267 631.728 575.771 632.852 575.393 634.706 cv
575.116 636.065 574.065 636.667 572.994 636.667 cv
.960784 1 1 rgb
f
267.821 566.362 mo
267.738 566.362 267.65 566.352 267.559 566.33 cv
266.351 566.043 266.682 564.282 267.776 564.282 cv
267.859 564.282 267.947 564.292 268.039 564.314 cv
269.246 564.601 268.915 566.362 267.821 566.362 cv
1 1 1 rgb
f
133.714 614.592 mo
132.838 614.592 132.571 613.184 133.536 612.95 cv
133.611 612.931 133.683 612.923 133.751 612.923 cv
134.626 612.923 134.893 614.331 133.929 614.566 cv
133.853 614.584 133.782 614.592 133.714 614.592 cv
.819608 .94902 1 rgb
f
107.533 640.518 mo
105.612 640.517 104.779 637.453 106.916 636.701 cv
107.156 636.617 107.384 636.578 107.599 636.578 cv
109.52 636.578 110.353 639.643 108.216 640.395 cv
107.976 640.479 107.748 640.518 107.533 640.518 cv
.882353 .968627 1 rgb
f
94.6422 599.644 mo
94.432 599.644 94.2227 599.559 94.066 599.36 cv
94.1391 599.033 94.1261 598.705 94.0455 598.393 cv
94.2104 598.186 94.4756 598.052 94.7393 598.052 cv
94.9833 598.052 95.2261 598.167 95.3869 598.442 cv
95.7501 599.063 95.1928 599.644 94.6422 599.644 cv
.941176 1 1 rgb
f
103.64 623.488 mo
103.096 623.488 102.619 623.282 102.243 622.955 cv
102.771 623.233 103.324 623.358 103.869 623.358 cv
104.113 623.358 104.357 623.333 104.596 623.285 cv
104.581 623.291 104.567 623.297 104.552 623.303 cv
104.233 623.43 103.927 623.488 103.64 623.488 cv
.819608 .94902 1 rgb
f
129.086 609.543 mo
128.596 609.543 128.114 609.263 128.004 608.64 cv
127.976 608.481 127.978 608.335 128.005 608.203 cv
128.183 608.262 128.37 608.293 128.56 608.293 cv
128.99 608.294 129.435 608.129 129.833 607.738 cv
129.867 607.705 129.9 607.671 129.931 607.636 cv
130.082 607.781 130.194 607.983 130.241 608.245 cv
130.385 609.063 129.728 609.543 129.086 609.543 cv
.984314 .996078 1 rgb
f
126.571 606.041 mo
126.614 605.745 126.737 605.45 126.962 605.173 cv
127.128 605.291 127.324 605.345 127.522 605.345 cv
128.036 605.345 128.564 604.983 128.627 604.446 cv
128.987 604.492 129.33 604.65 129.616 604.88 cv
128.578 605.276 127.558 605.664 126.571 606.041 cv
.960784 1 1 rgb
f
128.005 608.203 mo
127.122 607.915 126.436 606.98 126.571 606.041 cv
127.558 605.664 128.578 605.276 129.616 604.88 cv
130.406 605.515 130.773 606.702 129.931 607.636 cv
129.723 607.436 129.443 607.343 129.159 607.343 cv
128.641 607.343 128.114 607.654 128.005 608.203 cv
.882353 .968627 1 rgb
f
128.56 608.293 mo
128.37 608.293 128.183 608.262 128.005 608.203 cv
128.114 607.654 128.641 607.343 129.159 607.343 cv
129.443 607.343 129.723 607.436 129.931 607.636 cv
129.9 607.671 129.867 607.705 129.833 607.738 cv
129.435 608.129 128.99 608.294 128.56 608.293 cv
.992157 1 1 rgb
f
77.4264 544.865 mo
77.1506 544.865 76.8797 544.727 76.7409 544.396 cv
76.4845 543.784 77.0095 543.312 77.5181 543.312 cv
77.7939 543.312 78.0649 543.451 78.2037 543.782 cv
78.46 544.393 77.9349 544.865 77.4264 544.865 cv
1 1 1 rgb
f
93.3988 542.973 mo
92.0649 542.973 91.3421 541.73 91.4576 540.605 cv
92.574 539.024 li
92.7323 538.955 92.9081 538.902 93.102 538.869 cv
93.2367 538.847 93.3659 538.836 93.4901 538.836 cv
95.7865 538.836 96.272 542.522 93.787 542.94 cv
93.6524 542.963 93.523 542.973 93.3988 542.973 cv
f
91.4576 540.605 mo
91.5253 539.945 91.8821 539.326 92.574 539.024 cv
91.4576 540.605 li
f
110.428 556.034 mo
109.231 555.55 107.886 555.081 106.436 554.634 cv
106.77 553.832 107.644 553.359 108.499 553.359 cv
109.342 553.359 110.166 553.818 110.442 554.873 cv
110.554 555.305 110.538 555.696 110.428 556.034 cv
.984314 .996078 1 rgb
f
108.313 557.448 mo
107.471 557.448 106.646 556.989 106.371 555.934 cv
106.242 555.44 106.282 555.002 106.436 554.634 cv
107.886 555.081 109.231 555.55 110.428 556.034 cv
110.142 556.92 109.217 557.448 108.313 557.448 cv
f
119.815 554.976 mo
119.646 554.976 119.479 554.878 119.446 554.662 cv
119.403 554.388 119.622 554.231 119.837 554.231 cv
120.006 554.231 120.173 554.329 120.206 554.545 cv
120.248 554.819 120.03 554.976 119.815 554.976 cv
.882353 .968627 1 rgb
f
202.949 539.605 mo
202.808 539.605 202.668 539.563 202.555 539.47 cv
203.444 539.419 li
203.31 539.537 203.128 539.605 202.949 539.605 cv
.941176 1 1 rgb
f
202.555 539.47 mo
202.471 539.401 202.401 539.305 202.356 539.177 cv
202.174 538.667 202.604 538.301 203.021 538.301 cv
203.266 538.301 203.506 538.429 203.613 538.729 cv
203.717 539.019 203.622 539.263 203.444 539.419 cv
202.555 539.47 li
.819608 .94902 1 rgb
f
193.163 542.787 mo
191.813 542.787 190.687 541.398 190.863 540.086 cv
191.898 539.924 192.932 539.763 193.964 539.603 cv
195.258 539.886 li
195.265 539.886 li
195.541 540.708 195.379 541.66 194.473 542.328 cv
194.036 542.649 193.589 542.787 193.163 542.787 cv
1 1 1 rgb
f
190.863 540.086 mo
190.912 539.716 191.065 539.353 191.344 539.028 cv
193.964 539.603 li
192.932 539.763 191.898 539.924 190.863 540.086 cv
f
195.258 539.886 mo
193.964 539.603 li
191.344 539.028 li
191.46 538.893 191.598 538.765 191.76 538.646 cv
192.196 538.325 192.643 538.187 193.069 538.187 cv
194.072 538.187 194.951 538.954 195.265 539.886 cv
195.258 539.886 li
f
127.51 529.131 mo
126.259 529.131 124.993 527.812 125.814 526.4 cv
126.179 525.772 126.732 525.512 127.287 525.512 cv
128.538 525.512 129.803 526.831 128.983 528.242 cv
128.618 528.87 128.065 529.131 127.51 529.131 cv
f
155.783 541.835 mo
154.16 541.835 152.927 539.488 154.597 538.279 cv
154.968 538.011 155.347 537.896 155.707 537.896 cv
157.331 537.896 158.564 540.242 156.893 541.451 cv
156.522 541.72 156.143 541.835 155.783 541.835 cv
.984314 .996078 1 rgb
f
157.227 537.1 mo
155.479 537.1 153.716 535.232 154.891 533.274 cv
155.402 532.421 156.16 532.068 156.92 532.068 cv
158.669 532.068 160.432 533.936 159.257 535.894 cv
158.745 536.747 157.988 537.1 157.227 537.1 cv
.819608 .94902 1 rgb
f
166.925 562.872 mo
166.025 562.872 165.959 561.452 166.89 561.397 cv
166.908 561.396 166.925 561.395 166.943 561.395 cv
167.843 561.395 167.908 562.815 166.978 562.871 cv
166.96 562.872 166.942 562.872 166.925 562.872 cv
.941176 1 1 rgb
f
147.945 549.962 mo
147.785 549.962 147.614 549.926 147.437 549.846 cv
146.194 549.284 146.804 547.527 147.926 547.527 cv
148.087 547.527 148.257 547.563 148.434 547.643 cv
149.677 548.205 149.067 549.962 147.945 549.962 cv
.960784 1 1 rgb
f
197.913 587.429 mo
197.191 587.428 197.044 586.271 197.823 586.144 cv
197.864 586.137 197.903 586.134 197.941 586.134 cv
198.662 586.134 198.81 587.292 198.031 587.419 cv
197.99 587.425 197.951 587.429 197.913 587.429 cv
.882353 .968627 1 rgb
f
213.731 565.322 mo
213.14 565.322 212.536 564.888 212.653 564.134 cv
212.745 563.539 213.203 563.27 213.668 563.27 cv
214.26 563.27 214.864 563.704 214.747 564.458 cv
214.655 565.053 214.197 565.322 213.731 565.322 cv
.941176 1 1 rgb
f
190.735 570.314 mo
190.011 570.314 189.262 569.724 189.506 568.817 cv
189.668 568.212 190.141 567.95 190.624 567.95 cv
191.349 567.95 192.097 568.54 191.854 569.447 cv
191.691 570.052 191.219 570.314 190.735 570.314 cv
1 1 1 rgb
f
117.028 563.095 mo
116.612 563.095 116.208 562.603 116.537 562.171 cv
116.658 562.012 116.812 561.946 116.965 561.946 cv
117.381 561.946 117.785 562.437 117.456 562.87 cv
117.335 563.029 117.181 563.095 117.028 563.095 cv
.941176 1 1 rgb
f
114.708 609.723 mo
113.17 609.723 111.674 607.926 112.873 606.317 cv
113.32 605.716 113.898 605.468 114.471 605.468 cv
116.008 605.468 117.505 607.264 116.306 608.874 cv
115.859 609.474 115.28 609.723 114.708 609.723 cv
1 1 1 rgb
f
91.901 601.135 mo
90.1279 601.135 88.5538 598.807 90.1842 597.19 cv
90.6611 596.717 91.1958 596.518 91.7137 596.518 cv
92.7832 596.518 93.7803 597.366 94.0455 598.393 cv
93.866 598.618 93.8053 598.931 93.9947 599.255 cv
94.017 599.293 94.0408 599.328 94.066 599.36 cv
93.9809 599.741 93.7788 600.118 93.4306 600.464 cv
92.9536 600.937 92.4189 601.135 91.901 601.135 cv
.996078 1 1 rgb
f
94.066 599.36 mo
94.0408 599.328 94.017 599.293 93.9947 599.255 cv
93.8053 598.931 93.866 598.618 94.0455 598.393 cv
94.1261 598.705 94.1391 599.033 94.066 599.36 cv
f
98.1386 592.738 mo
97.7174 592.738 97.2938 592.551 96.979 592.1 cv
96.1721 590.944 97.2355 589.721 98.3134 589.721 cv
98.7346 589.721 99.1582 589.908 99.473 590.359 cv
100.28 591.515 99.2164 592.738 98.1386 592.738 cv
.941176 1 1 rgb
f
243.541 536.446 mo
242.666 536.446 242.399 535.038 243.364 534.804 cv
243.439 534.785 243.511 534.777 243.579 534.777 cv
244.454 534.777 244.721 536.185 243.757 536.419 cv
243.681 536.438 243.61 536.446 243.541 536.446 cv
.882353 .968627 1 rgb
f
244.929 562.708 mo
245.091 562.563 245.308 562.474 245.523 562.474 cv
245.547 562.474 245.571 562.475 245.595 562.477 cv
245.374 562.554 245.15 562.631 244.929 562.708 cv
.941176 1 1 rgb
f
245.426 564.065 mo
245.182 564.065 244.939 563.951 244.778 563.676 cv
244.557 563.298 244.677 562.935 244.929 562.708 cv
245.15 562.631 245.374 562.554 245.595 562.477 cv
245.814 562.498 246.026 562.615 246.17 562.863 cv
246.534 563.485 245.976 564.065 245.426 564.065 cv
.819608 .94902 1 rgb
f
213.468 545.341 mo
211.195 545.341 210.094 541.743 212.618 540.737 cv
212.938 540.61 213.244 540.552 213.531 540.552 cv
215.803 540.552 216.905 544.15 214.38 545.156 cv
214.06 545.284 213.755 545.341 213.468 545.341 cv
.941176 1 1 rgb
f
36.4951 673.839 mo
36.2193 673.839 35.9482 673.7 35.8095 673.369 cv
35.553 672.758 36.078 672.286 36.5865 672.286 cv
36.8624 672.286 37.1335 672.425 37.2723 672.756 cv
37.5286 673.367 37.0036 673.839 36.4951 673.839 cv
1 1 1 rgb
f
52.4673 671.947 mo
50.1709 671.947 49.6856 668.261 52.1706 667.843 cv
52.3052 667.82 52.4344 667.81 52.5587 667.81 cv
54.8548 667.81 55.3404 671.495 52.8556 671.913 cv
52.8556 671.913 li
52.7876 671.922 52.7213 671.93 52.6531 671.939 cv
52.5898 671.944 52.528 671.947 52.4673 671.947 cv
f
52.6531 671.939 mo
52.7213 671.93 52.7876 671.922 52.8556 671.913 cv
52.8556 671.913 li
52.8556 671.913 li
52.7868 671.925 52.7192 671.934 52.6531 671.939 cv
f
67.3819 686.421 mo
66.5395 686.421 65.7146 685.963 65.4396 684.908 cv
65.3757 684.663 65.3533 684.432 65.3656 684.216 cv
66.0975 684.612 66.9251 684.834 67.7466 684.834 cv
68.3793 684.834 69.0085 684.702 69.5871 684.416 cv
69.5917 685.653 68.4721 686.421 67.3819 686.421 cv
.972549 .992157 1 rgb
f
78.8832 683.949 mo
78.7139 683.949 78.5473 683.851 78.514 683.636 cv
78.4717 683.362 78.6907 683.205 78.9052 683.205 cv
79.0745 683.205 79.2411 683.302 79.2744 683.518 cv
79.3168 683.792 79.0978 683.949 78.8832 683.949 cv
.788235 .941176 1 rgb
f
162.017 668.578 mo
161.772 668.578 161.531 668.451 161.424 668.151 cv
161.243 667.641 161.673 667.275 162.089 667.275 cv
162.334 667.275 162.575 667.402 162.682 667.702 cv
162.864 668.212 162.433 668.578 162.017 668.578 cv
.941176 1 1 rgb
f
152.232 671.761 mo
150.344 671.76 148.895 669.044 150.828 667.62 cv
151.264 667.298 151.712 667.161 152.137 667.161 cv
154.025 667.161 155.474 669.877 153.541 671.301 cv
153.105 671.623 152.657 671.761 152.232 671.761 cv
1 1 1 rgb
f
86.578 658.104 mo
85.3277 658.104 84.062 656.785 84.8828 655.374 cv
85.248 654.745 85.8005 654.485 86.3559 654.485 cv
87.6063 654.485 88.8718 655.804 88.0512 657.216 cv
87.686 657.844 87.1336 658.104 86.578 658.104 cv
f
114.852 670.809 mo
113.228 670.808 111.995 668.462 113.666 667.253 cv
114.037 666.984 114.416 666.869 114.776 666.869 cv
116.399 666.869 117.632 669.216 115.962 670.425 cv
115.591 670.693 115.212 670.809 114.852 670.809 cv
.996078 1 1 rgb
f
116.296 666.073 mo
114.547 666.073 112.784 664.205 113.959 662.247 cv
114.471 661.394 115.228 661.041 115.989 661.041 cv
117.737 661.041 119.5 662.909 118.325 664.867 cv
117.813 665.72 117.056 666.074 116.296 666.073 cv
.819608 .94902 1 rgb
f
125.993 691.846 mo
125.094 691.846 125.028 690.426 125.958 690.37 cv
125.976 690.369 125.994 690.369 126.011 690.369 cv
126.911 690.369 126.977 691.789 126.046 691.844 cv
126.028 691.845 126.011 691.846 125.993 691.846 cv
.67451 .909804 1 rgb
f
107.013 678.936 mo
106.853 678.936 106.683 678.9 106.506 678.82 cv
105.262 678.258 105.873 676.501 106.995 676.501 cv
107.155 676.501 107.325 676.536 107.502 676.617 cv
108.745 677.179 108.135 678.936 107.013 678.936 cv
.788235 .941176 1 rgb
f
172.8 694.296 mo
172.208 694.296 171.604 693.861 171.721 693.107 cv
171.813 692.512 172.271 692.243 172.737 692.243 cv
173.328 692.243 173.932 692.678 173.816 693.432 cv
173.723 694.026 173.266 694.296 172.8 694.296 cv
.67451 .909804 1 rgb
f
149.804 699.288 mo
149.079 699.288 148.331 698.698 148.574 697.791 cv
148.736 697.186 149.209 696.924 149.692 696.924 cv
150.417 696.924 151.165 697.514 150.922 698.421 cv
150.76 699.026 150.287 699.288 149.804 699.288 cv
1 1 1 rgb
f
76.0966 692.068 mo
75.6799 692.068 75.2763 691.577 75.6056 691.144 cv
75.7264 690.986 75.8807 690.92 76.0333 690.92 cv
76.45 690.92 76.8536 691.411 76.5243 691.843 cv
76.4035 692.002 76.2492 692.068 76.0966 692.068 cv
.67451 .909804 1 rgb
f
172.536 674.315 mo
170.264 674.315 169.162 670.717 171.687 669.711 cv
172.006 669.583 172.312 669.526 172.599 669.526 cv
174.872 669.526 175.973 673.124 173.448 674.13 cv
173.129 674.258 172.823 674.315 172.536 674.315 cv
.941176 1 1 rgb
f
523.247 641.993 mo
522.757 641.993 522.275 641.713 522.165 641.09 cv
522.137 640.931 522.139 640.785 522.166 640.653 cv
522.345 640.711 522.531 640.743 522.721 640.743 cv
523.151 640.743 523.596 640.579 523.994 640.188 cv
524.029 640.155 524.061 640.12 524.093 640.086 cv
524.244 640.231 524.356 640.433 524.402 640.695 cv
524.546 641.513 523.889 641.993 523.247 641.993 cv
.960784 1 1 rgb
f
522.166 640.653 mo
520.943 640.253 520.095 638.612 521.294 637.436 cv
521.413 637.319 521.536 637.222 521.662 637.144 cv
521.763 637.404 521.927 637.659 522.164 637.899 cv
522.615 638.356 523.126 638.547 523.621 638.548 cv
523.921 638.548 524.215 638.477 524.488 638.353 cv
524.663 638.91 524.583 639.541 524.093 640.086 cv
523.885 639.886 523.604 639.792 523.32 639.792 cv
522.803 639.792 522.276 640.104 522.166 640.653 cv
.941176 1 1 rgb
f
522.721 640.743 mo
522.531 640.743 522.345 640.711 522.166 640.653 cv
522.276 640.104 522.803 639.792 523.32 639.792 cv
523.604 639.792 523.885 639.886 524.093 640.086 cv
524.061 640.12 524.029 640.155 523.994 640.188 cv
523.596 640.579 523.151 640.743 522.721 640.743 cv
.972549 1 1 rgb
f
508.869 642.173 mo
507.332 642.173 505.835 640.376 507.034 638.767 cv
507.481 638.167 508.06 637.918 508.632 637.918 cv
510.17 637.918 511.666 639.714 510.467 641.323 cv
510.02 641.924 509.442 642.173 508.869 642.173 cv
1 1 1 rgb
f
236.716 590.912 mo
235.431 590.912 234.213 589.345 235.281 588.056 cv
235.648 587.613 236.096 587.429 236.537 587.429 cv
237.822 587.429 239.04 588.996 237.972 590.285 cv
237.605 590.728 237.157 590.912 236.716 590.912 cv
.882353 .968627 1 rgb
f
326.821 558.475 mo
326.22 558.475 325.611 557.844 326.002 557.164 cv
326.177 556.859 326.445 556.732 326.714 556.732 cv
327.314 556.732 327.923 557.363 327.533 558.043 cv
327.357 558.348 327.09 558.475 326.821 558.475 cv
.984314 .996078 1 rgb
f
326.999 575.051 mo
324.875 575.051 323.761 571.712 326.114 570.685 cv
326.439 570.543 326.751 570.48 327.044 570.48 cv
329.168 570.48 330.282 573.819 327.93 574.846 cv
327.605 574.988 327.293 575.051 326.999 575.051 cv
.882353 .968627 1 rgb
f
354.812 605.205 mo
353.348 605.204 351.844 604.08 352.222 602.226 cv
352.499 600.867 353.549 600.266 354.621 600.266 cv
356.086 600.266 357.589 601.39 357.211 603.244 cv
356.934 604.603 355.884 605.205 354.812 605.205 cv
f
375.506 562.054 mo
375.422 562.054 375.335 562.044 375.243 562.022 cv
374.035 561.734 374.366 559.974 375.46 559.974 cv
375.543 559.974 375.631 559.984 375.723 560.006 cv
375.851 560.036 375.962 560.083 376.056 560.143 cv
376.032 560.622 376.138 561.103 376.342 561.543 cv
376.18 561.837 375.89 562.054 375.506 562.054 cv
1 1 1 rgb
f
575.952 569.572 mo
575.077 569.572 574.81 568.164 575.774 567.929 cv
575.849 567.911 575.921 567.902 575.989 567.902 cv
576.865 567.902 577.131 569.31 576.167 569.545 cv
576.092 569.563 576.02 569.572 575.952 569.572 cv
.819608 .94902 1 rgb
f
602.103 545.916 mo
600.182 545.916 599.349 542.852 601.487 542.1 cv
601.727 542.016 601.955 541.977 602.17 541.977 cv
604.091 541.977 604.924 545.042 602.786 545.794 cv
602.547 545.878 602.318 545.916 602.103 545.916 cv
.882353 .968627 1 rgb
f
348.134 598.737 mo
347.89 598.737 347.647 598.623 347.486 598.348 cv
347.123 597.727 347.681 597.146 348.231 597.146 cv
348.441 597.146 348.651 597.231 348.807 597.43 cv
348.734 597.757 348.747 598.085 348.828 598.397 cv
348.663 598.604 348.398 598.737 348.134 598.737 cv
.819608 .94902 1 rgb
f
606 563.796 mo
603.728 563.796 602.626 560.198 605.151 559.192 cv
605.47 559.064 605.776 559.007 606.063 559.007 cv
608.335 559.007 609.437 562.605 606.912 563.611 cv
606.593 563.739 606.287 563.796 606 563.796 cv
f
579.772 574.859 mo
579.621 574.713 579.508 574.512 579.462 574.249 cv
579.318 573.432 579.975 572.952 580.617 572.952 cv
581.107 572.952 581.589 573.231 581.699 573.854 cv
581.727 574.013 581.725 574.159 581.698 574.292 cv
581.519 574.233 581.333 574.201 581.143 574.201 cv
580.713 574.201 580.268 574.365 579.87 574.756 cv
579.835 574.79 579.803 574.824 579.772 574.859 cv
.984314 .996078 1 rgb
f
581.297 578.064 mo
579.848 578.063 578.562 576.201 579.772 574.859 cv
579.979 575.058 580.26 575.152 580.544 575.152 cv
581.061 575.152 581.588 574.841 581.698 574.292 cv
582.921 574.691 583.769 576.333 582.57 577.509 cv
582.172 577.899 581.728 578.064 581.297 578.064 cv
.882353 .968627 1 rgb
f
580.544 575.152 mo
580.26 575.152 579.979 575.058 579.772 574.859 cv
579.803 574.824 579.835 574.79 579.87 574.756 cv
580.268 574.365 580.713 574.201 581.143 574.201 cv
581.333 574.201 581.519 574.233 581.698 574.292 cv
581.588 574.841 581.061 575.152 580.544 575.152 cv
.992157 1 1 rgb
f
565.763 583.024 mo
565.488 583.024 565.216 582.885 565.078 582.554 cv
564.821 581.943 565.346 581.47 565.855 581.47 cv
566.131 581.47 566.402 581.609 566.541 581.94 cv
566.797 582.552 566.272 583.024 565.763 583.024 cv
1 1 1 rgb
f
282.962 601.795 mo
280.665 601.795 280.18 598.109 282.665 597.691 cv
282.799 597.668 282.929 597.658 283.053 597.658 cv
285.349 597.658 285.835 601.344 283.35 601.762 cv
283.215 601.784 283.086 601.795 282.962 601.795 cv
f
534.782 572.977 mo
533.94 572.977 533.115 572.518 532.84 571.463 cv
532.431 569.896 533.719 568.888 534.968 568.888 cv
535.81 568.888 536.635 569.347 536.91 570.402 cv
537.319 571.969 536.031 572.977 534.782 572.977 cv
.984314 .996078 1 rgb
f
523.445 572.105 mo
523.275 572.105 523.109 572.007 523.075 571.791 cv
523.033 571.517 523.252 571.36 523.466 571.36 cv
523.636 571.36 523.802 571.458 523.836 571.674 cv
523.878 571.948 523.659 572.105 523.445 572.105 cv
.882353 .968627 1 rgb
f
172.827 601.866 mo
172.677 601.375 173.097 601.026 173.503 601.026 cv
173.51 601.026 173.517 601.026 173.523 601.027 cv
173.234 601.251 172.993 601.541 172.827 601.866 cv
.819608 .94902 1 rgb
f
183.383 602.444 mo
181.495 602.444 180.046 599.728 181.98 598.303 cv
182.416 597.982 182.863 597.844 183.288 597.844 cv
185.176 597.844 186.626 600.56 184.692 601.985 cv
184.256 602.306 183.808 602.444 183.383 602.444 cv
1 1 1 rgb
f
249.165 615.119 mo
247.914 615.119 246.649 613.8 247.469 612.389 cv
247.834 611.761 248.387 611.5 248.942 611.5 cv
250.193 611.5 251.458 612.819 250.638 614.231 cv
250.273 614.859 249.72 615.119 249.165 615.119 cv
f
220.745 602.736 mo
219.121 602.736 217.888 600.389 219.559 599.18 cv
219.93 598.911 220.309 598.796 220.669 598.796 cv
222.292 598.796 223.525 601.143 221.854 602.352 cv
221.484 602.62 221.105 602.736 220.745 602.736 cv
.984314 .996078 1 rgb
f
219.532 608.564 mo
217.784 608.563 216.02 606.695 217.195 604.737 cv
217.707 603.885 218.464 603.531 219.225 603.531 cv
220.973 603.531 222.736 605.399 221.561 607.357 cv
221.049 608.21 220.292 608.564 219.532 608.564 cv
.819608 .94902 1 rgb
f
476.338 564.941 mo
475.439 564.94 475.373 563.521 476.303 563.465 cv
476.321 563.464 476.339 563.464 476.356 563.464 cv
477.256 563.464 477.322 564.883 476.392 564.939 cv
476.374 564.94 476.356 564.941 476.338 564.941 cv
f
495.355 578.809 mo
495.195 578.809 495.024 578.773 494.847 578.693 cv
493.605 578.131 494.215 576.374 495.337 576.374 cv
495.497 576.374 495.667 576.41 495.844 576.49 cv
497.087 577.052 496.477 578.809 495.355 578.809 cv
.882353 .968627 1 rgb
f
445.341 540.202 mo
444.619 540.202 444.471 539.044 445.251 538.917 cv
445.292 538.911 445.331 538.907 445.369 538.907 cv
446.09 538.907 446.238 540.065 445.458 540.192 cv
445.418 540.199 445.378 540.202 445.341 540.202 cv
f
429.613 563.066 mo
429.022 563.066 428.417 562.632 428.534 561.878 cv
428.626 561.283 429.084 561.014 429.55 561.014 cv
430.142 561.014 430.746 561.448 430.629 562.202 cv
430.537 562.797 430.079 563.066 429.613 563.066 cv
.819608 .94902 1 rgb
f
452.658 558.386 mo
451.933 558.386 451.185 557.795 451.428 556.889 cv
451.59 556.284 452.063 556.022 452.546 556.022 cv
453.271 556.022 454.019 556.612 453.776 557.519 cv
453.613 558.124 453.141 558.386 452.658 558.386 cv
1 1 1 rgb
f
526.316 564.39 mo
525.9 564.39 525.496 563.899 525.825 563.466 cv
525.946 563.307 526.101 563.241 526.253 563.241 cv
526.67 563.241 527.073 563.732 526.744 564.165 cv
526.623 564.324 526.469 564.39 526.316 564.39 cv
.819608 .94902 1 rgb
f
595.232 577.027 mo
593.694 577.027 592.198 575.231 593.397 573.621 cv
593.844 573.021 594.422 572.772 594.995 572.772 cv
596.532 572.772 598.029 574.568 596.83 576.178 cv
596.383 576.778 595.805 577.027 595.232 577.027 cv
1 1 1 rgb
f
351.159 600.272 mo
350.09 600.271 349.093 599.424 348.828 598.397 cv
349.007 598.172 349.068 597.859 348.879 597.535 cv
348.856 597.497 348.833 597.462 348.807 597.43 cv
348.893 597.049 349.095 596.672 349.443 596.326 cv
349.92 595.853 350.454 595.655 350.972 595.655 cv
352.745 595.655 354.319 597.983 352.689 599.6 cv
352.212 600.073 351.677 600.272 351.159 600.272 cv
.984314 .996078 1 rgb
f
348.828 598.397 mo
348.747 598.085 348.734 597.757 348.807 597.43 cv
348.833 597.462 348.856 597.497 348.879 597.535 cv
349.068 597.859 349.007 598.172 348.828 598.397 cv
.988235 .996078 1 rgb
f
344.56 607.069 mo
344.139 607.069 343.715 606.882 343.4 606.431 cv
342.594 605.275 343.657 604.052 344.735 604.052 cv
345.156 604.052 345.579 604.239 345.894 604.69 cv
346.701 605.846 345.638 607.069 344.56 607.069 cv
.819608 .94902 1 rgb
f
399.702 591.559 mo
398.827 591.559 398.56 590.151 399.525 589.917 cv
399.6 589.898 399.672 589.89 399.74 589.89 cv
400.615 589.89 400.882 591.298 399.918 591.532 cv
399.842 591.551 399.771 591.559 399.702 591.559 cv
.882353 .968627 1 rgb
f
397.758 563.862 mo
397.514 563.862 397.272 563.748 397.111 563.473 cv
396.748 562.851 397.305 562.271 397.855 562.271 cv
398.099 562.271 398.342 562.385 398.503 562.66 cv
398.866 563.281 398.309 563.862 397.758 563.862 cv
.819608 .94902 1 rgb
f
162.921 600.079 mo
160.649 600.079 159.547 596.481 162.072 595.475 cv
162.392 595.347 162.697 595.29 162.985 595.29 cv
165.257 595.29 166.358 598.888 163.834 599.894 cv
163.514 600.022 163.208 600.079 162.921 600.079 cv
f
403.522 596.846 mo
403.371 596.701 403.259 596.499 403.213 596.237 cv
403.069 595.419 403.725 594.939 404.368 594.939 cv
404.858 594.939 405.34 595.219 405.449 595.842 cv
405.477 596.001 405.475 596.147 405.449 596.279 cv
405.27 596.221 405.083 596.189 404.894 596.189 cv
404.463 596.189 404.019 596.353 403.62 596.744 cv
403.586 596.778 403.553 596.812 403.522 596.846 cv
.882353 .968627 1 rgb
f
405.048 600.051 mo
403.599 600.051 402.313 598.188 403.522 596.846 cv
403.73 597.046 404.011 597.14 404.295 597.14 cv
404.812 597.14 405.339 596.828 405.449 596.279 cv
406.672 596.679 407.52 598.32 406.321 599.496 cv
405.923 599.887 405.478 600.051 405.048 600.051 cv
.819608 .94902 1 rgb
f
404.295 597.14 mo
404.011 597.14 403.73 597.046 403.522 596.846 cv
403.553 596.812 403.586 596.778 403.62 596.744 cv
404.019 596.353 404.463 596.189 404.894 596.189 cv
405.083 596.189 405.27 596.221 405.449 596.279 cv
405.339 596.828 404.812 597.14 404.295 597.14 cv
.921569 .980392 1 rgb
f
418.983 599.015 mo
417.445 599.015 415.949 597.218 417.148 595.608 cv
417.595 595.008 418.173 594.759 418.745 594.759 cv
420.283 594.759 421.78 596.556 420.581 598.165 cv
420.134 598.766 419.555 599.015 418.983 599.015 cv
1 1 1 rgb
f
406.744 538.907 mo
405.459 538.907 404.241 537.34 405.309 536.051 cv
405.676 535.608 406.124 535.424 406.565 535.424 cv
407.85 535.424 409.068 536.991 408 538.28 cv
407.633 538.723 407.185 538.907 406.744 538.907 cv
.882353 .968627 1 rgb
f
90.0309 432.376 mo
89.3874 432.376 88.7351 431.7 89.1534 430.972 cv
89.3412 430.645 89.6277 430.509 89.9162 430.509 cv
90.5597 430.509 91.2121 431.185 90.7936 431.913 cv
90.6058 432.24 90.3193 432.376 90.0309 432.376 cv
.862745 .819608 .905882 rgb
f
89.6772 417.647 mo
89.4802 417.647 89.2915 417.62 89.1125 417.571 cv
91.12 413.267 li
92.3571 414.299 92.6 416.586 90.6739 417.427 cv
90.3255 417.579 89.9913 417.647 89.6772 417.647 cv
88.3818 416.431 mo
87.4912 414.169 li
87.6976 413.677 88.0962 413.246 88.7283 412.97 cv
88.7811 412.947 88.8335 412.926 88.8856 412.906 cv
88.3818 416.431 li
f
88.282 417.129 mo
87.4512 416.436 87.0687 415.176 87.4912 414.169 cv
88.3818 416.431 li
88.282 417.129 li
.741176 .709804 .917647 rgb
f
89.1125 417.571 mo
88.8036 417.485 88.5237 417.331 88.282 417.129 cv
88.3818 416.431 li
88.8856 412.906 li
89.1775 412.799 89.4585 412.75 89.725 412.75 cv
90.2617 412.75 90.7383 412.949 91.12 413.267 cv
89.1125 417.571 li
f
48.1855 396.382 mo
46.7515 396.382 45.3468 395.594 44.9078 393.792 cv
44.2718 391.181 46.4075 389.533 48.4818 389.533 cv
49.9158 389.533 51.3205 390.321 51.7594 392.123 cv
52.3955 394.734 50.2598 396.382 48.1855 396.382 cv
.909804 .886274 .941176 rgb
f
106.284 416.707 mo
106.236 416.707 106.188 416.706 106.139 416.704 cv
105.207 416.672 104.481 416.344 103.956 415.846 cv
106.419 409.801 li
110.778 409.993 110.574 416.707 106.284 416.707 cv
103.596 414.497 mo
103.089 414.415 li
102.744 413.288 102.933 411.974 103.637 411.036 cv
103.596 414.497 li
.862745 .819608 .905882 rgb
f
103.584 415.421 mo
103.364 415.117 103.199 414.776 103.089 414.415 cv
103.596 414.497 li
103.584 415.421 li
.741176 .709804 .917647 rgb
f
103.956 415.846 mo
103.819 415.715 103.695 415.573 103.584 415.421 cv
103.596 414.497 li
103.637 411.036 li
104.189 410.301 105.058 409.797 106.233 409.797 cv
106.281 409.797 106.33 409.798 106.378 409.8 cv
106.392 409.8 106.405 409.801 106.419 409.801 cv
103.956 415.846 li
f
59.2125 377.802 mo
57.3973 376.979 li
57.4404 376.686 57.5567 376.385 57.7629 376.087 cv
58.1971 375.459 58.7834 375.199 59.367 375.199 cv
60.1276 375.199 60.8835 375.641 61.2908 376.286 cv
59.2125 377.802 li
.980392 1 1 rgb
f
59.6091 379.361 mo
58.4033 379.361 57.2098 378.25 57.3973 376.979 cv
59.2125 377.802 li
61.2908 376.286 li
61.6778 376.9 61.7502 377.697 61.2134 378.473 cv
60.7791 379.101 60.1927 379.361 59.6091 379.361 cv
.831372 .815686 .94902 rgb
f
60.1315 385.735 mo
58.5627 385.735 56.9517 384.531 57.3567 382.545 cv
57.3611 382.523 57.3657 382.501 57.3706 382.48 cv
61.5372 380.89 li
62.3925 381.409 62.9617 382.361 62.7022 383.635 cv
62.4052 385.091 61.2798 385.736 60.1315 385.735 cv
.909804 .886274 .941176 rgb
f
57.3706 382.48 mo
57.6874 381.07 58.7962 380.444 59.9272 380.444 cv
60.4901 380.444 61.0586 380.599 61.5372 380.89 cv
57.3706 382.48 li
.831372 .815686 .94902 rgb
f
40.2347 359.569 mo
39.4887 359.569 39.1087 358.392 39.9361 358.044 cv
40.0467 357.997 40.1527 357.976 40.2523 357.976 cv
40.9982 357.976 41.3781 359.152 40.5507 359.501 cv
40.4401 359.548 40.3342 359.569 40.2347 359.569 cv
.992157 .992157 .996078 rgb
f
64.2316 366.821 mo
64.1892 366.821 64.1455 366.819 64.101 366.815 cv
62.4818 366.676 62.6506 364.228 64.1919 364.228 cv
64.2343 364.228 64.278 364.23 64.3225 364.233 cv
65.942 364.372 65.7732 366.821 64.2316 366.821 cv
.94902 .941176 .964706 rgb
f
59.0141 357.259 mo
56.8526 354.87 li
55.2814 355.698 li
55.2304 355.562 55.1871 355.418 55.1521 355.266 cv
54.6595 353.111 56.4151 351.773 58.1222 351.773 cv
59.3285 351.773 60.5107 352.441 60.8582 353.961 cv
61.2407 355.635 60.2676 356.815 59.0141 357.259 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
57.8882 357.454 mo
56.8031 357.454 55.7375 356.913 55.2814 355.698 cv
56.8526 354.87 li
59.0141 357.259 li
58.6535 357.387 58.2696 357.454 57.8882 357.454 cv
.921569 .905882 .941176 rgb
f
94.2809 337.027 mo
92.4971 337.027 90.7135 335.069 91.9701 333.107 cv
92.4934 332.29 93.2349 331.952 93.9765 331.952 cv
95.7603 331.952 97.5439 333.91 96.2873 335.872 cv
95.764 336.689 95.0225 337.027 94.2809 337.027 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
13.7388 361.428 mo
13.1269 361.428 12.5204 361.056 12.4595 360.27 cv
12.3909 359.384 13.0874 358.911 13.7769 358.911 cv
14.3888 358.911 14.9953 359.283 15.0562 360.069 cv
15.1249 360.956 14.4284 361.428 13.7388 361.428 cv
.972549 1 1 rgb
f
90.5886 341.177 mo
90.2094 341.177 89.8172 340.853 89.9678 340.385 cv
90.061 340.095 90.2903 339.971 90.5246 339.971 cv
90.9037 339.971 91.2959 340.295 91.1453 340.763 cv
91.0521 341.053 90.8229 341.177 90.5886 341.177 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
513.357 379.647 mo
511.227 378.956 509.886 375.886 512.185 374.079 cv
512.808 373.59 513.456 373.381 514.074 373.381 cv
514.932 373.381 515.732 373.783 516.323 374.394 cv
513.357 379.647 li
1 1 1 rgb
f
514.234 379.787 mo
513.933 379.787 513.638 379.738 513.357 379.647 cv
516.323 374.394 li
517.518 375.63 517.864 377.721 516.123 379.09 cv
515.501 379.579 514.853 379.787 514.234 379.787 cv
f
309.21 344.277 mo
308.289 343.88 li
308.632 343.9 308.953 344.05 309.21 344.277 cv
.921569 .905882 .941176 rgb
f
308.295 347.002 mo
307.043 347.002 306.025 345.252 307.267 344.236 cv
307.575 343.984 307.899 343.877 308.208 343.877 cv
308.235 343.877 308.262 343.878 308.289 343.88 cv
309.21 344.277 li
309.866 344.854 310.108 345.93 309.236 346.644 cv
308.928 346.895 308.605 347.002 308.295 347.002 cv
.972549 1 1 rgb
f
325.269 359.262 mo
324.445 357.978 li
325.967 358.874 li
325.269 359.262 li
326.308 358.684 mo
326.068 358.214 li
326.099 358.23 326.115 358.238 326.115 358.238 cv
326.115 358.238 li
326.115 358.238 li
326.568 358.54 li
326.308 358.684 li
.921569 .905882 .941176 rgb
f
326.568 358.54 mo
326.115 358.238 li
325.317 356.289 li
326.283 356.512 327.164 357.044 327.732 357.892 cv
326.568 358.54 li
.862745 .819608 .905882 rgb
f
326.115 358.238 mo
326.115 358.238 326.099 358.23 326.068 358.214 cv
325.06 356.237 li
325.146 356.252 325.232 356.269 325.317 356.289 cv
326.115 358.238 li
.972549 1 1 rgb
f
324.217 364.19 mo
323.603 364.19 322.99 364.073 322.431 363.838 cv
326.758 363.435 li
326.024 363.937 325.12 364.19 324.217 364.19 cv
327.512 362.756 mo
325.269 359.262 li
325.967 358.874 li
326.592 359.241 li
326.308 358.684 li
326.568 358.54 li
327.732 357.892 li
328.121 358.472 328.364 359.2 328.385 360.078 cv
328.412 361.198 328.071 362.091 327.512 362.756 cv
.745098 .713725 .968627 rgb
f
322.431 363.838 mo
321.134 363.293 320.129 362.113 320.084 360.281 cv
320.017 357.556 322.138 356.169 324.252 356.169 cv
324.523 356.169 324.794 356.192 325.06 356.237 cv
326.068 358.214 li
326.308 358.684 li
326.592 359.241 li
325.967 358.874 li
324.445 357.978 li
325.269 359.262 li
327.512 362.756 li
327.291 363.018 327.037 363.245 326.758 363.435 cv
322.431 363.838 li
f
289.009 363.164 mo
287.797 363.164 286.581 362.373 286.604 360.813 cv
286.627 359.287 287.808 358.533 288.992 358.533 cv
290.205 358.533 291.42 359.324 291.397 360.884 cv
291.374 362.41 290.193 363.164 289.009 363.164 cv
.992157 .992157 .996078 rgb
f
336.816 357.588 mo
336.502 357.588 336.197 357.497 335.925 357.341 cv
336.361 357.281 337.047 357.236 337.882 357.197 cv
337.541 357.471 337.173 357.588 336.816 357.588 cv
335.433 356.951 mo
334.806 356.28 334.607 355.211 335.459 354.392 cv
335.819 354.045 336.217 353.888 336.604 353.872 cv
336.121 355.035 335.634 356.267 335.433 356.951 cv
.835294 .815686 .980392 rgb
f
335.925 357.341 mo
335.743 357.237 335.577 357.105 335.433 356.951 cv
335.634 356.267 336.121 355.035 336.604 353.872 cv
336.627 353.871 336.65 353.87 336.673 353.87 cv
338.11 353.87 339.37 355.778 338.031 357.067 cv
337.982 357.114 337.932 357.157 337.882 357.197 cv
337.047 357.236 336.361 357.281 335.925 357.341 cv
f
337.357 336.696 mo
330.286 332.315 li
330.744 331.47 331.545 330.78 332.747 330.449 cv
333.165 330.333 333.564 330.28 333.941 330.28 cv
337.177 330.28 338.809 334.216 337.357 336.696 cv
1 1 1 rgb
f
333.762 338.625 mo
330.572 338.625 328.941 334.799 330.286 332.315 cv
337.357 336.696 li
336.891 337.492 336.107 338.138 334.957 338.456 cv
334.538 338.572 334.139 338.625 333.762 338.625 cv
f
400.955 318.599 mo
400.83 318.599 400.701 318.592 400.569 318.579 cv
396.573 318.167 397.07 312.153 400.844 312.153 cv
400.969 312.153 401.098 312.159 401.23 312.173 cv
405.226 312.585 404.729 318.599 400.955 318.599 cv
.862745 .819608 .905882 rgb
f
366.624 339.145 mo
366.062 339.145 365.502 338.522 365.904 337.908 cv
366.069 337.656 366.299 337.552 366.529 337.552 cv
367.091 337.552 367.651 338.174 367.249 338.789 cv
367.084 339.041 366.854 339.145 366.624 339.145 cv
.835294 .815686 .980392 rgb
f
379.253 351.984 mo
376.672 351.984 374.889 349.584 374.841 347.216 cv
377.477 346.725 li
376.877 345.087 li
377.332 345.068 377.817 345.05 378.321 345.032 cv
378.501 345.343 378.861 345.554 379.219 345.554 cv
379.5 345.554 379.78 345.425 379.973 345.113 cv
380.003 345.064 380.029 345.016 380.049 344.967 cv
380.39 344.954 380.732 344.94 381.072 344.924 cv
380.829 345.389 li
381.708 344.894 li
382.135 344.873 382.557 344.85 382.964 344.824 cv
383.145 345.104 383.299 345.404 383.423 345.716 cv
381.767 349.857 li
383.282 349.711 li
382.995 350.233 382.583 350.704 382.032 351.089 cv
381.663 350.211 li
381.268 351.522 li
381.172 351.565 381.072 351.607 380.97 351.647 cv
380.368 351.879 379.794 351.984 379.253 351.984 cv
1 1 1 rgb
f
376.877 345.087 mo
376.406 343.804 li
376.761 343.526 377.18 343.287 377.668 343.098 cv
378.27 342.866 378.845 342.761 379.385 342.761 cv
380.3 342.761 381.115 343.063 381.788 343.558 cv
381.072 344.924 li
380.732 344.94 380.39 344.954 380.049 344.967 cv
380.339 344.289 379.72 343.667 379.105 343.667 cv
378.824 343.667 378.544 343.796 378.351 344.109 cv
378.145 344.442 378.17 344.772 378.321 345.032 cv
377.817 345.05 377.332 345.068 376.877 345.087 cv
381.708 344.894 mo
382.637 344.371 li
382.754 344.516 382.863 344.667 382.964 344.824 cv
382.557 344.85 382.135 344.873 381.708 344.894 cv
f
381.767 349.857 mo
383.423 345.716 li
383.939 347.003 383.952 348.493 383.282 349.711 cv
381.767 349.857 li
380.829 345.389 mo
381.072 344.924 li
381.788 343.558 li
382.103 343.79 382.388 344.065 382.637 344.371 cv
381.708 344.894 li
380.829 345.389 li
f
374.841 347.216 mo
374.815 345.944 375.288 344.682 376.406 343.804 cv
376.877 345.087 li
377.477 346.725 li
374.841 347.216 li
f
381.268 351.522 mo
381.663 350.211 li
382.032 351.089 li
381.802 351.249 381.548 351.394 381.268 351.522 cv
f
379.219 345.554 mo
378.861 345.554 378.501 345.343 378.321 345.032 cv
378.88 345.012 379.463 344.991 380.049 344.967 cv
380.029 345.016 380.003 345.064 379.973 345.113 cv
379.78 345.425 379.5 345.554 379.219 345.554 cv
f
378.321 345.032 mo
378.17 344.772 378.145 344.442 378.351 344.109 cv
378.544 343.796 378.824 343.667 379.105 343.667 cv
379.72 343.667 380.339 344.289 380.049 344.967 cv
379.463 344.991 378.88 345.012 378.321 345.032 cv
f
312.806 363.327 mo
312.586 363.327 312.369 363.222 312.234 362.97 cv
312.126 362.767 312.125 362.574 312.192 362.411 cv
312.687 362.61 313.184 362.79 313.509 362.858 cv
313.403 363.136 313.103 363.327 312.806 363.327 cv
.94902 .941176 .964706 rgb
f
313.509 362.858 mo
313.184 362.79 312.687 362.61 312.192 362.411 cv
312.303 362.141 312.598 361.955 312.89 361.955 cv
313.11 361.955 313.327 362.06 313.462 362.313 cv
313.568 362.51 313.571 362.698 313.509 362.858 cv
.835294 .815686 .980392 rgb
f
357.006 287.663 mo
355.871 287.662 354.98 286.045 356.13 285.165 cv
356.399 284.959 356.677 284.872 356.941 284.872 cv
358.077 284.872 358.968 286.489 357.818 287.369 cv
357.549 287.575 357.271 287.663 357.006 287.663 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
302.807 336.905 mo
301.993 336.904 301.195 336.476 300.866 335.472 cv
300.329 333.832 301.701 332.694 303.029 332.694 cv
303.843 332.694 304.641 333.123 304.97 334.127 cv
305.507 335.767 304.135 336.905 302.807 336.905 cv
1 1 1 rgb
f
311.326 312.849 mo
310.107 312.849 309.022 312.132 308.364 311.135 cv
309.38 307.123 li
312.254 305.761 li
312.927 305.992 313.52 306.438 313.968 307.003 cv
313.114 308.303 313.545 309.852 314.531 310.826 cv
314.281 311.339 313.877 311.814 313.288 312.211 cv
312.625 312.657 311.958 312.849 311.326 312.849 cv
.921569 .905882 .941176 rgb
f
308.364 311.135 mo
307.376 309.639 307.346 307.512 309.259 306.224 cv
309.922 305.778 310.59 305.586 311.221 305.586 cv
311.58 305.586 311.926 305.648 312.254 305.761 cv
309.38 307.123 li
308.364 311.135 li
.972549 1 1 rgb
f
266.866 310.822 mo
265.376 309.101 li
265.418 309.089 265.46 309.078 265.502 309.068 cv
266.327 310.119 266.866 310.822 266.866 310.822 cv
.921569 .905882 .941176 rgb
f
266.815 315.724 mo
266.043 314.78 264.843 314.319 263.638 314.319 cv
263.552 314.319 263.468 314.321 263.383 314.326 cv
263.152 313.971 262.978 313.547 262.879 313.051 cv
262.84 312.854 262.816 312.662 262.806 312.478 cv
269.178 314.411 li
268.605 315.128 267.733 315.583 266.815 315.724 cv
266.866 310.822 mo
263.146 310.822 li
263.596 309.952 264.437 309.359 265.376 309.101 cv
266.866 310.822 li
266.866 310.822 li
.862745 .819608 .905882 rgb
f
269.178 314.411 mo
262.806 312.478 li
262.772 311.85 262.901 311.295 263.146 310.822 cv
266.866 310.822 li
266.866 310.822 li
266.866 310.822 266.327 310.119 265.502 309.068 cv
265.813 308.993 266.133 308.955 266.452 308.955 cv
267.939 308.955 269.398 309.792 269.774 311.675 cv
269.998 312.798 269.725 313.725 269.178 314.411 cv
.972549 1 1 rgb
f
289.13 293.962 mo
288.126 293.962 287.087 293.12 287.461 291.873 cv
287.7 291.077 288.326 290.736 288.966 290.736 cv
289.971 290.736 291.009 291.577 290.635 292.825 cv
290.396 293.621 289.77 293.962 289.13 293.962 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
316.717 311.779 mo
315.895 311.779 315.116 311.404 314.531 310.826 cv
315.148 309.56 314.815 308.07 313.968 307.003 cv
314.119 306.772 314.311 306.549 314.548 306.339 cv
315.177 305.78 315.856 305.543 316.508 305.543 cv
318.96 305.543 321.038 308.885 318.677 310.983 cv
318.048 311.543 317.369 311.779 316.717 311.779 cv
.921569 .905882 .941176 rgb
f
314.531 310.826 mo
313.545 309.852 313.114 308.303 313.968 307.003 cv
314.815 308.07 315.148 309.56 314.531 310.826 cv
.94902 .937255 .960784 rgb
f
238.929 304.499 mo
238.333 304.499 237.723 303.903 238.075 303.21 cv
238.246 302.873 238.531 302.733 238.82 302.733 cv
239.416 302.733 240.027 303.329 239.674 304.023 cv
239.503 304.359 239.218 304.499 238.929 304.499 cv
.988235 .984314 .992157 rgb
f
261.156 321.48 mo
260.258 320.877 259.612 319.88 259.535 318.471 cv
259.392 315.853 261.352 314.436 263.383 314.326 cv
264.026 315.318 265.106 315.772 266.201 315.772 cv
266.406 315.772 266.612 315.756 266.815 315.724 cv
267.19 316.182 267.464 316.753 267.589 317.441 cv
261.156 321.48 li
.862745 .819608 .905882 rgb
f
263.555 322.179 mo
262.703 322.179 261.854 321.949 261.156 321.48 cv
267.589 317.441 li
267.623 317.628 267.647 317.824 267.658 318.028 cv
267.806 320.755 265.673 322.179 263.555 322.179 cv
.972549 1 1 rgb
f
266.201 315.772 mo
265.106 315.772 264.026 315.318 263.383 314.326 cv
263.468 314.321 263.552 314.319 263.638 314.319 cv
264.843 314.319 266.043 314.78 266.815 315.724 cv
266.612 315.756 266.406 315.772 266.201 315.772 cv
.909804 .882353 .941176 rgb
f
213.608 294.659 mo
212.863 294.659 212.578 293.466 213.404 293.21 cv
213.486 293.185 213.564 293.174 213.637 293.174 cv
214.381 293.174 214.667 294.366 213.84 294.622 cv
213.759 294.647 213.681 294.659 213.608 294.659 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
148.237 422.657 mo
143.929 422.657 141.981 415.801 146.774 414.035 cv
147.336 413.828 147.873 413.734 148.377 413.734 cv
152.685 413.734 154.633 420.59 149.841 422.356 cv
149.278 422.563 148.742 422.657 148.237 422.657 cv
.909804 .886274 .941176 rgb
f
197.271 296.106 mo
196.605 296.105 195.941 295.368 196.418 294.64 cv
196.613 294.342 196.886 294.218 197.158 294.218 cv
197.824 294.218 198.488 294.956 198.011 295.684 cv
197.816 295.982 197.543 296.106 197.271 296.106 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
215.621 311.703 mo
214.216 311.703 212.775 310.312 213.59 308.67 cv
213.991 307.862 214.673 307.525 215.364 307.525 cv
216.769 307.525 218.21 308.916 217.396 310.558 cv
216.995 311.367 216.312 311.703 215.621 311.703 cv
.94902 .941176 .964706 rgb
f
190.783 361.34 mo
189.946 361.34 189.125 360.864 188.932 359.802 cv
188.677 358.398 189.807 357.569 190.911 357.569 cv
191.747 357.569 192.569 358.045 192.761 359.107 cv
193.017 360.511 191.887 361.34 190.783 361.34 cv
.862745 .819608 .905882 rgb
f
190.466 430.305 mo
188.157 430.305 185.783 428.051 187.081 425.334 cv
187.736 423.965 188.881 423.394 190.043 423.394 cv
192.352 423.394 194.726 425.649 193.428 428.366 cv
192.774 429.735 191.628 430.306 190.466 430.305 cv
1 1 1 rgb
f
235.455 331.914 mo
234.648 331.914 233.856 331.458 233.66 330.435 cv
233.396 329.061 234.504 328.242 235.586 328.242 cv
236.393 328.242 237.185 328.698 237.381 329.721 cv
237.644 331.095 236.536 331.914 235.455 331.914 cv
.909804 .886274 .941176 rgb
f
156.312 340.234 mo
154.558 340.233 153.702 337.458 155.65 336.675 cv
155.898 336.575 156.136 336.53 156.36 336.53 cv
158.113 336.53 158.97 339.305 157.022 340.089 cv
156.774 340.189 156.536 340.234 156.312 340.234 cv
.94902 .941176 .964706 rgb
f
34.0578 255.668 mo
30.4428 255.668 26.7175 252.222 28.6429 247.925 cv
29.6502 245.676 31.508 244.737 33.3959 244.737 cv
37.0109 244.737 40.7362 248.182 38.8106 252.48 cv
37.8034 254.728 35.9457 255.668 34.0578 255.668 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
137.156 342.493 mo
136.373 342.493 135.567 341.881 135.788 340.893 cv
135.945 340.188 136.491 339.879 137.048 339.879 cv
137.831 339.879 138.637 340.491 138.416 341.479 cv
138.259 342.183 137.713 342.493 137.156 342.493 cv
.94902 .941176 .964706 rgb
f
163.892 381.892 mo
161.187 381.892 158.391 379.416 159.696 376.148 cv
160.423 374.327 161.9 373.561 163.405 373.561 cv
166.11 373.561 168.906 376.037 167.601 379.305 cv
166.874 381.126 165.397 381.892 163.892 381.892 cv
.921569 .905882 .941176 rgb
f
173.941 374.553 mo
170.865 374.552 169.296 369.704 172.707 368.263 cv
173.164 368.07 173.602 367.983 174.013 367.983 cv
174.837 367.983 175.553 368.331 176.094 368.868 cv
174.116 369.348 li
176.068 373.793 li
175.835 373.978 175.562 374.14 175.247 374.273 cv
174.79 374.466 174.352 374.553 173.941 374.553 cv
.94902 .941176 .964706 rgb
f
176.068 373.793 mo
174.116 369.348 li
176.094 368.868 li
177.385 370.151 177.68 372.513 176.068 373.793 cv
.980392 1 1 rgb
f
26.4197 327.331 mo
23.6367 327.331 20.8079 324.445 22.5775 321.271 cv
23.387 319.819 24.6485 319.217 25.9196 319.217 cv
28.7026 319.217 31.5315 322.104 29.7619 325.277 cv
28.9523 326.729 27.6909 327.331 26.4197 327.331 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
105.925 386.494 mo
104.551 386.494 103.136 385.178 103.876 383.548 cv
104.26 382.701 104.961 382.347 105.673 382.347 cv
107.047 382.347 108.463 383.663 107.723 385.293 cv
107.339 386.14 106.638 386.494 105.925 386.494 cv
.909804 .886274 .941176 rgb
f
75.8157 309.72 mo
72.5385 309.72 69.1488 306.929 70.4356 302.877 cv
71.2368 300.355 73.2298 299.278 75.2667 299.278 cv
78.5439 299.278 81.9336 302.069 80.6467 306.121 cv
79.8455 308.643 77.8526 309.721 75.8157 309.72 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
204.606 32.2272 mo
202.398 32.227 200.208 30.8774 200.005 28.0414 cv
199.779 24.8713 202.267 23.1912 204.731 23.1912 cv
206.94 23.1912 209.13 24.5409 209.332 27.3769 cv
209.558 30.5471 207.071 32.2274 204.606 32.2272 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
105.194 371.226 mo
102.304 371.226 99.6401 367.809 101.476 364.947 cv
108.381 364.947 li
109.361 366.354 109.538 368.28 108.032 369.906 cv
107.17 370.837 106.169 371.227 105.194 371.226 cv
.862745 .819608 .905882 rgb
f
108.381 364.947 mo
101.476 364.947 li
101.617 364.727 101.784 364.511 101.979 364.3 cv
102.842 363.369 103.842 362.98 104.818 362.98 cv
106.223 362.98 107.574 363.788 108.381 364.947 cv
.972549 1 1 rgb
f
641.385 34.771 mo
640.332 34.7709 639.293 34.1508 639.123 32.8042 cv
638.916 31.1658 640.217 30.2514 641.496 30.2514 cv
642.549 30.2514 643.588 30.8717 643.758 32.2183 cv
643.965 33.8567 642.665 34.7712 641.385 34.771 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
624.65 52.8348 mo
623.935 52.8347 623.213 52.0786 623.685 51.2744 cv
623.894 50.9186 624.208 50.7713 624.523 50.7713 cv
625.237 50.7713 625.959 51.5274 625.487 52.3317 cv
625.279 52.6875 624.965 52.8348 624.65 52.8348 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
586.407 39.8768 mo
584.385 39.8765 584.285 36.7018 586.354 36.6165 cv
586.381 36.6154 586.408 36.6148 586.435 36.6148 cv
588.457 36.6148 588.558 39.7898 586.488 39.8751 cv
586.461 39.8763 586.434 39.8768 586.407 39.8768 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
510.172 32.355 mo
509.187 32.355 508.186 31.9416 507.374 30.9478 cv
505.03 28.0778 507.735 24.6411 510.574 24.6411 cv
511.559 24.6411 512.56 25.0545 513.372 26.0482 cv
515.716 28.9182 513.011 32.355 510.172 32.355 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
592.669 98.6419 mo
591.615 98.6417 590.93 97.0408 592.069 96.3899 cv
592.272 96.2736 592.472 96.2227 592.66 96.2227 cv
593.714 96.2227 594.399 97.8238 593.261 98.4747 cv
593.057 98.591 592.858 98.6419 592.669 98.6419 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
631.985 67.6341 mo
628.894 67.634 626.557 63.1586 629.745 60.8694 cv
630.447 60.3646 631.164 60.1477 631.845 60.1477 cv
634.936 60.1477 637.272 64.6233 634.086 66.9125 cv
633.383 67.4173 632.666 67.6341 631.985 67.6341 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
637.838 98.8462 mo
635.621 98.846 633.328 96.9579 634.199 94.2173 cv
634.741 92.512 636.089 91.7836 637.466 91.7836 cv
639.683 91.7836 641.976 93.6719 641.104 96.4124 cv
640.562 98.1178 639.215 98.8463 637.838 98.8462 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
612.374 32.5019 mo
608.714 32.5014 605.032 28.5589 607.527 24.4814 cv
608.6 22.7286 610.165 22.003 611.736 22.003 cv
615.396 22.003 619.078 25.946 616.583 30.0234 cv
615.511 31.7762 613.945 32.5021 612.374 32.5019 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
579.903 121.569 mo
578.731 121.569 577.525 121.108 576.474 120.008 cv
573.03 116.402 576.512 111.47 580.349 111.47 cv
581.521 111.47 582.727 111.931 583.778 113.032 cv
587.222 116.637 583.74 121.57 579.903 121.569 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
645.606 94.205 mo
645.105 94.2049 644.595 93.8486 644.671 93.2071 cv
644.734 92.6719 645.146 92.4249 645.563 92.4249 cv
646.064 92.4249 646.574 92.7812 646.498 93.4227 cv
646.435 93.958 646.023 94.2051 645.606 94.205 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
565.784 84.0291 mo
563.571 84.0291 561.297 81.8581 562.554 79.2595 cv
563.182 77.9596 564.273 77.4183 565.378 77.4183 cv
567.592 77.4183 569.866 79.5893 568.609 82.1878 cv
567.98 83.4877 566.89 84.0292 565.784 84.0291 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
533.882 105.646 mo
533.13 105.646 532.353 105.009 532.643 104.078 cv
532.825 103.494 533.286 103.244 533.757 103.244 cv
534.509 103.244 535.286 103.88 534.997 104.811 cv
534.815 105.396 534.353 105.646 533.882 105.646 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
585.451 68.7195 mo
583.828 68.7192 583.187 66.12 584.991 65.5454 cv
585.174 65.4869 585.349 65.4602 585.514 65.4602 cv
587.137 65.4602 587.779 68.0596 585.974 68.6343 cv
585.791 68.6927 585.616 68.7195 585.451 68.7195 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
543.27 53.1783 mo
538.055 53.1782 536.721 44.7915 542.42 43.6322 cv
542.793 43.5563 543.15 43.5206 543.49 43.5206 cv
548.705 43.5206 550.038 51.9075 544.34 53.0668 cv
543.967 53.1426 543.61 53.1783 543.27 53.1783 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
530.736 58.3242 mo
529.448 58.3242 528.905 56.2663 530.338 55.7772 cv
530.494 55.7239 530.643 55.6996 530.783 55.6996 cv
532.071 55.6996 532.614 57.7576 531.181 58.2467 cv
531.025 58.2999 530.876 58.3242 530.736 58.3242 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
529.098 74.079 mo
528.439 74.079 527.789 73.6923 527.677 72.8498 cv
527.541 71.8156 528.363 71.235 529.171 71.235 cv
529.83 71.235 530.48 71.6218 530.591 72.4644 cv
530.728 73.4985 529.906 74.0791 529.098 74.079 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
486.069 92.3765 mo
485.482 92.3764 484.906 92.0754 484.634 91.3624 cv
484.156 90.1093 485.22 89.1832 486.251 89.1832 cv
486.838 89.1832 487.414 89.4843 487.686 90.1973 cv
488.164 91.4504 487.099 92.3767 486.069 92.3765 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
460.228 85.1557 mo
457.026 85.1554 453.888 81.4669 456.331 78.0743 cv
457.265 76.7765 458.497 76.2388 459.72 76.2388 cv
462.922 76.2388 466.06 79.9276 463.617 83.3202 cv
462.683 84.618 461.451 85.1558 460.228 85.1557 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
425.647 68.4664 mo
424.414 68.4664 423.345 66.8153 424.507 65.7258 cv
424.831 65.4219 425.187 65.2939 425.53 65.2939 cv
426.763 65.2939 427.833 66.945 426.671 68.0345 cv
426.347 68.3384 425.991 68.4664 425.647 68.4664 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
478.882 70.3391 mo
474.764 70.3387 470.9 65.2447 474.393 61.1774 cv
475.559 59.8199 476.959 59.2545 478.332 59.2545 cv
482.45 59.2545 486.314 64.3489 482.82 68.4162 cv
481.654 69.7737 480.254 70.3392 478.882 70.3391 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
452.326 55.5592 mo
450.158 55.5591 449.037 52.145 451.441 51.114 cv
451.768 50.974 452.081 50.9112 452.375 50.9112 cv
454.544 50.9112 455.664 54.3256 453.26 55.3563 cv
452.934 55.4964 452.621 55.5592 452.326 55.5592 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
390.816 44.2581 mo
387.776 44.2579 385.146 40.1776 388.019 37.502 cv
388.816 36.7599 389.689 36.4471 390.531 36.4471 cv
393.571 36.4471 396.201 40.5277 393.328 43.2031 cv
392.532 43.9453 391.658 44.2581 390.816 44.2581 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
373.977 84.1066 mo
372.709 84.1065 371.462 83.4719 370.806 81.9575 cv
369.573 79.1104 372.027 76.8758 374.407 76.8758 cv
375.675 76.8758 376.921 77.5104 377.577 79.0248 cv
378.811 81.8719 376.356 84.1067 373.977 84.1066 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
370.879 72.8373 mo
368.456 72.8372 365.969 70.9763 366.596 67.9101 cv
367.055 65.6643 368.792 64.6696 370.563 64.6696 cv
372.985 64.6696 375.473 66.5306 374.846 69.5969 cv
374.386 71.8427 372.65 72.8374 370.879 72.8373 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
360.832 56.5121 mo
358.346 56.5118 356.84 52.685 359.555 51.2689 cv
360 51.037 360.432 50.9347 360.839 50.9347 cv
363.324 50.9347 364.83 54.7621 362.115 56.1779 cv
361.671 56.4099 361.238 56.5122 360.832 56.5121 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
332.102 95.2993 mo
330.194 95.2993 330.059 92.2899 332.03 92.1763 cv
332.067 92.1742 332.103 92.1732 332.139 92.1732 cv
334.047 92.1732 334.181 95.1825 332.21 95.2962 cv
332.174 95.2983 332.137 95.2993 332.102 95.2993 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
328.764 86.2498 mo
327.974 86.2498 327.188 85.3745 327.754 84.5123 cv
327.985 84.1596 328.308 84.0136 328.631 84.0136 cv
329.42 84.0136 330.206 84.889 329.641 85.751 cv
329.409 86.1037 329.086 86.2498 328.764 86.2498 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
341.798 57.5854 mo
338.789 57.585 336.69 53.1034 339.882 51.0818 cv
340.509 50.6845 341.134 50.5122 341.724 50.5122 cv
344.733 50.5122 346.832 54.9941 343.64 57.0159 cv
343.013 57.4131 342.388 57.5855 341.798 57.5854 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
373.7 93.7253 mo
372.66 93.7253 371.763 92.3268 372.748 91.4145 cv
373.02 91.1625 373.317 91.0563 373.604 91.0563 cv
374.644 91.0563 375.541 92.4547 374.556 93.3672 cv
374.284 93.6191 373.987 93.7253 373.7 93.7253 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
337.102 71.8066 mo
334.398 71.8062 334.147 67.524 336.966 67.312 cv
337.034 67.3069 337.101 67.3044 337.166 67.3044 cv
339.872 67.3044 340.122 71.5872 337.303 71.799 cv
337.234 71.8041 337.168 71.8066 337.102 71.8066 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
306.36 62.7968 mo
300.349 62.796 299.844 53.293 306.087 52.8655 cv
306.225 52.8561 306.36 52.8515 306.492 52.8515 cv
312.503 52.8515 313.009 62.3554 306.765 62.7827 cv
306.627 62.7922 306.493 62.7968 306.36 62.7968 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
282.853 27.2526 mo
279.333 27.2521 276.373 22.4342 279.78 19.4502 cv
280.676 18.6652 281.639 18.3332 282.563 18.3332 cv
286.082 18.3332 289.042 23.1517 285.635 26.1355 cv
284.739 26.9205 283.777 27.2527 282.853 27.2526 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
248.921 66.6199 mo
248.088 66.6198 247.346 65.5299 248.108 64.7664 cv
248.333 64.5411 248.586 64.4466 248.832 64.4466 cv
249.665 64.4466 250.407 65.5366 249.644 66.3001 cv
249.42 66.5254 249.167 66.6199 248.921 66.6199 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
269.807 58.1164 mo
268.705 58.1163 267.597 57.3874 267.643 55.9693 cv
267.687 54.6196 268.73 53.9618 269.777 53.9618 cv
270.88 53.9618 271.988 54.6908 271.941 56.109 cv
271.897 57.4586 270.855 58.1164 269.807 58.1164 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
248.673 30.9712 mo
246.58 30.9711 244.415 29.107 245.355 26.5551 cv
245.901 25.0734 247.09 24.4472 248.303 24.4472 cv
250.396 24.4472 252.561 26.3114 251.62 28.8635 cv
251.074 30.3451 249.886 30.9713 248.673 30.9712 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
229.515 86.8979 mo
228.459 86.8979 227.42 86.2839 227.225 84.9373 cv
226.981 83.2521 228.324 82.2939 229.643 82.2939 cv
230.698 82.2939 231.737 82.9079 231.932 84.2545 cv
232.177 85.9397 230.833 86.898 229.515 86.8979 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
198.16 94.6193 mo
195.35 94.619 193.82 90.2219 196.924 88.8047 cv
197.372 88.6002 197.803 88.509 198.208 88.509 cv
201.018 88.509 202.548 92.9062 199.444 94.3236 cv
198.996 94.5281 198.565 94.6193 198.16 94.6193 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
195.126 70.5635 mo
193.707 70.5633 192.304 69.8765 191.467 68.2258 cv
189.74 64.8207 192.734 61.9083 195.656 61.9083 cv
197.076 61.9083 198.478 62.5953 199.315 64.246 cv
201.042 67.6511 198.049 70.5638 195.126 70.5635 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
231.829 62.5587 mo
229.646 62.5584 227.479 61.2186 227.296 58.414 cv
227.093 55.3072 229.527 53.6694 231.942 53.6694 cv
234.125 53.6694 236.292 55.0093 236.475 57.814 cv
236.678 60.9209 234.244 62.5589 231.829 62.5587 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
143.723 59.7548 mo
142.398 59.7546 141.787 57.6489 143.26 57.093 cv
143.437 57.0263 143.606 56.9961 143.765 56.9961 cv
145.09 56.9961 145.702 59.1017 144.228 59.6579 cv
144.051 59.7246 143.882 59.7548 143.723 59.7548 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
164.333 88.9575 mo
163.021 88.9574 161.735 88.2631 161.22 86.6403 cv
160.392 84.0288 162.572 82.2376 164.681 82.2376 cv
165.994 82.2376 167.279 82.932 167.794 84.5549 cv
168.622 87.1662 166.442 88.9576 164.333 88.9575 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
196.654 57.4028 mo
196.639 57.4028 196.624 57.4027 196.61 57.4023 cv
194.774 57.3566 194.833 54.5307 196.638 54.5307 cv
196.652 54.5307 196.667 54.5309 196.682 54.5313 cv
198.517 54.577 198.458 57.4029 196.654 57.4028 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
107.029 116.036 mo
102.966 116.036 99.9867 110.083 104.227 107.184 cv
105.121 106.573 106.024 106.309 106.879 106.309 cv
110.942 106.309 113.922 112.262 109.681 115.161 cv
108.787 115.773 107.885 116.036 107.029 116.036 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
118.523 32.2562 mo
115.649 32.256 113.582 28.016 116.602 26.013 cv
117.222 25.6026 117.843 25.4252 118.431 25.4252 cv
121.306 25.4252 123.373 29.6654 120.352 31.6683 cv
119.733 32.0788 119.111 32.2562 118.523 32.2562 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
113.896 75.2204 mo
111.65 75.2203 109.396 73.749 109.456 70.8584 cv
109.515 68.0577 111.681 66.681 113.854 66.681 cv
116.1 66.681 118.354 68.1525 118.294 71.043 cv
118.235 73.8437 116.069 75.2204 113.896 75.2204 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
118.989 88.4205 mo
114.582 88.4203 110.994 82.2664 115.36 78.683 cv
116.445 77.7929 117.588 77.4145 118.681 77.4145 cv
123.087 77.4145 126.676 83.5687 122.31 87.1518 cv
121.225 88.042 120.082 88.4205 118.989 88.4205 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
97.9546 123.872 mo
95.1099 123.872 93.8621 119.336 97.0276 118.209 cv
97.387 118.081 97.7298 118.022 98.0523 118.022 cv
100.897 118.022 102.145 122.558 98.9791 123.686 cv
98.6197 123.814 98.2771 123.872 97.9546 123.872 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
108.533 62.3812 mo
106.492 62.3809 104.522 59.9589 106.151 57.8521 cv
106.742 57.0885 107.49 56.7717 108.228 56.7717 cv
110.27 56.7717 112.24 59.1941 110.61 61.3008 cv
110.02 62.0644 109.272 62.3813 108.533 62.3812 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
92.1893 102.098 mo
91.1351 102.098 90.1029 101.525 89.7529 100.206 cv
89.2296 98.2343 90.8522 96.9589 92.4258 96.9589 cv
93.48 96.9589 94.5122 97.5314 94.8622 98.8505 cv
95.3855 100.822 93.7628 102.098 92.1893 102.098 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
145.855 31.9156 mo
143.37 31.9156 140.969 28.9756 142.945 26.4049 cv
143.664 25.4689 144.578 25.0805 145.481 25.0805 cv
147.966 25.0805 150.367 28.0206 148.392 30.5912 cv
147.673 31.5271 146.758 31.9156 145.855 31.9156 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
20.686 100.519 mo
18.8417 100.519 16.9686 99.216 17.23 96.8538 cv
17.4505 94.8611 18.9831 93.9376 20.5366 93.9376 cv
22.3808 93.9376 24.254 95.2403 23.9926 97.6023 cv
23.772 99.5949 22.2392 100.519 20.686 100.519 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
45.0909 116.562 mo
44.1823 116.562 43.2593 115.617 43.8401 114.583 cv
44.1047 114.112 44.5148 113.917 44.9279 113.917 cv
45.8365 113.917 46.7595 114.862 46.1785 115.896 cv
45.914 116.367 45.504 116.562 45.0909 116.562 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
42.5769 55.8504 mo
38.8927 55.8496 36.3303 50.3568 40.2424 47.8906 cv
41.0078 47.4081 41.7701 47.1986 42.4897 47.1986 cv
46.1744 47.1986 48.7367 52.6919 44.8243 55.1583 cv
44.0586 55.641 43.2967 55.8506 42.5769 55.8504 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
65.1965 27.2798 mo
63.8916 27.2796 62.5857 26.6869 61.6595 25.2566 cv
59.4115 21.7848 62.57 18.306 65.732 18.306 cv
67.0369 18.306 68.3429 18.899 69.269 20.3293 cv
71.5171 23.801 68.3587 27.2802 65.1965 27.2798 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
619.943 200.17 mo
618.755 200.17 617.553 199.657 616.618 198.42 cv
614.073 195.055 617.207 191.268 620.435 191.268 cv
621.624 191.268 622.826 191.781 623.761 193.018 cv
626.306 196.383 623.172 200.171 619.943 200.17 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
615.003 224.766 mo
614.717 224.766 614.438 224.612 614.341 224.255 cv
614.195 223.718 614.638 223.368 615.068 223.368 cv
615.353 223.368 615.633 223.522 615.729 223.879 cv
615.875 224.416 615.432 224.766 615.003 224.766 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
460.121 36.6779 mo
457.549 36.6777 454.917 34.7616 455.475 31.4889 cv
455.905 28.9675 457.848 27.8343 459.827 27.8343 cv
462.399 27.8343 465.031 29.7507 464.473 33.0235 cv
464.043 35.5448 462.1 36.6781 460.121 36.6779 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
606.617 108.97 mo
601.682 108.969 599.668 101.074 605.158 99.2658 cv
605.735 99.0758 606.285 98.9889 606.803 98.9889 cv
611.739 98.9889 613.752 106.885 608.262 108.693 cv
607.685 108.883 607.135 108.97 606.617 108.97 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
549.581 251.635 mo
549.316 251.635 549.034 251.586 548.738 251.481 cv
546.139 250.548 547.175 246.834 549.506 246.834 cv
549.771 246.834 550.054 246.883 550.349 246.989 cv
552.948 247.921 551.912 251.635 549.581 251.635 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
477.117 170.688 mo
474.836 170.688 472.559 169.24 472.501 166.305 cv
472.501 166.305 li
472.501 166.305 li
472.881 167.005 473.486 167.295 474.096 167.295 cv
475.409 167.296 476.747 165.952 475.929 164.444 cv
475.549 163.744 474.943 163.453 474.333 163.453 cv
473.904 163.453 473.472 163.596 473.114 163.842 cv
473.958 162.443 475.554 161.737 477.148 161.737 cv
479.43 161.737 481.707 163.184 481.765 166.12 cv
481.826 169.151 479.469 170.688 477.117 170.688 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
474.096 167.295 mo
473.486 167.295 472.881 167.005 472.501 166.305 cv
472.501 166.305 li
472.481 165.328 472.713 164.507 473.114 163.842 cv
473.472 163.596 473.904 163.453 474.333 163.453 cv
474.943 163.453 475.549 163.744 475.929 164.444 cv
476.747 165.952 475.409 167.296 474.096 167.295 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
539.791 291.444 mo
537.661 291.444 535.484 289.294 536.768 286.829 cv
537.381 285.651 538.387 285.161 539.403 285.161 cv
541.533 285.161 543.71 287.311 542.427 289.776 cv
541.813 290.954 540.808 291.444 539.791 291.444 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
531.203 257.573 mo
528.157 257.573 525.477 253.541 528.306 250.798 cv
529.118 250.01 530.021 249.679 530.894 249.679 cv
533.94 249.679 536.621 253.711 533.792 256.455 cv
532.979 257.242 532.077 257.573 531.203 257.573 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
571.871 262.555 mo
570.334 262.555 569.631 260.111 571.341 259.473 cv
571.544 259.397 571.738 259.363 571.92 259.363 cv
573.457 259.363 574.16 261.807 572.45 262.445 cv
572.247 262.521 572.053 262.555 571.871 262.555 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
490.198 255.354 mo
486.284 255.354 484.829 249.073 489.174 247.777 cv
489.589 247.653 489.984 247.596 490.357 247.596 cv
494.271 247.596 495.726 253.877 491.381 255.173 cv
490.966 255.297 490.571 255.354 490.198 255.354 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
509.002 289.888 mo
507.853 289.888 506.705 289.459 505.79 288.455 cv
506.227 288.29 506.61 287.947 506.839 287.384 cv
507.454 285.869 506.155 284.712 504.898 284.712 cv
504.749 284.712 504.6 284.728 504.456 284.762 cv
504.701 282.284 507.14 280.355 509.575 280.355 cv
510.982 280.355 512.388 280.999 513.366 282.553 cv
515.696 286.253 512.344 289.888 509.002 289.888 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
624.821 235.716 mo
622.171 235.716 619.431 233.351 620.627 230.123 cv
621.32 228.253 622.821 227.464 624.352 227.464 cv
627.002 227.464 629.742 229.828 628.545 233.057 cv
627.853 234.926 626.352 235.716 624.821 235.716 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
505.126 288.572 mo
503.869 288.572 502.57 287.415 503.186 285.9 cv
503.452 285.243 503.928 284.885 504.456 284.762 cv
504.364 285.685 504.578 286.685 505.211 287.689 cv
505.39 287.974 505.584 288.229 505.79 288.455 cv
505.577 288.534 505.352 288.572 505.126 288.572 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
505.79 288.455 mo
505.584 288.229 505.39 287.974 505.211 287.689 cv
504.578 286.685 504.364 285.685 504.456 284.762 cv
504.6 284.728 504.749 284.712 504.898 284.712 cv
506.155 284.712 507.454 285.869 506.839 287.384 cv
506.61 287.947 506.227 288.29 505.79 288.455 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
514.089 260.238 mo
513.33 260.238 512.56 259.442 513.052 258.581 cv
513.273 258.194 513.612 258.033 513.954 258.033 cv
514.713 258.033 515.483 258.829 514.991 259.69 cv
514.769 260.078 514.43 260.238 514.089 260.238 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
470.161 285.415 mo
467.7 285.415 465.19 283.632 465.628 280.487 cv
465.981 277.948 467.935 276.789 469.92 276.789 cv
472.382 276.789 474.892 278.572 474.454 281.716 cv
474.101 284.256 472.147 285.415 470.161 285.415 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
467.681 315.22 mo
462.952 311.565 li
463.158 311.361 463.407 311.176 463.704 311.018 cv
464.19 310.758 464.664 310.644 465.11 310.644 cv
467.289 310.644 468.786 313.374 467.681 315.22 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
465.11 316.666 mo
462.713 316.666 461.142 313.362 462.952 311.565 cv
467.681 315.22 li
467.432 315.636 467.051 316.007 466.517 316.292 cv
466.03 316.552 465.556 316.666 465.11 316.666 cv
1 1 1 rgb
f
429.03 191.487 mo
422.119 191.486 421.905 180.677 428.919 180.492 cv
428.978 180.491 429.037 180.49 429.095 180.49 cv
436.006 180.49 436.22 191.301 429.207 191.485 cv
429.147 191.486 429.089 191.487 429.03 191.487 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
349.868 232.879 mo
346.916 232.879 343.864 230.415 344.947 226.745 cv
345.643 224.387 347.496 223.374 349.39 223.374 cv
352.342 223.374 355.393 225.838 354.31 229.508 cv
353.614 231.866 351.762 232.879 349.868 232.879 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
517.535 184.82 mo
514.866 184.82 512.109 182.625 513.039 179.294 cv
513.649 177.105 515.363 176.16 517.115 176.16 cv
519.784 176.16 522.541 178.356 521.612 181.686 cv
521.001 183.875 519.287 184.82 517.535 184.82 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
424.573 283.883 mo
421.643 283.883 418.654 280.888 420.464 277.519 cv
421.313 275.94 422.671 275.285 424.042 275.285 cv
426.972 275.285 429.961 278.28 428.151 281.649 cv
427.302 283.228 425.944 283.883 424.573 283.883 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
345.088 286.608 mo
341.006 286.608 339.924 280.041 344.393 279.1 cv
344.696 279.036 344.985 279.006 345.261 279.006 cv
349.343 279.006 350.424 285.573 345.956 286.515 cv
345.653 286.578 345.364 286.608 345.088 286.608 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
383.934 252.877 mo
380.045 252.877 378.698 246.628 383.006 245.435 cv
383.388 245.329 383.752 245.28 384.096 245.28 cv
387.985 245.28 389.332 251.529 385.024 252.722 cv
384.642 252.828 384.278 252.877 383.934 252.877 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
387.394 288.993 mo
384.861 288.993 383.805 284.944 386.624 283.995 cv
386.927 283.893 387.215 283.846 387.487 283.846 cv
390.02 283.846 391.076 287.894 388.258 288.844 cv
387.955 288.946 387.666 288.993 387.394 288.993 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
289.66 283.607 mo
288.74 283.607 287.837 283.135 287.409 282.017 cv
286.657 280.051 288.329 278.597 289.945 278.597 cv
290.866 278.597 291.769 279.069 292.196 280.187 cv
292.948 282.152 291.277 283.607 289.66 283.607 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
332.381 212.781 mo
331.374 212.78 330.563 211.367 331.566 210.559 cv
331.812 210.361 332.069 210.277 332.314 210.277 cv
333.321 210.277 334.133 211.691 333.129 212.499 cv
332.884 212.697 332.627 212.781 332.381 212.781 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
312.33 243.486 mo
311.684 243.486 311.214 242.538 311.889 242.082 cv
312.03 241.987 312.172 241.946 312.307 241.946 cv
312.952 241.946 313.422 242.893 312.747 243.35 cv
312.606 243.445 312.464 243.486 312.33 243.486 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
294.345 250.868 mo
293.5 250.868 292.672 250.409 292.39 249.352 cv
291.968 247.768 293.271 246.742 294.536 246.742 cv
295.381 246.742 296.209 247.201 296.491 248.258 cv
296.913 249.842 295.609 250.868 294.345 250.868 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
279.858 244.028 mo
278.973 244.028 278.94 242.641 279.841 242.613 cv
279.85 242.612 279.859 242.612 279.868 242.612 cv
280.753 242.612 280.787 243.999 279.885 244.027 cv
279.876 244.027 279.867 244.028 279.858 244.028 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
234.912 201.824 mo
234.513 201.824 234.102 201.516 234.207 201.011 cv
234.283 200.642 234.569 200.479 234.859 200.479 cv
235.259 200.479 235.669 200.787 235.564 201.292 cv
235.488 201.66 235.203 201.824 234.912 201.824 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
205.936 207.429 mo
205.546 207.429 205.157 207.251 204.885 206.821 cv
204.236 205.795 205.166 204.784 206.095 204.784 cv
206.484 204.784 206.873 204.962 207.145 205.391 cv
207.794 206.417 206.864 207.429 205.936 207.429 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
195.357 261.602 mo
194.206 261.602 193.049 260.842 193.094 259.361 cv
193.137 257.947 194.23 257.256 195.328 257.256 cv
196.479 257.256 197.636 258.016 197.591 259.497 cv
197.548 260.912 196.455 261.602 195.357 261.602 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
200.909 241.878 mo
198.992 241.878 197.01 240.243 197.766 237.875 cv
198.236 236.404 199.399 235.776 200.587 235.776 cv
202.503 235.776 204.485 237.411 203.729 239.779 cv
203.259 241.25 202.097 241.878 200.909 241.878 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
256.155 184.582 mo
251.003 184.582 248.794 176.359 254.526 174.366 cv
255.162 174.145 255.767 174.045 256.338 174.045 cv
261.489 174.045 263.699 182.268 257.967 184.261 cv
257.331 184.482 256.725 184.582 256.155 184.582 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
245.129 182.617 mo
243.306 182.616 241.882 180.015 243.733 178.608 cv
244.162 178.282 244.605 178.143 245.028 178.143 cv
246.851 178.143 248.275 180.745 246.424 182.151 cv
245.995 182.477 245.551 182.617 245.129 182.617 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
180.752 228.127 mo
176.07 228.126 173.401 220.845 178.552 218.357 cv
179.336 217.978 180.094 217.81 180.806 217.81 cv
185.487 217.81 188.157 225.092 183.006 227.58 cv
182.221 227.959 181.464 228.127 180.752 228.127 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
121.489 284.43 mo
118.465 284.43 115.731 280.527 118.449 277.699 cv
119.277 276.837 120.223 276.476 121.143 276.476 cv
124.167 276.476 126.9 280.379 124.182 283.208 cv
123.354 284.069 122.408 284.43 121.489 284.43 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
64.9076 264.162 mo
63.5366 264.162 62.1831 262.608 63.202 261.136 cv
63.6033 260.556 64.1449 260.316 64.6839 260.316 cv
66.0548 260.316 67.4084 261.87 66.3895 263.342 cv
65.9882 263.922 65.4466 264.162 64.9076 264.162 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
84.2703 158.201 mo
83.3024 158.201 82.3166 157.206 82.9214 156.097 cv
83.2021 155.582 83.6468 155.368 84.0953 155.368 cv
85.0631 155.368 86.049 156.363 85.4444 157.472 cv
85.1636 157.987 84.7189 158.201 84.2703 158.201 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
102.817 248.776 mo
101.363 248.776 99.8776 247.71 100.16 245.856 cv
100.384 244.388 101.514 243.722 102.664 243.722 cv
104.118 243.722 105.603 244.788 105.32 246.643 cv
105.097 248.111 103.966 248.777 102.817 248.776 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
99.101 275.412 mo
95.8463 275.412 92.4818 272.441 94.0428 268.505 cv
94.9158 266.304 96.6982 265.379 98.5153 265.379 cv
101.77 265.379 105.135 268.35 103.574 272.286 cv
102.701 274.487 100.918 275.412 99.101 275.412 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
52.7468 264.918 mo
51.5233 264.403 50.5534 263.313 50.37 261.59 cv
50.0547 258.629 52.3945 257.008 54.702 257.008 cv
54.9122 257.008 55.122 257.022 55.3296 257.049 cv
54.6962 257.235 54.0624 257.571 53.4502 258.085 cv
51.0387 260.109 51.2833 262.959 52.7468 264.918 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
54.5313 265.268 mo
53.9173 265.268 53.3055 265.153 52.7468 264.918 cv
51.2833 262.959 51.0387 260.109 53.4502 258.085 cv
54.0624 257.571 54.6962 257.235 55.3296 257.049 cv
57.0566 257.274 58.6248 258.446 58.8633 260.686 cv
59.1786 263.647 56.8388 265.268 54.5313 265.268 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
60.6262 149.489 mo
60.0581 149.489 59.4842 149.102 59.5355 148.372 cv
59.5815 147.717 60.086 147.405 60.5952 147.405 cv
61.1633 147.405 61.7372 147.793 61.686 148.523 cv
61.64 149.178 61.1354 149.489 60.6262 149.489 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
73.4577 139.799 mo
68.2963 139.799 67.4614 131.55 72.9705 130.837 cv
73.2003 130.808 73.4226 130.793 73.6375 130.793 cv
78.7987 130.793 79.6336 139.042 74.1247 139.755 cv
73.8949 139.785 73.6726 139.799 73.4577 139.799 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
16.0209 200.312 mo
10.2008 200.311 9.09734 190.985 15.36 190.038 cv
15.6652 189.992 15.9584 189.97 16.2415 189.97 cv
22.0616 189.97 23.1648 199.298 16.9024 200.244 cv
16.5972 200.29 16.304 200.312 16.0209 200.312 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
15.7517 148.903 mo
13.88 148.903 11.9557 147.081 13.0011 144.876 cv
13.5302 143.76 14.4626 143.295 15.4084 143.295 cv
17.2802 143.295 19.2044 145.117 18.1589 147.322 cv
17.6299 148.438 16.6975 148.903 15.7517 148.903 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
160.191 186.034 mo
158.835 186.034 158.012 183.947 159.492 183.173 cv
159.735 183.046 159.972 182.99 160.194 182.99 cv
161.55 182.99 162.373 185.077 160.893 185.851 cv
160.65 185.978 160.413 186.034 160.191 186.034 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
181.268 193.047 mo
179.293 193.047 177.261 191.13 178.358 188.8 cv
178.916 187.616 179.904 187.122 180.906 187.122 cv
182.881 187.122 184.913 189.04 183.816 191.37 cv
183.258 192.554 182.271 193.048 181.268 193.047 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
138.676 174.786 mo
136.575 174.786 134.421 173.189 134.936 170.526 cv
135.319 168.543 136.851 167.66 138.412 167.66 cv
140.513 167.66 142.667 169.257 142.152 171.921 cv
141.769 173.904 140.237 174.787 138.676 174.786 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
168.779 191.519 mo
165.622 191.519 162.397 188.316 164.319 184.672 cv
165.231 182.943 166.71 182.226 168.205 182.226 cv
171.363 182.226 174.587 185.429 172.665 189.074 cv
171.753 190.802 170.274 191.519 168.779 191.519 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
38.5713 172.307 mo
35.4138 172.307 32.1888 169.104 34.1113 165.459 cv
35.0229 163.731 36.5024 163.013 37.9971 163.013 cv
41.1546 163.013 44.3794 166.216 42.4569 169.861 cv
41.5454 171.589 40.066 172.307 38.5713 172.307 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
125.854 222.622 mo
120.676 222.622 119.034 214.292 124.751 212.847 cv
125.215 212.729 125.656 212.675 126.076 212.675 cv
131.254 212.675 132.896 221.006 127.179 222.451 cv
126.715 222.568 126.273 222.622 125.854 222.622 cv
level3{
gsave
clp
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48966e-008 1000 -1000 4.48966e-008 330.328 -157.609 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
410.887 513.447 mo
408.609 513.447 408.003 509.783 410.497 509.255 cv
410.667 509.219 410.829 509.202 410.984 509.202 cv
413.262 509.202 413.868 512.866 411.374 513.394 cv
411.204 513.43 411.042 513.447 410.887 513.447 cv
.996078 1 1 rgb
f
486.456 680.402 mo
485.712 680.402 484.948 680.107 484.287 679.403 cv
482.151 677.127 484.343 674.063 486.742 674.063 cv
487.486 674.063 488.25 674.358 488.911 675.063 cv
491.046 677.338 488.855 680.402 486.456 680.402 cv
.941176 1 1 rgb
f
614.489 522.193 mo
613.322 522.192 612.164 521.592 611.748 520.333 cv
617.131 520.776 li
616.6 521.706 615.541 522.193 614.489 522.193 cv
f
617.131 520.776 mo
611.748 520.333 li
611.674 520.107 611.623 519.859 611.601 519.589 cv
611.434 517.577 613.016 516.5 614.581 516.5 cv
615.959 516.5 617.324 517.336 617.47 519.104 cv
617.524 519.764 617.391 520.323 617.131 520.776 cv
.819608 .94902 1 rgb
f
465.145 609.237 mo
464.473 609.237 463.814 608.859 463.643 608.009 cv
463.41 606.851 464.346 606.153 465.259 606.153 cv
465.931 606.153 466.59 606.531 466.761 607.381 cv
466.994 608.539 466.058 609.237 465.145 609.237 cv
.984314 .996078 1 rgb
f
421.434 508.469 mo
420.356 508.469 419.299 507.915 418.805 506.604 cv
417.942 504.315 419.885 502.633 421.764 502.633 cv
422.842 502.633 423.899 503.187 424.393 504.498 cv
425.255 506.787 423.313 508.469 421.434 508.469 cv
1 1 1 rgb
f
592.533 586.926 mo
591.074 586.926 589.606 585.957 589.678 584.08 cv
589.746 582.31 591.112 581.451 592.486 581.451 cv
593.945 581.451 595.413 582.421 595.341 584.298 cv
595.273 586.068 593.906 586.927 592.533 586.926 cv
.819608 .94902 1 rgb
f
447.847 512.866 mo
447.694 512.866 447.531 512.837 447.361 512.774 cv
445.925 512.236 446.52 510.188 447.808 510.188 cv
447.961 510.188 448.123 510.217 448.294 510.28 cv
449.73 510.818 449.136 512.866 447.847 512.866 cv
.960784 1 1 rgb
f
472.15 492.576 mo
471.649 492.576 471.152 492.337 470.841 491.763 cv
470.17 490.526 471.267 489.425 472.343 489.425 cv
472.844 489.425 473.34 489.664 473.652 490.239 cv
474.323 491.475 473.226 492.576 472.15 492.576 cv
f
452.431 545.696 mo
450.598 545.696 450.536 542.828 452.398 542.775 cv
452.416 542.774 452.432 542.774 452.449 542.774 cv
454.283 542.774 454.344 545.643 452.481 545.696 cv
452.464 545.696 452.447 545.696 452.431 545.696 cv
.819608 .94902 1 rgb
f
430.367 543.516 mo
430.331 543.516 430.294 543.515 430.257 543.514 cv
426.592 543.399 426.738 537.769 430.327 537.769 cv
430.364 537.769 430.4 537.77 430.437 537.771 cv
434.102 537.886 433.956 543.516 430.367 543.516 cv
.882353 .968627 1 rgb
f
433.284 550.944 mo
432.575 550.944 431.852 550.426 431.987 549.522 cv
432.094 548.802 432.648 548.475 433.211 548.475 cv
433.92 548.475 434.644 548.993 434.509 549.898 cv
434.402 550.618 433.848 550.945 433.284 550.944 cv
f
432.239 441.371 mo
432.082 441.371 431.917 441.357 431.746 441.327 cv
428.745 440.793 429.371 436.359 432.129 436.359 cv
432.287 436.359 432.451 436.373 432.622 436.404 cv
435.624 436.938 434.998 441.372 432.239 441.371 cv
.607843 .6 .827451 rgb
f
481.271 510.058 mo
480.927 510.058 480.563 510.01 480.182 509.906 cv
479.749 509.789 479.373 509.621 479.049 509.415 cv
482.762 509.721 li
482.321 509.935 481.821 510.058 481.271 510.058 cv
477.697 507.759 mo
476.824 505.472 478.325 502.332 481.109 502.332 cv
481.452 502.332 481.817 502.38 482.198 502.483 cv
483.839 502.929 484.679 504.095 484.882 505.382 cv
482.521 506.155 480.119 506.95 477.697 507.759 cv
.960784 1 1 rgb
f
482.762 509.721 mo
479.049 509.415 li
478.388 508.994 477.945 508.411 477.697 507.759 cv
480.119 506.95 482.521 506.155 484.882 505.382 cv
485.147 507.07 484.318 508.965 482.762 509.721 cv
.882353 .968627 1 rgb
f
405.705 568.427 mo
403.543 568.427 402.469 565.011 404.869 564.027 cv
405.182 563.899 405.48 563.841 405.761 563.841 cv
407.923 563.841 408.997 567.258 406.597 568.241 cv
406.285 568.369 405.986 568.427 405.705 568.427 cv
f
559.861 501.838 mo
559.633 501.838 559.409 501.721 559.304 501.444 cv
559.119 500.959 559.532 500.6 559.931 500.6 cv
560.159 500.6 560.382 500.717 560.488 500.994 cv
560.673 501.479 560.26 501.838 559.861 501.838 cv
.819608 .94902 1 rgb
f
523.972 538.678 mo
522.857 538.678 521.917 537.155 522.994 536.206 cv
523.278 535.955 523.585 535.849 523.879 535.849 cv
524.994 535.849 525.934 537.373 524.857 538.321 cv
524.573 538.572 524.266 538.678 523.972 538.678 cv
.882353 .968627 1 rgb
f
557.343 565.637 mo
556.136 565.636 554.888 564.584 555.398 563.103 cv
555.705 562.215 556.412 561.837 557.134 561.837 cv
558.341 561.837 559.589 562.89 559.078 564.371 cv
558.772 565.259 558.065 565.637 557.343 565.637 cv
1 1 1 rgb
f
396.033 554.817 mo
394.202 554.817 392.391 552.749 393.744 550.776 cv
394.28 549.995 395.008 549.671 395.733 549.671 cv
397.564 549.671 399.375 551.739 398.022 553.711 cv
397.486 554.493 396.758 554.817 396.033 554.817 cv
.882353 .968627 1 rgb
f
488.224 494.913 mo
486.682 494.913 485.172 494.062 484.716 492.121 cv
484.065 489.346 486.33 487.611 488.531 487.611 cv
490.072 487.611 491.583 488.462 492.039 490.403 cv
492.69 493.178 490.425 494.913 488.224 494.913 cv
.941176 1 1 rgb
f
503.705 560.295 mo
503.569 560.295 503.424 560.264 503.273 560.192 cv
502.265 559.714 502.782 558.292 503.694 558.292 cv
503.831 558.292 503.976 558.324 504.126 558.395 cv
505.134 558.873 504.618 560.295 503.705 560.295 cv
.882353 .968627 1 rgb
f
464.24 619.201 mo
461.701 619.201 461.334 615.152 464.029 614.839 cv
464.13 614.827 464.228 614.822 464.323 614.822 cv
466.861 614.822 467.229 618.871 464.533 619.184 cv
464.432 619.196 464.335 619.201 464.24 619.201 cv
1 1 1 rgb
f
444.491 510.821 mo
443.732 510.821 442.975 510.471 442.456 509.626 cv
441.243 507.65 443.026 505.742 444.799 505.742 cv
445.558 505.742 446.315 506.092 446.834 506.937 cv
448.047 508.913 446.264 510.821 444.491 510.821 cv
f
459.115 520.702 mo
459.001 520.702 458.882 520.693 458.76 520.676 cv
456.091 520.294 456.545 516.32 459.025 516.32 cv
459.139 516.32 459.258 516.328 459.38 516.345 cv
462.048 516.728 461.595 520.702 459.115 520.702 cv
.941176 1 1 rgb
f
452.322 528.634 mo
452.632 528.568 452.949 528.534 453.265 528.534 cv
453.488 528.534 453.71 528.551 453.928 528.586 cv
453.394 528.602 452.854 528.618 452.322 528.634 cv
.960784 1 1 rgb
f
452.911 536.268 mo
451.322 536.268 449.765 535.403 449.241 533.413 cv
448.565 530.844 450.306 529.064 452.322 528.634 cv
452.854 528.618 453.394 528.602 453.928 528.586 cv
455.27 528.798 456.485 529.677 456.935 531.388 cv
457.716 534.354 455.277 536.268 452.911 536.268 cv
.882353 .968627 1 rgb
f
423.779 500.495 mo
423.459 500.495 423.122 500.392 422.793 500.153 cv
421.313 499.076 422.412 497.003 423.849 497.003 cv
424.169 497.003 424.506 497.106 424.835 497.345 cv
426.315 498.422 425.217 500.495 423.779 500.495 cv
.960784 1 1 rgb
f
559.932 801.099 mo
559.248 801.099 558.989 800.003 559.748 799.772 cv
559.822 799.75 559.893 799.739 559.959 799.739 cv
560.642 799.739 560.902 800.835 560.142 801.066 cv
560.068 801.089 559.998 801.099 559.932 801.099 cv
.996078 1 1 rgb
f
528.54 606.341 mo
526.929 606.341 525.305 605.254 525.425 603.183 cv
525.534 601.288 526.995 600.381 528.466 600.381 cv
530.078 600.381 531.702 601.468 531.582 603.539 cv
531.473 605.434 530.012 606.341 528.54 606.341 cv
.882353 .968627 1 rgb
f
370.131 519.279 mo
369.373 519.279 368.574 519.042 367.787 518.49 cv
364.126 515.924 366.759 510.799 370.282 510.799 cv
371.04 510.799 371.839 511.036 372.626 511.588 cv
376.287 514.154 373.654 519.279 370.131 519.279 cv
1 1 1 rgb
f
500.757 564.345 mo
500.641 564.345 500.52 564.33 500.393 564.297 cv
498.833 563.899 499.29 561.633 500.698 561.633 cv
500.813 561.633 500.935 561.648 501.062 561.681 cv
502.621 562.079 502.164 564.345 500.757 564.345 cv
.984314 .996078 1 rgb
f
524.488 638.353 mo
524.231 637.538 523.428 636.881 522.567 636.881 cv
522.266 636.881 521.957 636.962 521.662 637.144 cv
521.113 635.736 522.398 634.19 523.805 634.19 cv
524.301 634.19 524.812 634.382 525.263 634.839 cv
526.51 636.102 525.728 637.788 524.488 638.353 cv
.960784 1 1 rgb
f
523.621 638.548 mo
523.126 638.547 522.615 638.356 522.164 637.899 cv
521.927 637.659 521.763 637.404 521.662 637.144 cv
521.957 636.962 522.266 636.881 522.567 636.881 cv
523.428 636.881 524.231 637.538 524.488 638.353 cv
524.215 638.477 523.921 638.548 523.621 638.548 cv
.976471 1 1 rgb
f
469.677 505.778 mo
469.379 505.778 469.061 505.709 468.732 505.553 cv
466.518 504.506 467.648 501.381 469.653 501.381 cv
469.951 501.381 470.269 501.451 470.598 501.606 cv
472.813 502.653 471.683 505.778 469.677 505.778 cv
.941176 1 1 rgb
f
462.559 556.611 mo
462.559 556.611 li
461.66 555.967 462.319 554.708 463.188 554.708 cv
463.369 554.708 463.559 554.763 463.746 554.889 cv
463.26 555.305 462.849 555.873 462.559 556.611 cv
1 1 1 rgb
f
589.397 797.687 mo
589.336 797.687 589.271 797.681 589.205 797.668 cv
588.11 797.46 588.354 795.848 589.356 795.848 cv
589.417 795.848 589.482 795.854 589.548 795.866 cv
590.643 796.075 590.399 797.687 589.397 797.687 cv
.941176 1 1 rgb
f
591.132 790.553 mo
587.423 790.553 585.473 784.725 589.579 782.927 cv
590.149 782.677 590.695 782.566 591.209 782.566 cv
594.917 782.566 596.868 788.394 592.761 790.192 cv
592.192 790.442 591.645 790.553 591.132 790.553 cv
.960784 1 1 rgb
f
414.316 806.081 mo
414.206 806.081 414.095 806.073 413.985 806.059 cv
414.854 805.87 415.687 805.356 416.353 804.422 cv
416.114 805.572 415.224 806.081 414.316 806.081 cv
f
409.175 712.331 mo
407.766 712.331 406.582 710.402 407.947 709.209 cv
408.305 708.896 408.69 708.763 409.059 708.763 cv
410.468 708.763 411.651 710.692 410.287 711.885 cv
409.929 712.199 409.544 712.332 409.175 712.331 cv
.941176 1 1 rgb
f
387.196 696.936 mo
385.783 696.936 384.346 695.469 385.245 693.857 cv
385.656 693.12 386.296 692.814 386.942 692.814 cv
388.356 692.814 389.793 694.281 388.894 695.892 cv
388.483 696.63 387.842 696.936 387.196 696.936 cv
f
405.794 704.788 mo
403.528 704.788 401.19 702.953 401.934 700.115 cv
402.435 698.205 403.925 697.376 405.449 697.376 cv
407.714 697.376 410.052 699.211 409.308 702.048 cv
408.807 703.959 407.317 704.788 405.794 704.788 cv
f
399.596 622.583 mo
399.337 622.583 399.06 622.536 398.771 622.433 cv
396.213 621.521 397.227 617.865 399.521 617.865 cv
399.781 617.865 400.057 617.912 400.347 618.015 cv
402.905 618.927 401.89 622.584 399.596 622.583 cv
.819608 .94902 1 rgb
f
276.838 771.24 mo
275.411 771.24 274.015 770.485 273.458 768.721 cv
272.563 765.888 274.927 763.948 277.214 763.948 cv
278.641 763.948 280.037 764.704 280.594 766.468 cv
281.489 769.3 279.125 771.24 276.838 771.24 cv
1 1 1 rgb
f
482.034 688.152 mo
481.985 688.152 481.935 688.151 481.885 688.149 cv
477.437 687.993 477.634 681.167 481.981 681.167 cv
482.03 681.167 482.08 681.168 482.13 681.17 cv
486.578 681.326 486.382 688.153 482.034 688.152 cv
.960784 1 1 rgb
f
399.996 645.763 mo
399.226 645.763 398.546 645.405 398.049 644.866 cv
398.221 644.887 398.393 644.898 398.566 644.898 cv
399.772 644.898 400.986 644.366 401.903 643.084 cv
402.197 642.673 402.408 642.258 402.546 641.846 cv
403.073 643.075 402.848 644.614 401.323 645.415 cv
400.863 645.656 400.416 645.763 399.996 645.763 cv
.996078 1 1 rgb
f
492.9 735.8 mo
491.27 735.8 489.635 734.734 489.674 732.636 cv
489.713 730.597 491.29 729.593 492.872 729.593 cv
494.503 729.593 496.138 730.659 496.098 732.757 cv
496.06 734.796 494.482 735.8 492.9 735.8 cv
1 1 1 rgb
f
496.434 661.362 mo
495.847 661.362 495.269 660.691 495.712 660.064 cv
495.883 659.821 496.112 659.72 496.34 659.72 cv
496.927 659.72 497.505 660.392 497.062 661.018 cv
496.891 661.261 496.662 661.362 496.434 661.362 cv
.941176 1 1 rgb
f
555.158 649.584 mo
553.192 649.583 551.696 646.744 553.718 645.277 cv
554.168 644.95 554.628 644.81 555.065 644.81 cv
557.031 644.81 558.527 647.65 556.505 649.117 cv
556.055 649.443 555.595 649.584 555.158 649.584 cv
f
473.526 782.85 mo
472.426 782.85 471.29 781.84 471.825 780.513 cv
472.121 779.777 472.719 779.468 473.328 779.468 cv
474.428 779.468 475.564 780.477 475.029 781.805 cv
474.733 782.541 474.135 782.85 473.526 782.85 cv
.960784 1 1 rgb
f
622.658 474.59 mo
620.785 473.258 619.769 470.719 621.481 468.307 cv
622.437 466.961 623.707 466.404 624.969 466.404 cv
628.239 466.404 631.453 470.15 628.981 473.632 cv
628.772 473.926 628.548 474.183 628.312 474.404 cv
626.519 474.436 624.639 474.496 622.658 474.59 cv
.996078 1 1 rgb
f
625.493 475.535 mo
624.488 475.535 623.489 475.182 622.658 474.59 cv
624.639 474.496 626.519 474.436 628.312 474.404 cv
627.47 475.195 626.479 475.535 625.493 475.535 cv
.984314 .996078 1 rgb
f
569.894 631.652 mo
567.162 631.651 564.36 628.941 565.949 625.751 cv
566.73 624.183 568.053 623.531 569.394 623.531 cv
572.126 623.531 574.928 626.242 573.339 629.432 cv
572.558 631 571.235 631.652 569.894 631.652 cv
.996078 1 1 rgb
f
466.813 562.398 mo
464.084 562.397 461.262 559.915 462.559 556.611 cv
462.559 556.611 li
462.756 556.752 462.957 556.812 463.148 556.812 cv
464.018 556.812 464.676 555.554 463.777 554.91 cv
463.767 554.903 463.757 554.895 463.746 554.889 cv
464.486 554.255 465.399 553.971 466.323 553.971 cv
469.053 553.971 471.874 556.453 470.578 559.758 cv
469.848 561.616 468.346 562.398 466.813 562.398 cv
1 1 1 rgb
f
463.148 556.812 mo
462.957 556.812 462.756 556.752 462.559 556.611 cv
462.849 555.873 463.26 555.305 463.746 554.889 cv
463.757 554.895 463.767 554.903 463.777 554.91 cv
464.676 555.554 464.018 556.812 463.148 556.812 cv
f
543.28 755.32 mo
542.461 755.32 541.656 754.908 541.244 753.924 cv
540.485 752.111 542.042 750.711 543.551 750.711 cv
544.37 750.711 545.175 751.124 545.586 752.107 cv
546.346 753.921 544.788 755.321 543.28 755.32 cv
.960784 1 1 rgb
f
531.014 714.384 mo
528.894 714.384 526.75 712.137 528.153 709.751 cv
528.773 708.696 529.703 708.259 530.639 708.259 cv
532.759 708.259 534.903 710.506 533.499 712.893 cv
532.879 713.948 531.949 714.385 531.014 714.384 cv
.996078 1 1 rgb
f
439.261 568.158 mo
434.973 568.158 434.232 561.297 438.824 560.663 cv
439.028 560.635 439.225 560.621 439.416 560.621 cv
443.704 560.621 444.445 567.482 439.853 568.117 cv
439.649 568.145 439.451 568.158 439.261 568.158 cv
.819608 .94902 1 rgb
f
414.259 538.284 mo
413.972 538.284 413.673 538.181 413.396 537.936 cv
412.347 537.01 413.266 535.53 414.351 535.53 cv
414.638 535.53 414.937 535.634 415.214 535.879 cv
416.262 536.805 415.344 538.284 414.259 538.284 cv
f
390.062 612.053 mo
388.603 612.053 387.173 611.251 386.727 609.417 cv
386.082 606.761 388.253 605.086 390.363 605.086 cv
391.822 605.086 393.251 605.888 393.697 607.722 cv
394.343 610.377 392.171 612.053 390.062 612.053 cv
1 1 1 rgb
f
415.292 396.812 mo
413.044 396.812 411.717 393.334 414.181 392.091 cv
414.572 391.894 414.951 391.807 415.307 391.807 cv
417.555 391.807 418.882 395.285 416.418 396.528 cv
416.027 396.725 415.648 396.812 415.292 396.812 cv
.607843 .6 .827451 rgb
f
378.986 563.363 mo
377.835 563.363 376.82 562.568 376.342 561.543 cv
376.593 561.088 376.539 560.449 376.056 560.143 cv
376.094 559.394 376.451 558.65 377.248 558.082 cv
377.794 557.692 378.351 557.524 378.879 557.524 cv
381.294 557.524 383.112 561.027 380.617 562.806 cv
380.07 563.196 379.514 563.363 378.986 563.363 cv
.819608 .94902 1 rgb
f
376.342 561.543 mo
376.138 561.103 376.032 560.622 376.056 560.143 cv
376.539 560.449 376.593 561.088 376.342 561.543 cv
1 1 1 rgb
f
622.991 797.642 mo
622.037 797.642 621.078 797.222 620.356 796.208 cv
618.477 793.572 620.91 790.738 623.386 790.738 cv
624.339 790.738 625.299 791.158 626.021 792.171 cv
627.9 794.808 625.467 797.642 622.991 797.642 cv
.941176 1 1 rgb
f
404.993 731.331 mo
403.057 731.331 401.137 730.142 400.979 727.656 cv
400.804 724.909 402.955 723.463 405.09 723.463 cv
407.025 723.463 408.945 724.652 409.104 727.138 cv
409.279 729.885 407.127 731.331 404.993 731.331 cv
1 1 1 rgb
f
425.968 737.934 mo
425.126 737.934 424.279 737.56 423.651 736.658 cv
422.044 734.35 424.166 731.911 426.317 731.911 cv
427.159 731.911 428.006 732.285 428.634 733.188 cv
430.241 735.496 428.119 737.934 425.968 737.934 cv
.941176 1 1 rgb
f
306.347 823.161 mo
305.023 823.161 303.719 822.39 303.476 820.7 cv
303.172 818.589 304.855 817.391 306.506 817.391 cv
307.83 817.391 309.134 818.162 309.377 819.852 cv
309.68 821.963 307.998 823.161 306.347 823.161 cv
1 1 1 rgb
f
520.419 653.903 mo
518.062 653.903 516.707 650.243 519.297 648.978 cv
519.696 648.783 520.081 648.697 520.443 648.697 cv
522.8 648.697 524.155 652.357 521.565 653.622 cv
521.166 653.817 520.781 653.903 520.419 653.903 cv
f
426.748 685.777 mo
424.753 685.777 422.787 684.608 422.447 682.059 cv
422.029 678.925 424.521 677.164 426.969 677.164 cv
428.964 677.164 430.93 678.334 431.27 680.882 cv
431.688 684.016 429.196 685.778 426.748 685.777 cv
.996078 1 1 rgb
f
537.843 731.002 mo
537.765 731.002 537.684 731 537.604 730.997 cv
532.209 730.745 532.523 722.496 537.761 722.496 cv
537.84 722.496 537.92 722.498 538 722.501 cv
543.395 722.753 543.081 731.003 537.843 731.002 cv
.941176 1 1 rgb
f
384.073 474.086 mo
383.525 472.387 382.065 470.97 380.144 470.97 cv
379.623 470.97 379.068 471.074 378.488 471.305 cv
378.28 471.388 378.085 471.481 377.903 471.582 cv
377.458 469.252 378.862 466.491 381.735 466.491 cv
381.916 466.491 382.103 466.502 382.295 466.524 cv
386.461 467.016 386.733 472.219 384.073 474.086 cv
.984314 .996078 1 rgb
f
381.889 474.749 mo
381.708 474.749 381.521 474.738 381.328 474.715 cv
379.303 474.476 378.198 473.124 377.903 471.582 cv
378.085 471.481 378.28 471.388 378.488 471.305 cv
379.068 471.074 379.623 470.97 380.144 470.97 cv
382.065 470.97 383.525 472.387 384.073 474.086 cv
383.485 474.499 382.753 474.749 381.889 474.749 cv
.988235 .996078 1 rgb
f
439.236 661.982 mo
438.373 661.982 437.483 661.649 436.695 660.856 cv
434.027 658.169 436.638 654.365 439.555 654.365 cv
439.753 654.365 439.952 654.382 440.151 654.419 cv
440.322 655.778 441.626 656.62 442.898 656.622 cv
444.058 659.131 441.762 661.982 439.236 661.982 cv
.960784 1 1 rgb
f
610.514 713.388 mo
609.938 713.388 609.346 712.947 609.493 712.218 cv
609.601 711.681 610.016 711.442 610.439 711.442 cv
611.016 711.442 611.607 711.884 611.46 712.613 cv
611.352 713.15 610.937 713.389 610.514 713.388 cv
f
482.133 776.282 mo
481.998 776.282 481.855 776.261 481.705 776.216 cv
480.752 775.93 480.572 774.985 480.893 774.284 cv
481.197 774.095 481.468 773.847 481.688 773.54 cv
481.809 773.5 481.939 773.478 482.078 773.478 cv
482.213 773.478 482.356 773.499 482.506 773.544 cv
484.078 774.015 483.545 776.282 482.133 776.282 cv
1 1 1 rgb
f
441.919 684.539 mo
441.172 684.539 441.102 683.355 441.881 683.296 cv
441.9 683.294 441.919 683.294 441.937 683.294 cv
442.684 683.294 442.754 684.477 441.975 684.537 cv
441.956 684.538 441.937 684.539 441.919 684.539 cv
.960784 1 1 rgb
f
456.068 628.813 mo
455.582 628.813 455.08 628.406 455.26 627.802 cv
455.375 627.416 455.679 627.25 455.989 627.25 cv
456.475 627.25 456.978 627.657 456.797 628.261 cv
456.682 628.647 456.378 628.813 456.068 628.813 cv
1 1 1 rgb
f
623.116 537.317 mo
619.25 537.316 616.269 531.767 620.219 528.833 cv
621.117 528.165 622.039 527.88 622.916 527.88 cv
626.782 527.88 629.763 533.43 625.814 536.364 cv
624.916 537.031 623.993 537.317 623.116 537.317 cv
.984314 .996078 1 rgb
f
554.934 789.39 mo
553.157 789.39 551.418 788.432 550.799 786.217 cv
549.854 782.836 552.646 780.615 555.353 780.615 cv
557.129 780.615 558.868 781.573 559.488 783.788 cv
560.432 787.169 557.64 789.39 554.934 789.39 cv
.960784 1 1 rgb
f
439.342 543.648 mo
436.467 543.648 434.664 539.248 437.789 537.545 cv
438.323 537.254 438.844 537.126 439.335 537.126 cv
442.21 537.126 444.013 541.526 440.888 543.229 cv
440.354 543.52 439.833 543.648 439.342 543.648 cv
.882353 .968627 1 rgb
f
459.556 446.452 mo
459.109 446.452 458.8 445.786 459.275 445.488 cv
459.367 445.43 459.459 445.405 459.546 445.405 cv
459.992 445.405 460.302 446.072 459.827 446.369 cv
459.734 446.427 459.643 446.452 459.556 446.452 cv
.607843 .6 .827451 rgb
f
472.579 545.128 mo
471.511 545.128 470.406 544.199 470.855 542.887 cv
471.125 542.097 471.753 541.762 472.395 541.762 cv
473.462 541.762 474.567 542.691 474.119 544.003 cv
473.849 544.793 473.22 545.128 472.579 545.128 cv
.984314 .996078 1 rgb
f
528.118 515.581 mo
527.847 515.581 527.56 515.548 527.261 515.476 cv
525.893 515.146 525.138 514.233 524.887 513.187 cv
530.945 513.685 li
530.451 514.757 529.462 515.581 528.118 515.581 cv
1 1 1 rgb
f
530.945 513.685 mo
524.887 513.187 li
524.422 511.25 525.68 508.857 527.971 508.857 cv
528.242 508.857 528.529 508.891 528.828 508.963 cv
531.241 509.544 531.747 511.942 530.945 513.685 cv
f
614.399 529.095 mo
613.933 529.095 613.446 528.931 612.987 528.547 cv
611.168 527.022 612.692 524.464 614.538 524.464 cv
614.768 524.464 615.004 524.504 615.238 524.591 cv
615.277 524.932 615.455 525.265 615.819 525.524 cv
616.071 525.704 616.328 525.787 616.573 525.796 cv
617.28 527.28 615.954 529.095 614.399 529.095 cv
.819608 .94902 1 rgb
f
472.211 523.675 mo
471.28 523.675 470.361 523.221 469.826 522.132 cv
468.743 519.928 470.672 518.077 472.553 518.077 cv
473.484 518.077 474.403 518.531 474.938 519.62 cv
476.021 521.824 474.092 523.675 472.211 523.675 cv
.960784 1 1 rgb
f
490.92 519.467 mo
490.55 519.467 490.184 519.287 489.966 518.856 cv
489.518 517.968 490.297 517.211 491.059 517.211 cv
491.429 517.211 491.795 517.391 492.013 517.822 cv
492.462 518.709 491.682 519.467 490.92 519.467 cv
f
582.295 547.203 mo
581.644 547.203 580.975 546.946 580.394 546.332 cv
578.503 544.336 580.429 541.626 582.544 541.626 cv
583.195 541.626 583.864 541.883 584.445 542.496 cv
586.336 544.493 584.41 547.203 582.295 547.203 cv
1 1 1 rgb
f
610.013 625.024 mo
608.172 623.393 608.193 619.7 611.31 618.923 cv
611.632 618.843 611.939 618.805 612.231 618.805 cv
615.339 618.805 616.628 623.061 614.459 624.947 cv
613.952 624.246 613.166 623.929 612.367 623.929 cv
611.472 623.929 610.562 624.326 610.013 625.024 cv
.960784 1 1 rgb
f
460.372 511.022 mo
459.742 511.022 459.084 510.797 458.471 510.265 cv
456.113 508.22 458.147 504.897 460.57 504.897 cv
461.201 504.897 461.858 505.122 462.471 505.654 cv
464.829 507.699 462.796 511.022 460.372 511.022 cv
f
616.618 525.797 mo
616.603 525.797 616.588 525.797 616.573 525.796 cv
616.44 525.518 616.237 525.252 615.95 525.012 cv
615.718 524.817 615.478 524.679 615.238 524.591 cv
615.146 523.781 615.837 522.93 616.672 522.93 cv
616.931 522.93 617.204 523.012 617.472 523.202 cv
618.7 524.077 617.805 525.797 616.618 525.797 cv
.882353 .968627 1 rgb
f
616.573 525.796 mo
616.328 525.787 616.071 525.704 615.819 525.524 cv
615.455 525.265 615.277 524.932 615.238 524.591 cv
615.478 524.679 615.718 524.817 615.95 525.012 cv
616.237 525.252 616.44 525.518 616.573 525.796 cv
.92549 .980392 1 rgb
f
597.153 615.728 mo
596.991 615.728 596.821 615.672 596.661 615.538 cv
596.021 615.006 596.554 614.107 597.201 614.107 cv
597.364 614.107 597.533 614.164 597.694 614.297 cv
598.333 614.829 597.801 615.728 597.153 615.728 cv
.960784 1 1 rgb
f
479.139 774.765 mo
477.359 774.765 475.545 773.476 475.862 771.203 cv
476.117 769.367 477.53 768.529 478.965 768.529 cv
480.745 768.529 482.559 769.818 482.242 772.091 cv
482.162 772.672 481.965 773.153 481.688 773.54 cv
481.325 773.66 481.05 773.943 480.893 774.284 cv
480.373 774.609 479.758 774.765 479.139 774.765 cv
.941176 1 1 rgb
f
480.893 774.284 mo
481.05 773.943 481.325 773.66 481.688 773.54 cv
481.468 773.847 481.197 774.095 480.893 774.284 cv
1 1 1 rgb
f
447.221 630.569 mo
444.698 630.569 442.089 628.265 443.3 625.214 cv
443.977 623.508 445.359 622.791 446.767 622.791 cv
449.291 622.791 451.9 625.095 450.688 628.146 cv
450.011 629.852 448.63 630.569 447.221 630.569 cv
.984314 .996078 1 rgb
f
575.203 739.419 mo
574.587 739.419 573.937 739.232 573.291 738.799 cv
570.16 736.7 572.327 732.318 575.308 732.318 cv
575.924 732.318 576.575 732.505 577.221 732.938 cv
580.352 735.037 578.184 739.419 575.203 739.419 cv
.941176 1 1 rgb
f
535.773 482.937 mo
535.457 482.937 535.121 482.887 534.77 482.78 cv
531.156 481.675 532.403 476.47 535.648 476.47 cv
535.964 476.47 536.3 476.52 536.651 476.627 cv
536.861 476.691 537.054 476.769 537.231 476.859 cv
535.622 477.92 534.123 478.968 532.749 480 cv
538.381 477.884 li
539.605 479.805 538.29 482.937 535.773 482.937 cv
.960784 1 1 rgb
f
532.749 480 mo
534.123 478.968 535.622 477.92 537.231 476.859 cv
537.74 477.116 538.119 477.472 538.381 477.884 cv
532.749 480 li
.882353 .968627 1 rgb
f
381.721 627.496 mo
381.532 627.496 381.335 627.48 381.13 627.445 cv
377.326 626.805 378.079 621.174 381.585 621.174 cv
381.774 621.174 381.972 621.19 382.177 621.225 cv
385.981 621.865 385.227 627.496 381.721 627.496 cv
f
612.126 629.253 mo
611.029 629.253 609.954 628.656 609.596 627.282 cv
609.357 626.364 609.564 625.594 610.013 625.024 cv
610.551 625.501 611.249 625.801 612.075 625.801 cv
612.366 625.801 612.673 625.764 612.995 625.684 cv
613.595 625.534 614.08 625.277 614.459 624.947 cv
614.649 625.21 614.799 625.526 614.897 625.9 cv
615.429 627.941 613.752 629.253 612.126 629.253 cv
.960784 1 1 rgb
f
612.075 625.801 mo
611.249 625.801 610.551 625.501 610.013 625.024 cv
610.562 624.326 611.472 623.929 612.367 623.929 cv
613.166 623.929 613.952 624.246 614.459 624.947 cv
614.08 625.277 613.595 625.534 612.995 625.684 cv
612.673 625.764 612.366 625.801 612.075 625.801 cv
.984314 1 1 rgb
f
408.272 629.461 mo
406.65 629.46 404.976 628.15 405.504 626.117 cv
405.86 624.743 406.932 624.146 408.027 624.146 cv
409.649 624.146 411.322 625.457 410.795 627.49 cv
410.439 628.864 409.367 629.461 408.272 629.461 cv
.819608 .94902 1 rgb
f
419.307 777.352 mo
417.476 777.352 416.713 774.425 418.75 773.739 cv
418.969 773.665 419.177 773.631 419.374 773.631 cv
421.205 773.631 421.968 776.558 419.931 777.244 cv
419.712 777.318 419.503 777.352 419.307 777.352 cv
.941176 1 1 rgb
f
577.524 560.915 mo
575.711 560.915 574.447 558.215 576.369 556.997 cv
576.747 556.758 577.124 556.654 577.48 556.654 cv
579.292 556.654 580.556 559.354 578.634 560.572 cv
578.256 560.811 577.879 560.915 577.524 560.915 cv
.984314 .996078 1 rgb
f
498.826 574.42 mo
495.303 574.42 493.307 568.936 497.185 567.078 cv
497.771 566.797 498.337 566.672 498.869 566.672 cv
502.392 566.672 504.388 572.156 500.509 574.014 cv
499.923 574.295 499.357 574.42 498.826 574.42 cv
.882353 .968627 1 rgb
f
494.014 527.282 mo
493.971 527.084 493.943 526.875 493.929 526.655 cv
493.772 524.121 495.757 522.788 497.726 522.788 cv
499.516 522.788 501.293 523.889 501.436 526.189 cv
501.454 526.485 501.443 526.764 501.407 527.027 cv
498.942 527.113 496.481 527.198 494.014 527.282 cv
.941176 1 1 rgb
f
497.639 530.056 mo
496.02 530.056 494.412 529.156 494.014 527.282 cv
496.481 527.198 498.942 527.113 501.407 527.027 cv
501.13 529.016 499.378 530.056 497.639 530.056 cv
.819608 .94902 1 rgb
f
519.452 551.933 mo
516.92 551.933 516.543 547.893 519.235 547.572 cv
519.338 547.56 519.438 547.554 519.536 547.554 cv
522.067 547.554 522.444 551.594 519.753 551.915 cv
519.649 551.927 519.549 551.933 519.452 551.933 cv
1 1 1 rgb
f
533.704 520.436 mo
532.231 520.436 530.719 519.31 531.091 517.443 cv
531.365 516.065 532.43 515.454 533.516 515.454 cv
534.989 515.454 536.501 516.58 536.13 518.446 cv
535.855 519.825 534.79 520.436 533.704 520.436 cv
f
517.05 635.148 mo
516.738 635.148 516.405 635.072 516.063 634.9 cv
513.886 633.807 515.058 630.743 517.039 630.743 cv
517.351 630.743 517.684 630.819 518.026 630.991 cv
520.203 632.084 519.031 635.149 517.05 635.148 cv
.941176 1 1 rgb
f
529.034 614.993 mo
528.946 614.628 528.908 614.228 528.928 613.794 cv
529.044 611.326 530.947 610.136 532.862 610.136 cv
534.46 610.136 536.066 610.965 536.65 612.571 cv
534.12 613.386 531.576 614.195 529.034 614.993 cv
.882353 .968627 1 rgb
f
532.941 617.824 mo
531.217 617.823 529.483 616.859 529.034 614.993 cv
531.576 614.195 534.12 613.386 536.65 612.571 cv
536.82 613.038 536.903 613.57 536.875 614.166 cv
536.76 616.634 534.857 617.824 532.941 617.824 cv
.960784 1 1 rgb
f
552.439 644.53 mo
552.058 644.53 551.665 644.388 551.309 644.049 cv
550.044 642.845 551.224 641.052 552.572 641.052 cv
552.952 641.052 553.346 641.195 553.702 641.534 cv
554.966 642.738 553.787 644.53 552.439 644.53 cv
f
508.712 666.595 mo
508.377 666.595 508.022 666.506 507.659 666.305 cv
505.562 665.142 506.794 662.198 508.724 662.198 cv
509.059 662.198 509.414 662.286 509.777 662.487 cv
511.874 663.651 510.642 666.595 508.712 666.595 cv
.941176 1 1 rgb
f
508.565 658.32 mo
508.411 658.32 508.246 658.281 508.078 658.193 cv
507.054 657.653 507.628 656.214 508.565 656.214 cv
508.719 656.214 508.884 656.253 509.052 656.341 cv
510.077 656.88 509.502 658.321 508.565 658.32 cv
1 1 1 rgb
f
538.485 632.474 mo
537.131 632.474 535.802 631.784 535.157 630.146 cv
534.005 627.221 536.5 625.029 538.913 625.029 cv
540.267 625.029 541.595 625.719 542.24 627.356 cv
543.392 630.281 540.898 632.474 538.485 632.474 cv
.960784 1 1 rgb
f
603.862 558.797 mo
600.315 558.797 599.505 553.098 603.359 552.398 cv
603.584 552.357 603.8 552.338 604.007 552.338 cv
607.554 552.338 608.364 558.037 604.51 558.737 cv
604.285 558.778 604.069 558.797 603.862 558.797 cv
.819608 .94902 1 rgb
f
534.176 594.389 mo
532.392 594.389 530.633 593.342 530.333 591.062 cv
529.965 588.266 532.187 586.698 534.371 586.698 cv
536.155 586.698 537.914 587.745 538.214 590.026 cv
538.582 592.821 536.36 594.389 534.176 594.389 cv
.984314 .996078 1 rgb
f
595.095 686.412 mo
594.374 686.412 593.631 686.131 592.977 685.464 cv
590.787 683.228 592.955 680.102 595.365 680.102 cv
596.086 680.102 596.829 680.382 597.483 681.05 cv
599.672 683.286 597.505 686.412 595.095 686.412 cv
.960784 1 1 rgb
f
570.286 522.053 mo
569.607 522.053 568.929 521.836 568.418 521.402 cv
568.305 521.204 568.149 521.03 567.965 520.891 cv
567.71 520.5 567.556 520.012 567.553 519.425 cv
567.547 517.98 568.461 517.125 569.544 516.861 cv
571.508 517.023 li
572.361 517.396 573.014 518.189 573.019 519.401 cv
573.027 521.168 571.656 522.053 570.286 522.053 cv
.941176 1 1 rgb
f
571.508 517.023 mo
569.544 516.861 li
569.786 516.802 570.037 516.773 570.287 516.773 cv
570.707 516.773 571.128 516.856 571.508 517.023 cv
.819608 .94902 1 rgb
f
568.418 521.402 mo
568.246 521.256 568.093 521.086 567.965 520.891 cv
568.149 521.03 568.305 521.204 568.418 521.402 cv
.996078 1 1 rgb
f
596.753 652.08 mo
596.264 652.08 595.769 651.869 595.383 651.361 cv
594.326 649.973 595.621 648.402 596.956 648.402 cv
597.445 648.402 597.94 648.613 598.327 649.121 cv
599.383 650.509 598.089 652.08 596.753 652.08 cv
.941176 1 1 rgb
f
491.544 777.687 mo
489.465 777.687 488.492 774.384 490.805 773.5 cv
491.087 773.392 491.355 773.344 491.608 773.344 cv
493.688 773.344 494.66 776.646 492.347 777.531 cv
492.066 777.638 491.797 777.687 491.544 777.687 cv
f
550.107 812.386 mo
549.838 812.386 549.565 812.273 549.345 812 cv
548.717 811.22 549.451 810.297 550.218 810.297 cv
550.486 810.297 550.76 810.411 550.979 810.684 cv
551.607 811.463 550.874 812.386 550.107 812.386 cv
.996078 1 1 rgb
f
523.863 795.114 mo
523.681 795.114 523.499 795.032 523.366 794.836 cv
523.034 794.345 523.484 793.836 523.938 793.836 cv
524.119 793.836 524.301 793.918 524.434 794.114 cv
524.766 794.606 524.316 795.114 523.863 795.114 cv
.941176 1 1 rgb
f
518.734 781.216 mo
517.311 781.216 516.616 779.456 517.302 778.395 cv
517.976 779.047 518.896 779.458 519.822 779.458 cv
520.051 779.458 520.28 779.433 520.506 779.38 cv
520.552 780.133 520.174 780.896 519.233 781.147 cv
519.058 781.194 518.892 781.216 518.734 781.216 cv
.996078 1 1 rgb
f
388.171 678.43 mo
388.147 678.43 388.122 678.428 388.096 678.426 cv
387.358 678.345 387.455 677.237 388.15 677.237 cv
388.174 677.237 388.199 677.238 388.225 677.241 cv
388.962 677.321 388.866 678.43 388.171 678.43 cv
.960784 1 1 rgb
f
424.5 788.538 mo
424.331 788.538 424.162 788.461 424.043 788.275 cv
423.756 787.828 424.163 787.383 424.569 787.383 cv
424.738 787.383 424.907 787.46 425.025 787.645 cv
425.312 788.093 424.906 788.538 424.5 788.538 cv
.941176 1 1 rgb
f
443.33 707.031 mo
442.92 707.031 442.518 706.82 442.335 706.32 cv
442.018 705.459 442.748 704.832 443.453 704.832 cv
443.863 704.832 444.265 705.044 444.448 705.543 cv
444.765 706.405 444.036 707.031 443.33 707.031 cv
.960784 1 1 rgb
f
457.199 633.866 mo
456.637 633.866 456.077 633.606 455.695 632.98 cv
454.807 631.522 456.121 630.123 457.426 630.123 cv
457.988 630.123 458.548 630.382 458.93 631.009 cv
459.818 632.467 458.504 633.866 457.199 633.866 cv
1 1 1 rgb
f
442.903 656.622 mo
442.901 656.622 442.9 656.622 442.898 656.622 cv
442.718 656.233 442.455 655.852 442.096 655.491 cv
441.489 654.88 440.821 654.542 440.151 654.419 cv
440.11 654.094 440.134 653.74 440.238 653.36 cv
440.596 652.058 441.615 651.495 442.656 651.495 cv
444.234 651.495 445.862 652.787 445.321 654.757 cv
444.963 656.059 443.944 656.622 442.903 656.622 cv
.960784 1 1 rgb
f
442.898 656.622 mo
441.626 656.62 440.322 655.778 440.151 654.419 cv
440.821 654.542 441.489 654.88 442.096 655.491 cv
442.455 655.852 442.718 656.233 442.898 656.622 cv
.984314 1 1 rgb
f
394.244 642.077 mo
393.688 640.855 393.708 639.378 394.728 637.952 cv
395.646 636.669 396.86 636.138 398.065 636.138 cv
400.656 636.138 403.207 638.593 402.683 641.325 cv
402.552 641.337 402.42 641.349 402.288 641.36 cv
401.789 640.583 400.966 640.022 400.001 640.022 cv
399.581 640.022 399.134 640.128 398.674 640.37 cv
397.989 640.729 397.566 641.238 397.356 641.8 cv
396.326 641.892 395.295 641.984 394.244 642.077 cv
.819608 .94902 1 rgb
f
398.049 644.866 mo
396.435 644.666 394.917 643.557 394.244 642.077 cv
395.295 641.984 396.326 641.892 397.356 641.8 cv
396.969 642.836 397.304 644.056 398.049 644.866 cv
402.546 641.846 mo
402.474 641.677 402.387 641.515 402.288 641.36 cv
402.42 641.349 402.552 641.337 402.683 641.325 cv
402.65 641.498 402.604 641.672 402.546 641.846 cv
.941176 1 1 rgb
f
397.356 641.8 mo
397.566 641.238 397.989 640.729 398.674 640.37 cv
399.134 640.128 399.581 640.022 400.001 640.022 cv
400.966 640.022 401.789 640.583 402.288 641.36 cv
400.67 641.505 399.033 641.651 397.356 641.8 cv
.988235 .996078 1 rgb
f
398.566 644.898 mo
398.393 644.898 398.221 644.887 398.049 644.866 cv
397.304 644.056 396.969 642.836 397.356 641.8 cv
399.033 641.651 400.67 641.505 402.288 641.36 cv
402.387 641.515 402.474 641.677 402.546 641.846 cv
402.408 642.258 402.197 642.673 401.903 643.084 cv
400.986 644.366 399.772 644.898 398.566 644.898 cv
.996078 1 1 rgb
f
410.012 779.009 mo
408.724 779.009 407.426 777.632 408.294 776.191 cv
408.671 775.566 409.227 775.306 409.786 775.306 cv
411.073 775.306 412.371 776.684 411.503 778.124 cv
411.126 778.75 410.57 779.009 410.012 779.009 cv
.960784 1 1 rgb
f
479.509 609.166 mo
478.791 609.166 478.138 608.968 477.573 608.631 cv
477.576 608.29 477.532 607.928 477.433 607.549 cv
477.098 606.266 476.316 605.47 475.376 605.083 cv
475.192 603.39 475.925 601.631 477.976 600.817 cv
478.553 600.588 479.106 600.484 479.625 600.484 cv
483.747 600.484 485.739 607.014 481.158 608.833 cv
480.58 609.062 480.028 609.166 479.509 609.166 cv
.984314 .996078 1 rgb
f
477.573 608.631 mo
476.345 607.9 475.533 606.515 475.376 605.083 cv
476.316 605.47 477.098 606.266 477.433 607.549 cv
477.532 607.928 477.576 608.29 477.573 608.631 cv
1 1 1 rgb
f
520.506 779.38 mo
520.453 778.495 519.812 777.626 518.812 777.626 cv
518.654 777.626 518.487 777.647 518.312 777.694 cv
517.839 777.82 517.509 778.076 517.302 778.395 cv
516.252 777.377 515.804 775.771 516.884 774.222 cv
517.577 773.227 518.51 772.814 519.437 772.814 cv
521.809 772.814 524.147 775.51 522.376 778.05 cv
521.854 778.8 521.196 779.219 520.506 779.38 cv
.941176 1 1 rgb
f
519.822 779.458 mo
518.896 779.458 517.976 779.047 517.302 778.395 cv
517.509 778.076 517.839 777.82 518.312 777.694 cv
518.487 777.647 518.654 777.626 518.812 777.626 cv
519.812 777.626 520.453 778.495 520.506 779.38 cv
520.28 779.433 520.051 779.458 519.822 779.458 cv
.996078 1 1 rgb
f
568.579 622.925 mo
567.261 622.925 566.197 621.076 567.509 620.015 cv
567.831 619.755 568.168 619.645 568.491 619.645 cv
569.809 619.645 570.873 621.494 569.561 622.554 cv
569.239 622.814 568.902 622.925 568.579 622.925 cv
.941176 1 1 rgb
f
544.933 670.473 mo
544.199 670.473 543.44 669.857 543.714 668.946 cv
543.889 668.365 544.346 668.116 544.813 668.116 cv
545.547 668.116 546.305 668.732 546.032 669.643 cv
545.857 670.224 545.4 670.473 544.933 670.473 cv
f
534.528 744.088 mo
532.995 744.088 531.465 742.398 532.553 740.717 cv
533.003 740.023 533.636 739.735 534.268 739.735 cv
535.801 739.735 537.331 741.426 536.242 743.107 cv
535.792 743.801 535.16 744.088 534.528 744.088 cv
.960784 1 1 rgb
f
179.155 798.027 mo
177.378 798.027 175.638 797.044 175.122 794.807 cv
174.388 791.625 176.981 789.646 179.502 789.646 cv
181.278 789.646 183.019 790.629 183.535 792.866 cv
184.269 796.047 181.676 798.027 179.155 798.027 cv
1 1 1 rgb
f
580.198 627.926 mo
578.092 627.926 575.924 626.263 576.547 623.612 cv
576.861 622.271 577.701 621.474 578.698 621.135 cv
578.844 621.643 579.256 622.063 579.916 622.063 cv
579.948 622.063 579.98 622.062 580.012 622.06 cv
580.657 622.022 581.038 621.622 581.172 621.143 cv
582.772 621.662 584.044 623.146 583.549 625.255 cv
583.113 627.113 581.671 627.926 580.198 627.926 cv
.941176 1 1 rgb
f
579.916 622.063 mo
579.256 622.063 578.844 621.643 578.698 621.135 cv
579.081 621.004 579.488 620.941 579.898 620.941 cv
580.328 620.941 580.761 621.01 581.172 621.143 cv
581.038 621.622 580.657 622.022 580.012 622.06 cv
579.98 622.062 579.948 622.063 579.916 622.063 cv
.960784 1 1 rgb
f
567.589 790.86 mo
567.055 790.86 566.504 790.434 566.669 789.762 cv
566.783 789.299 567.143 789.097 567.511 789.097 cv
568.046 789.097 568.597 789.523 568.432 790.195 cv
568.318 790.658 567.957 790.86 567.589 790.86 cv
f
565.49 814.469 mo
564.874 814.469 564.221 814.295 563.562 813.897 cv
560.046 811.771 562.272 806.845 565.552 806.845 cv
566.168 806.845 566.821 807.018 567.48 807.417 cv
570.996 809.543 568.77 814.469 565.49 814.469 cv
.941176 1 1 rgb
f
617.866 641.82 mo
617.747 641.82 617.626 641.815 617.503 641.807 cv
612.038 641.423 612.508 633.123 617.75 633.123 cv
617.868 633.123 617.989 633.127 618.112 633.136 cv
623.578 633.52 623.107 641.82 617.866 641.82 cv
f
606.283 712.343 mo
604.892 712.343 603.463 711.265 603.84 709.507 cv
604.112 708.238 605.094 707.679 606.096 707.679 cv
607.487 707.679 608.916 708.757 608.54 710.514 cv
608.268 711.783 607.286 712.343 606.283 712.343 cv
f
490.16 702.179 mo
489.068 702.179 488.309 700.551 489.469 699.821 cv
489.696 699.678 489.921 699.616 490.134 699.616 cv
491.226 699.616 491.984 701.244 490.825 701.974 cv
490.598 702.117 490.373 702.179 490.16 702.179 cv
f
469.778 628.461 mo
468.114 628.461 466.403 626.844 467.329 624.882 cv
467.799 623.887 468.63 623.472 469.473 623.472 cv
471.137 623.472 472.848 625.089 471.922 627.05 cv
471.452 628.046 470.621 628.461 469.778 628.461 cv
.882353 .968627 1 rgb
f
503.362 786.919 mo
500.903 786.919 498.848 783.538 501.241 781.471 cv
501.863 780.933 502.528 780.706 503.166 780.706 cv
505.625 780.706 507.68 784.087 505.287 786.154 cv
504.665 786.692 504 786.919 503.362 786.919 cv
.960784 1 1 rgb
f
485.38 722.515 mo
482.807 722.515 480.154 720.072 481.513 717.008 cv
482.228 715.396 483.558 714.722 484.909 714.722 cv
487.483 714.722 490.135 717.165 488.776 720.229 cv
488.061 721.841 486.732 722.515 485.38 722.515 cv
.941176 1 1 rgb
f
585.738 674.721 mo
584.239 674.721 582.771 673.933 582.166 672.084 cv
581.179 669.069 583.704 666.976 586.146 666.976 cv
587.645 666.976 589.113 667.765 589.718 669.613 cv
590.705 672.629 588.18 674.721 585.738 674.721 cv
.960784 1 1 rgb
f
413.193 806.142 mo
410.225 806.142 407.31 802.736 409.56 799.58 cv
410.427 798.363 411.577 797.859 412.719 797.859 cv
415.687 797.859 418.602 801.265 416.353 804.422 cv
416.353 804.422 li
416.353 804.422 li
416.68 802.844 415.399 801.883 414.152 801.883 cv
413.244 801.883 412.355 802.392 412.116 803.543 cv
411.818 804.98 412.855 805.906 413.985 806.059 cv
413.723 806.115 413.458 806.142 413.193 806.142 cv
.941176 1 1 rgb
f
413.985 806.059 mo
412.855 805.906 411.818 804.98 412.116 803.543 cv
412.355 802.392 413.244 801.883 414.152 801.883 cv
415.399 801.883 416.68 802.844 416.353 804.422 cv
416.353 804.422 li
415.687 805.356 414.854 805.87 413.985 806.059 cv
.972549 1 1 rgb
f
232.394 544.252 mo
232.309 544.252 232.221 544.248 232.13 544.238 cv
229.509 543.956 229.848 540.016 232.319 540.016 cv
232.404 540.016 232.492 540.021 232.583 540.031 cv
235.204 540.313 234.865 544.253 232.394 544.252 cv
.996078 1 1 rgb
f
154.196 773.819 mo
153.105 773.818 152.032 773.272 151.469 771.968 cv
150.413 769.521 152.522 767.604 154.565 767.604 cv
155.656 767.604 156.729 768.151 157.292 769.455 cv
158.348 771.902 156.24 773.819 154.196 773.819 cv
.67451 .909804 1 rgb
f
16.8249 754.196 mo
15.7596 754.196 14.7152 753.648 14.2296 752.352 cv
13.3846 750.096 15.2985 748.442 17.1495 748.442 cv
18.2148 748.442 19.2593 748.99 19.7449 750.286 cv
20.5898 752.542 18.6759 754.196 16.8249 754.196 cv
.941176 1 1 rgb
f
158.6 787.356 mo
158.377 787.356 158.139 787.302 157.893 787.182 cv
156.3 786.399 157.141 784.153 158.589 784.153 cv
158.812 784.153 159.05 784.207 159.296 784.328 cv
160.889 785.11 160.048 787.356 158.6 787.356 cv
.972549 .992157 1 rgb
f
205.615 767.133 mo
205.781 766.95 205.97 766.787 206.176 766.646 cv
205.991 766.809 205.804 766.971 205.615 767.133 cv
1 1 1 rgb
f
207.741 771.892 mo
206.686 771.892 205.651 771.357 205.14 770.084 cv
204.663 768.897 204.957 767.859 205.615 767.133 cv
205.804 766.971 205.991 766.809 206.176 766.646 cv
206.732 766.266 207.41 766.049 208.08 766.049 cv
209.135 766.049 210.17 766.585 210.681 767.858 cv
211.604 770.155 209.641 771.892 207.741 771.892 cv
f
38.8803 739.805 mo
37.9472 739.805 37.0266 739.349 36.498 738.253 cv
35.4403 736.061 37.3554 734.238 39.2197 734.238 cv
40.1528 734.238 41.0733 734.695 41.6018 735.79 cv
42.6598 737.983 40.7447 739.805 38.8803 739.805 cv
.941176 1 1 rgb
f
179.089 765.35 mo
178.816 765.35 178.532 765.253 178.266 765.026 cv
177.229 764.139 178.112 762.678 179.173 762.678 cv
179.445 762.678 179.73 762.775 179.996 763.002 cv
181.033 763.889 180.149 765.35 179.089 765.35 cv
.960784 1 1 rgb
f
172.752 785.869 mo
172.169 785.868 171.598 785.568 171.338 784.857 cv
170.889 783.633 171.925 782.745 172.926 782.745 cv
173.509 782.745 174.08 783.046 174.341 783.756 cv
174.789 784.98 173.753 785.869 172.752 785.869 cv
f
193.401 765.378 mo
192.053 765.378 191.308 763.275 192.794 762.582 cv
193.012 762.481 193.223 762.435 193.421 762.435 cv
194.768 762.435 195.514 764.539 194.028 765.231 cv
193.809 765.333 193.598 765.379 193.401 765.378 cv
.941176 1 1 rgb
f
206.682 747.664 mo
206.592 747.664 206.499 747.66 206.405 747.653 cv
202.808 747.358 203.167 741.914 206.596 741.914 cv
206.687 741.914 206.779 741.917 206.874 741.925 cv
210.471 742.22 210.112 747.665 206.682 747.664 cv
.960784 1 1 rgb
f
193.279 708.056 mo
192.573 708.056 191.853 707.543 191.981 706.642 cv
192.084 705.917 192.642 705.587 193.208 705.587 cv
193.914 705.587 194.634 706.099 194.506 707.001 cv
194.403 707.725 193.845 708.056 193.279 708.056 cv
.788235 .941176 1 rgb
f
200.827 813.247 mo
200.577 813.247 200.312 813.207 200.034 813.12 cv
197.236 812.247 198.219 808.22 200.731 808.22 cv
200.981 808.22 201.246 808.26 201.524 808.347 cv
204.322 809.22 203.339 813.247 200.827 813.247 cv
.941176 1 1 rgb
f
156.724 594.498 mo
152.62 594.497 151.466 587.893 155.972 586.885 cv
156.296 586.812 156.605 586.779 156.9 586.779 cv
160.481 586.779 161.816 591.806 159.106 593.758 cv
158.47 593.995 157.833 594.234 157.205 594.469 cv
157.04 594.488 156.88 594.498 156.724 594.498 cv
.960784 1 1 rgb
f
157.205 594.469 mo
157.833 594.234 158.47 593.995 159.106 593.758 cv
158.709 594.043 158.227 594.263 157.652 594.392 cv
157.499 594.426 157.351 594.451 157.205 594.469 cv
.882353 .968627 1 rgb
f
223.797 780.7 mo
223.567 780.7 223.323 780.663 223.068 780.582 cv
220.525 779.778 221.429 776.121 223.712 776.121 cv
223.941 776.121 224.185 776.158 224.441 776.239 cv
226.984 777.044 226.08 780.701 223.797 780.7 cv
.960784 1 1 rgb
f
73.6176 741.326 mo
73.3489 741.326 73.0852 741.174 73.0183 740.834 cv
72.9279 740.374 73.2997 740.098 73.6623 740.098 cv
73.931 740.098 74.1946 740.249 74.2615 740.59 cv
74.3519 741.05 73.9802 741.326 73.6176 741.326 cv
.941176 1 1 rgb
f
104.409 634.437 mo
102.817 634.437 102.519 631.886 104.231 631.63 cv
104.314 631.618 104.393 631.612 104.469 631.612 cv
106.061 631.612 106.359 634.164 104.647 634.419 cv
104.565 634.431 104.486 634.437 104.409 634.437 cv
.882353 .968627 1 rgb
f
76.3567 722.469 mo
75.2748 722.469 74.1706 721.679 74.3758 720.299 cv
74.4735 719.641 74.8152 719.199 75.2582 718.949 cv
76.0676 719.939 76.8818 720.938 77.7029 721.951 cv
77.3444 722.303 76.853 722.469 76.3567 722.469 cv
1 1 1 rgb
f
77.7029 721.951 mo
76.8818 720.938 76.0676 719.939 75.2582 718.949 cv
75.556 718.781 75.8994 718.7 76.2451 718.7 cv
77.327 718.7 78.4312 719.491 78.226 720.871 cv
78.1569 721.336 77.9657 721.693 77.7029 721.951 cv
f
239.289 652.439 mo
238.446 652.439 237.614 652.03 237.124 651.046 cv
236.123 649.039 237.884 647.339 239.601 647.339 cv
240.444 647.339 241.276 647.748 241.766 648.732 cv
242.767 650.739 241.006 652.439 239.289 652.439 cv
.882353 .968627 1 rgb
f
151.749 619.503 mo
150.033 619.502 148.338 618.483 148.091 616.286 cv
147.797 613.669 149.868 612.229 151.908 612.229 cv
153.624 612.229 155.318 613.248 155.565 615.446 cv
155.859 618.062 153.789 619.503 151.749 619.503 cv
.819608 .94902 1 rgb
f
132.681 692.594 mo
132.653 692.594 132.625 692.593 132.596 692.591 cv
131.346 692.501 131.457 690.604 132.654 690.604 cv
132.682 690.604 132.71 690.605 132.739 690.607 cv
133.989 690.697 133.879 692.595 132.681 692.594 cv
.788235 .941176 1 rgb
f
170.352 620.559 mo
170.182 620.559 170.002 620.539 169.815 620.496 cv
167.255 619.909 167.932 616.169 170.255 616.169 cv
170.425 616.169 170.605 616.189 170.792 616.232 cv
173.352 616.819 172.675 620.559 170.352 620.559 cv
1 1 1 rgb
f
202.508 713.469 mo
201.082 713.469 199.628 712.43 199.894 710.611 cv
200.106 709.157 201.225 708.495 202.363 708.495 cv
203.789 708.495 205.243 709.534 204.977 711.353 cv
204.765 712.808 203.646 713.469 202.508 713.469 cv
f
174.691 604.943 mo
174.235 604.943 173.761 604.779 173.321 604.393 cv
173.079 604.18 172.902 603.95 172.782 603.71 cv
173.082 603.522 173.284 603.188 173.221 602.73 cv
173.173 602.38 172.995 602.142 172.761 602.004 cv
172.782 601.958 172.803 601.911 172.827 601.866 cv
172.83 601.878 172.834 601.89 172.839 601.902 cv
172.946 602.202 173.186 602.33 173.431 602.33 cv
173.847 602.33 174.278 601.964 174.096 601.454 cv
173.992 601.162 173.762 601.034 173.523 601.027 cv
173.9 600.735 174.357 600.554 174.835 600.554 cv
175.291 600.554 175.765 600.718 176.205 601.104 cv
177.884 602.577 176.422 604.943 174.691 604.943 cv
.819608 .94902 1 rgb
f
173.431 602.33 mo
173.186 602.33 172.946 602.202 172.839 601.902 cv
172.834 601.89 172.83 601.878 172.827 601.866 cv
172.993 601.541 173.234 601.251 173.523 601.027 cv
173.762 601.034 173.992 601.162 174.096 601.454 cv
174.278 601.964 173.847 602.33 173.431 602.33 cv
.882353 .968627 1 rgb
f
201.606 601.898 mo
199.498 601.898 197.365 600.45 197.577 597.743 cv
197.764 595.342 199.613 594.207 201.48 594.207 cv
203.588 594.207 205.72 595.655 205.509 598.362 cv
205.321 600.763 203.473 601.898 201.606 601.898 cv
f
209.439 651.834 mo
209.183 651.834 208.91 651.769 208.63 651.622 cv
206.93 650.727 207.884 648.338 209.439 648.338 cv
209.695 648.338 209.968 648.403 210.248 648.55 cv
211.948 649.445 210.994 651.835 209.439 651.834 cv
f
283.287 573.696 mo
283.083 573.696 282.88 573.601 282.745 573.372 cv
282.438 572.85 282.906 572.36 283.369 572.36 cv
283.573 572.36 283.776 572.455 283.911 572.685 cv
284.218 573.206 283.75 573.696 283.287 573.696 cv
.984314 .996078 1 rgb
f
95.9271 617.831 mo
95.2051 617.497 94.6142 616.852 94.3687 615.844 cv
93.8125 613.56 95.6804 612.119 97.4947 612.119 cv
98.749 612.119 99.9776 612.808 100.362 614.384 cv
100.524 615.049 100.48 615.644 100.291 616.151 cv
99.1351 616.596 97.6663 617.162 95.9271 617.831 cv
.960784 1 1 rgb
f
97.2356 618.109 mo
96.7833 618.109 96.3343 618.02 95.9271 617.831 cv
97.6663 617.162 99.1351 616.596 100.291 616.151 cv
99.8335 617.385 98.5211 618.109 97.2356 618.109 cv
.882353 .968627 1 rgb
f
297.097 483.929 mo
295.759 482.833 295.053 481.02 296.039 479.013 cv
296.832 477.4 298.191 476.728 299.567 476.728 cv
302.298 476.728 305.099 479.373 303.689 482.55 cv
301.604 483.009 299.409 483.469 297.097 483.929 cv
1 1 1 rgb
f
300.077 485.016 mo
299.009 485.016 297.93 484.611 297.097 483.929 cv
299.409 483.469 301.604 483.009 303.689 482.55 cv
303.662 482.61 303.634 482.67 303.604 482.731 cv
302.812 484.344 301.453 485.016 300.077 485.016 cv
f
129.072 679.292 mo
128.688 679.292 128.304 679.12 128.027 678.703 cv
127.34 677.671 128.282 676.617 129.23 676.617 cv
129.613 676.617 129.997 676.79 130.275 677.206 cv
130.962 678.238 130.019 679.293 129.072 679.292 cv
.972549 .992157 1 rgb
f
107.517 597.632 mo
106.44 597.632 105.364 596.945 105.345 595.559 cv
105.325 594.141 106.427 593.425 107.527 593.425 cv
108.604 593.425 109.68 594.112 109.699 595.499 cv
109.719 596.917 108.617 597.632 107.517 597.632 cv
.960784 1 1 rgb
f
153.953 691.131 mo
153.154 691.131 152.37 690.717 152.018 689.74 cv
151.416 688.071 152.826 686.868 154.189 686.868 cv
154.989 686.868 155.773 687.283 156.125 688.26 cv
156.726 689.928 155.316 691.131 153.953 691.131 cv
.67451 .909804 1 rgb
f
172.158 603.885 mo
171.691 603.885 171.231 603.612 171.149 603.016 cv
171.047 602.277 171.634 601.86 172.212 601.86 cv
172.405 601.86 172.597 601.907 172.761 602.004 cv
172.53 602.537 172.5 603.148 172.782 603.71 cv
172.598 603.825 172.377 603.885 172.158 603.885 cv
1 1 1 rgb
f
172.782 603.71 mo
172.5 603.148 172.53 602.537 172.761 602.004 cv
172.995 602.142 173.173 602.38 173.221 602.73 cv
173.284 603.188 173.082 603.522 172.782 603.71 cv
f
281.095 549.367 mo
280.367 549.367 279.757 548.366 280.465 547.753 cv
280.65 547.593 280.847 547.525 281.037 547.525 cv
281.765 547.525 282.375 548.526 281.666 549.14 cv
281.482 549.299 281.285 549.367 281.095 549.367 cv
.941176 1 1 rgb
f
264.576 503.423 mo
263.682 503.423 262.76 503.08 261.94 502.264 cv
259.14 499.474 261.855 495.485 264.903 495.485 cv
265.796 495.485 266.718 495.828 267.538 496.644 cv
270.339 499.434 267.623 503.423 264.576 503.423 cv
.960784 1 1 rgb
f
218.793 509.522 mo
217.652 509.522 216.5 508.744 216.603 507.279 cv
216.696 505.964 217.709 505.34 218.73 505.34 cv
219.871 505.34 221.023 506.119 220.92 507.584 cv
220.827 508.898 219.814 509.522 218.793 509.522 cv
.607843 .74902 .815686 rgb
f
214.473 532.522 mo
213.017 532.522 211.878 530.447 213.354 529.321 cv
213.698 529.059 214.053 528.948 214.391 528.948 cv
215.847 528.948 216.986 531.023 215.51 532.149 cv
215.166 532.41 214.811 532.522 214.473 532.522 cv
.819608 .94902 1 rgb
f
253.25 604.55 mo
251.345 604.55 250.249 601.59 252.344 600.568 cv
252.667 600.41 252.978 600.341 253.27 600.341 cv
255.176 600.341 256.271 603.301 254.176 604.323 cv
253.854 604.48 253.543 604.55 253.25 604.55 cv
f
232.018 611.296 mo
229.123 611.295 226.499 607.566 229.096 604.85 cv
229.89 604.018 230.8 603.671 231.684 603.671 cv
232.272 603.671 232.849 603.824 233.373 604.092 cv
233.73 604.691 234.281 605.18 234.923 605.428 cv
235.877 606.752 236.062 608.594 234.607 610.117 cv
233.812 610.948 232.903 611.296 232.018 611.296 cv
f
232.843 619.292 mo
230.176 619.292 229.706 615.022 232.566 614.62 cv
232.695 614.601 232.82 614.593 232.941 614.593 cv
235.609 614.593 236.079 618.863 233.219 619.265 cv
233.089 619.283 232.964 619.292 232.843 619.292 cv
f
172.191 536.988 mo
170.417 536.988 168.596 535.819 168.286 533.972 cv
175.103 535.467 li
174.412 536.522 173.311 536.988 172.191 536.988 cv
1 1 1 rgb
f
175.103 535.467 mo
168.286 533.972 li
168.259 533.814 168.244 533.65 168.24 533.481 cv
170.495 533.375 172.946 532.941 175.599 532.235 cv
175.812 532.883 175.831 533.633 175.572 534.459 cv
175.453 534.841 175.294 535.177 175.103 535.467 cv
f
168.24 533.481 mo
168.233 533.086 168.292 532.666 168.43 532.224 cv
168.984 530.452 170.382 529.695 171.811 529.695 cv
173.428 529.695 175.084 530.665 175.599 532.235 cv
172.946 532.941 170.495 533.375 168.24 533.481 cv
f
153.476 568.692 mo
150.26 568.692 148.472 563.673 152.019 562.013 cv
152.543 561.767 153.048 561.658 153.523 561.658 cv
156.739 561.658 158.526 566.678 154.979 568.338 cv
154.455 568.583 153.95 568.692 153.476 568.692 cv
.960784 1 1 rgb
f
235.846 605.603 mo
235.526 605.603 235.215 605.54 234.923 605.428 cv
234.521 604.87 233.983 604.404 233.373 604.092 cv
232.715 602.989 232.716 601.514 234.02 600.494 cv
234.575 600.06 235.153 599.875 235.704 599.875 cv
238.023 599.875 239.864 603.158 237.53 604.983 cv
236.975 605.417 236.397 605.603 235.846 605.603 cv
.984314 .996078 1 rgb
f
234.923 605.428 mo
234.281 605.18 233.73 604.691 233.373 604.092 cv
233.983 604.404 234.521 604.87 234.923 605.428 cv
.988235 .996078 1 rgb
f
142.529 648.251 mo
140.157 648.251 137.919 645.337 139.912 642.975 cv
140.587 642.176 141.403 641.843 142.205 641.843 cv
144.577 641.843 146.815 644.757 144.823 647.119 cv
144.148 647.918 143.331 648.251 142.529 648.251 cv
1 1 1 rgb
f
128.891 654.195 mo
128.157 654.194 127.696 653.071 128.494 652.635 cv
128.63 652.561 128.764 652.528 128.889 652.528 cv
129.624 652.528 130.084 653.652 129.286 654.087 cv
129.15 654.162 129.017 654.195 128.891 654.195 cv
.819608 .94902 1 rgb
f
79.0502 624.325 mo
78.9968 623.764 79.1665 623.167 79.6568 622.623 cv
80.1539 622.07 80.7376 621.84 81.308 621.84 cv
82.0182 621.84 82.7071 622.198 83.1796 622.737 cv
81.8506 623.248 80.4719 623.778 79.0502 624.325 cv
.941176 1 1 rgb
f
81.5314 626.58 mo
80.3171 626.58 79.1654 625.535 79.0502 624.325 cv
80.4719 623.778 81.8506 623.248 83.1796 622.737 cv
83.8896 623.546 84.1113 624.766 83.1826 625.797 cv
82.6856 626.349 82.1016 626.58 81.5314 626.58 cv
.819608 .94902 1 rgb
f
145.439 569.447 mo
144.74 569.447 144.04 569.001 143.744 568.367 cv
143.892 567.91 143.947 567.389 143.879 566.808 cv
143.879 566.808 li
143.879 566.808 li
144.232 566.255 144.732 566.026 145.233 566.026 cv
146.435 566.026 147.636 567.342 146.793 568.665 cv
146.441 569.218 145.94 569.447 145.439 569.447 cv
.960784 1 1 rgb
f
70.5913 538.969 mo
68.1245 538.968 65.6238 537.249 65.9251 534.086 cv
66.1855 531.354 68.2879 530.075 70.4152 530.075 cv
72.8823 530.075 75.3827 531.795 75.0814 534.958 cv
74.821 537.691 72.7188 538.969 70.5913 538.969 cv
.945098 .964706 .956863 rgb
f
23.2887 689.778 mo
21.5183 689.777 19.7794 688.771 19.3662 686.524 cv
18.8179 683.542 21.2188 681.777 23.5639 681.777 cv
25.3343 681.777 27.0732 682.783 27.4865 685.031 cv
28.0347 688.013 25.6339 689.778 23.2887 689.778 cv
.984314 .996078 1 rgb
f
61.5892 594.219 mo
60.0387 594.219 58.6061 593.252 57.8111 591.928 cv
60.2793 590.598 62.732 589.274 65.1599 587.963 cv
66.064 589.555 66.0524 591.629 64.2561 593.167 cv
63.3926 593.906 62.4721 594.219 61.5892 594.219 cv
1 1 1 rgb
f
57.8111 591.928 mo
56.8473 590.323 56.8198 588.193 58.6549 586.622 cv
59.5184 585.883 60.439 585.57 61.3219 585.57 cv
62.9121 585.57 64.3783 586.587 65.1599 587.963 cv
62.732 589.274 60.2793 590.598 57.8111 591.928 cv
f
88.3482 637.777 mo
87.0007 637.777 85.618 636.749 85.9532 635.041 cv
86.2018 633.775 87.1798 633.212 88.1772 633.212 cv
88.9783 633.212 89.792 633.575 90.2495 634.229 cv
90.3329 634.494 90.4412 634.736 90.5706 634.957 cv
90.6372 635.254 90.6433 635.586 90.5723 635.948 cv
90.3237 637.214 89.3457 637.777 88.3482 637.777 cv
.882353 .968627 1 rgb
f
116.176 457.248 mo
112.929 457.248 110.71 452.384 114.173 450.254 cv
114.835 449.847 115.492 449.67 116.112 449.67 cv
119.358 449.67 121.577 454.534 118.114 456.664 cv
117.452 457.071 116.795 457.248 116.176 457.248 cv
.741176 .709804 .917647 rgb
f
216.901 683.844 mo
216.857 683.844 216.811 683.842 216.765 683.838 cv
215.048 683.693 215.224 681.097 216.859 681.097 cv
216.904 681.097 216.949 681.099 216.995 681.103 cv
218.712 681.247 218.536 683.844 216.901 683.844 cv
.941176 1 1 rgb
f
248.783 683.101 mo
247.457 683.101 246.158 682.412 245.589 680.787 cv
244.63 678.051 246.936 676.101 249.165 676.101 cv
250.49 676.101 251.789 676.791 252.359 678.415 cv
253.317 681.151 251.012 683.101 248.783 683.101 cv
1 1 1 rgb
f
225.958 713.738 mo
225.434 713.738 224.89 713.548 224.387 713.098 cv
222.505 711.412 224.173 708.756 226.13 708.756 cv
226.654 708.756 227.198 708.946 227.701 709.396 cv
229.583 711.082 227.915 713.738 225.958 713.738 cv
.941176 1 1 rgb
f
257.353 723.545 mo
254.379 723.545 253.33 718.768 256.626 717.838 cv
256.924 717.754 257.208 717.715 257.476 717.715 cv
260.45 717.715 261.499 722.492 258.203 723.422 cv
257.905 723.506 257.621 723.545 257.353 723.545 cv
.67451 .909804 1 rgb
f
275.637 495.561 mo
272.894 495.561 271.445 492.089 272.867 490.016 cv
274.588 489.973 276.404 489.928 278.307 489.879 cv
279.598 491.602 279.437 494.507 276.779 495.372 cv
276.378 495.502 275.997 495.562 275.637 495.561 cv
.941176 1 1 rgb
f
272.867 490.016 mo
273.243 489.468 273.82 489.018 274.626 488.756 cv
275.027 488.626 275.409 488.566 275.768 488.566 cv
276.847 488.566 277.725 489.102 278.307 489.879 cv
276.404 489.928 274.588 489.973 272.867 490.016 cv
.819608 .94902 1 rgb
f
229.642 523.955 mo
227.822 523.955 226.027 522.89 225.711 520.565 cv
225.424 518.452 226.585 517.019 228.112 516.409 cv
229.668 516.257 230.571 516.168 230.571 516.168 cv
230.571 516.168 230.566 516.156 230.558 516.132 cv
231.46 516.275 232.307 516.694 232.913 517.417 cv
230.732 518.589 230.203 521.586 231.323 523.645 cv
230.79 523.85 230.215 523.955 229.642 523.955 cv
1 1 1 rgb
f
228.112 516.409 mo
228.66 516.19 229.256 516.077 229.848 516.077 cv
230.086 516.077 230.324 516.095 230.558 516.132 cv
230.566 516.156 230.571 516.168 230.571 516.168 cv
230.571 516.168 229.668 516.257 228.112 516.409 cv
f
207.269 538.804 mo
206.742 538.804 206.22 538.67 205.762 538.376 cv
205.897 538.39 206.032 538.397 206.169 538.397 cv
207.156 538.397 208.177 538.022 209.094 537.131 cv
209.794 536.452 210.195 535.703 210.358 534.948 cv
211.057 537.121 209.136 538.804 207.269 538.804 cv
.819608 .94902 1 rgb
f
191.853 535.491 mo
190.622 535.491 189.414 534.808 189.064 533.255 cv
188.569 531.062 190.353 529.705 192.089 529.705 cv
193.321 529.705 194.528 530.389 194.879 531.942 cv
195.374 534.134 193.589 535.491 191.853 535.491 cv
1 1 1 rgb
f
145.227 491.029 mo
144.441 491.029 143.67 490.616 143.348 489.647 cv
142.819 488.055 144.153 486.944 145.444 486.944 cv
146.231 486.944 147.002 487.357 147.323 488.326 cv
147.853 489.918 146.518 491.029 145.227 491.029 cv
.831372 .815686 .94902 rgb
f
124.874 553.106 mo
123.289 553.106 121.65 551.75 122.281 549.793 cv
122.672 548.583 123.629 548.067 124.607 548.067 cv
126.192 548.067 127.831 549.422 127.2 551.38 cv
126.81 552.589 125.852 553.106 124.874 553.106 cv
1 1 1 rgb
f
205.762 538.376 mo
202.499 538.037 199.828 533.722 202.894 530.745 cv
203.811 529.854 204.832 529.48 205.819 529.48 cv
208.506 529.48 210.942 532.256 210.358 534.948 cv
210.32 534.829 210.273 534.708 210.218 534.585 cv
209.67 533.361 208.656 532.849 207.626 532.849 cv
205.656 532.849 203.626 534.722 204.677 537.068 cv
204.945 537.666 205.324 538.094 205.762 538.376 cv
.984314 .996078 1 rgb
f
206.169 538.397 mo
206.032 538.397 205.897 538.39 205.762 538.376 cv
205.324 538.094 204.945 537.666 204.677 537.068 cv
203.626 534.722 205.656 532.849 207.626 532.849 cv
208.656 532.849 209.67 533.361 210.218 534.585 cv
210.273 534.708 210.32 534.829 210.358 534.948 cv
210.195 535.703 209.794 536.452 209.094 537.131 cv
208.177 538.022 207.156 538.397 206.169 538.397 cv
.988235 .996078 1 rgb
f
97.2111 520.98 mo
94.0622 520.98 91.103 517.093 93.7667 513.976 cv
94.6595 512.931 95.7342 512.496 96.7879 512.496 cv
99.9368 512.496 102.896 516.383 100.232 519.5 cv
99.3393 520.545 98.2649 520.98 97.2111 520.98 cv
.345098 .54902 .470588 rgb
f
275.048 552.478 mo
275.82 551.492 277.024 551.024 278.239 551.024 cv
278.553 551.024 278.867 551.055 279.176 551.117 cv
277.808 551.566 276.429 552.021 275.048 552.478 cv
.996078 1 1 rgb
f
278.436 559.004 mo
276.185 559.003 273.895 557.399 274.243 554.519 cv
274.344 553.684 274.634 553.007 275.048 552.478 cv
276.429 552.021 277.808 551.566 279.176 551.117 cv
281.077 551.497 282.731 553.03 282.431 555.509 cv
282.142 557.901 280.302 559.004 278.436 559.004 cv
.984314 .996078 1 rgb
f
194.249 647.627 mo
192.718 647.627 191.218 646.791 190.727 644.872 cv
190.003 642.041 192.326 640.23 194.581 640.23 cv
196.112 640.23 197.612 641.066 198.103 642.986 cv
198.826 645.816 196.504 647.628 194.249 647.627 cv
.882353 .968627 1 rgb
f
21.9096 623.865 mo
21.648 623.865 21.3829 623.753 21.1729 623.485 cv
20.5872 622.734 21.2891 621.869 22.0176 621.869 cv
22.2793 621.869 22.5444 621.98 22.7544 622.249 cv
23.3401 622.999 22.6381 623.865 21.9096 623.865 cv
.960784 1 1 rgb
f
258.405 680.529 mo
257.733 680.529 257.064 680.111 257.023 679.247 cv
256.992 678.584 257.352 678.149 257.823 677.953 cv
257.966 677.927 258.103 677.891 258.234 677.845 cv
258.299 677.838 258.364 677.834 258.429 677.834 cv
259.101 677.834 259.77 678.252 259.81 679.116 cv
259.854 680.047 259.127 680.529 258.405 680.529 cv
1 1 1 rgb
f
196.467 702.987 mo
196.422 702.987 196.375 702.982 196.325 702.972 cv
195.59 702.818 195.769 701.739 196.439 701.739 cv
196.484 701.739 196.531 701.744 196.581 701.754 cv
197.316 701.909 197.137 702.987 196.467 702.987 cv
.788235 .941176 1 rgb
f
179.415 700.601 mo
179.329 700.019 179.15 699.519 178.899 699.098 cv
178.947 699.089 178.993 699.084 179.039 699.084 cv
179.756 699.084 180.197 700.186 179.415 700.601 cv
179.415 700.601 li
1 1 1 rgb
f
42.2588 584.746 mo
39.2295 584.746 36.1048 581.887 37.6827 578.271 cv
38.5206 576.35 40.0994 575.547 41.7056 575.547 cv
44.7348 575.547 47.8596 578.407 46.2818 582.023 cv
45.4439 583.943 43.865 584.747 42.2588 584.746 cv
.984314 .996078 1 rgb
f
69.5871 684.416 mo
69.5864 684.236 69.5618 684.046 69.5099 683.846 cv
69.2349 682.791 68.41 682.333 67.5676 682.333 cv
66.5137 682.333 65.4324 683.051 65.3656 684.216 cv
63.4568 683.183 62.1996 680.972 63.4068 678.453 cv
64.2468 676.7 65.7145 675.969 67.2029 675.969 cv
70.167 675.969 73.2127 678.866 71.5427 682.351 cv
71.0598 683.359 70.3697 684.029 69.5871 684.416 cv
.788235 .941176 1 rgb
f
67.7466 684.834 mo
66.9251 684.834 66.0975 684.612 65.3656 684.216 cv
65.4324 683.051 66.5137 682.333 67.5676 682.333 cv
68.41 682.333 69.2349 682.791 69.5099 683.846 cv
69.5618 684.046 69.5864 684.236 69.5871 684.416 cv
69.0085 684.702 68.3793 684.834 67.7466 684.834 cv
.988235 .996078 1 rgb
f
161.088 766.25 mo
158.713 766.249 157.308 763.386 158.289 761.431 cv
158.477 761.575 158.695 761.638 158.914 761.638 cv
159.685 761.638 160.471 760.851 159.992 759.964 cv
159.992 759.964 li
159.992 759.964 li
160.411 759.806 160.81 759.734 161.185 759.734 cv
164.314 759.734 165.76 764.706 162.28 766.02 cv
161.862 766.178 161.463 766.25 161.088 766.25 cv
.788235 .941176 1 rgb
f
184.24 825.42 mo
183.771 825.42 183.491 824.696 184.004 824.433 cv
184.087 824.391 184.167 824.372 184.242 824.372 cv
184.711 824.372 184.991 825.096 184.478 825.359 cv
184.395 825.401 184.315 825.42 184.24 825.42 cv
.941176 1 1 rgb
f
162.494 732.97 mo
161.376 732.97 160.223 731.908 160.815 730.577 cv
161.126 729.878 161.703 729.586 162.289 729.586 cv
163.407 729.586 164.559 730.649 163.967 731.979 cv
163.656 732.678 163.08 732.97 162.494 732.97 cv
.972549 .992157 1 rgb
f
79.2587 792.446 mo
75.0553 792.446 74.9158 785.869 79.1859 785.748 cv
79.2246 785.747 79.2629 785.747 79.301 785.747 cv
83.5044 785.747 83.6439 792.325 79.3738 792.445 cv
79.335 792.446 79.2967 792.446 79.2587 792.446 cv
1 1 1 rgb
f
21.7849 757.216 mo
21.4528 757.216 21.0993 757.134 20.7355 756.949 cv
18.45 755.787 19.6935 752.57 21.7763 752.57 cv
22.1083 752.57 22.462 752.652 22.8258 752.837 cv
25.1115 753.999 23.8677 757.216 21.7849 757.216 cv
.941176 1 1 rgb
f
156.803 641.069 mo
156.225 641.069 155.621 640.865 155.053 640.386 cv
152.816 638.498 154.701 635.351 156.977 635.351 cv
157.556 635.351 158.16 635.554 158.727 636.033 cv
160.964 637.921 159.079 641.069 156.803 641.069 cv
.882353 .968627 1 rgb
f
158.289 761.431 mo
158.169 761.339 158.061 761.215 157.974 761.053 cv
157.495 760.167 158.282 759.379 159.053 759.379 cv
159.413 759.379 159.769 759.55 159.992 759.964 cv
159.154 760.281 158.601 760.81 158.289 761.431 cv
.788235 .941176 1 rgb
f
158.914 761.638 mo
158.695 761.638 158.477 761.575 158.289 761.431 cv
158.601 760.81 159.154 760.281 159.992 759.964 cv
159.992 759.964 li
160.471 760.851 159.685 761.638 158.914 761.638 cv
.909804 .976471 1 rgb
f
47.9156 721.699 mo
46.8456 721.699 45.7979 721.131 45.3884 719.806 cv
44.737 717.697 46.4931 716.265 48.1924 716.265 cv
49.2624 716.265 50.31 716.833 50.7195 718.158 cv
51.371 720.267 49.615 721.699 47.9156 721.699 cv
1 1 1 rgb
f
23.9063 736.469 mo
21.1269 736.469 19.1137 732.611 21.4323 730.456 cv
21.5541 730.771 21.805 731.045 22.2136 731.207 cv
22.4032 731.281 22.585 731.315 22.7555 731.315 cv
23.6914 731.315 24.296 730.298 24.0922 729.465 cv
26.9208 729.717 28.801 733.929 25.7513 735.891 cv
25.1244 736.294 24.4981 736.469 23.9063 736.469 cv
.960784 1 1 rgb
f
180.751 820.824 mo
180.496 820.824 180.227 820.791 179.945 820.721 cv
176.41 819.837 177.423 814.695 180.618 814.695 cv
180.873 814.695 181.143 814.728 181.425 814.799 cv
184.96 815.682 183.947 820.824 180.751 820.824 cv
f
21.4323 730.456 mo
21.1013 729.6 21.7222 728.447 22.7187 728.447 cv
22.8893 728.447 23.071 728.48 23.2608 728.555 cv
23.737 728.743 23.999 729.085 24.0922 729.465 cv
24.0045 729.458 23.9158 729.454 23.8264 729.454 cv
23.2346 729.454 22.6083 729.628 21.9814 730.032 cv
21.7766 730.164 21.5938 730.306 21.4323 730.456 cv
f
22.7555 731.315 mo
22.585 731.315 22.4032 731.281 22.2136 731.207 cv
21.805 731.045 21.5541 730.771 21.4323 730.456 cv
21.5938 730.306 21.7766 730.164 21.9814 730.032 cv
22.6083 729.628 23.2346 729.454 23.8264 729.454 cv
23.9158 729.454 24.0045 729.458 24.0922 729.465 cv
24.296 730.298 23.6914 731.315 22.7555 731.315 cv
.984314 1 1 rgb
f
42.6811 737.013 mo
42.5567 737.013 42.4246 736.979 42.2898 736.904 cv
41.5162 736.472 41.9737 735.386 42.6865 735.386 cv
42.8109 735.386 42.943 735.419 43.0777 735.495 cv
43.8511 735.927 43.3938 737.013 42.6811 737.013 cv
.960784 1 1 rgb
f
248.426 591.985 mo
248.136 591.985 247.83 591.945 247.509 591.857 cv
243.825 590.849 244.972 585.514 248.291 585.514 cv
248.581 585.514 248.887 585.555 249.208 585.643 cv
252.892 586.65 251.744 591.985 248.426 591.985 cv
.819608 .94902 1 rgb
f
175.375 705.027 mo
173.615 705.027 171.882 704.004 171.551 701.759 cv
171.136 698.94 173.385 697.333 175.591 697.333 cv
176.895 697.333 178.184 697.894 178.899 699.098 cv
178.822 699.113 178.743 699.141 178.662 699.184 cv
177.881 699.599 178.321 700.7 179.038 700.701 cv
179.158 700.701 179.285 700.67 179.415 700.601 cv
179.415 700.601 li
179.83 703.42 177.581 705.027 175.375 705.027 cv
.972549 .992157 1 rgb
f
179.038 700.701 mo
178.321 700.7 177.881 699.599 178.662 699.184 cv
178.743 699.141 178.822 699.113 178.899 699.098 cv
179.15 699.519 179.329 700.019 179.415 700.601 cv
179.285 700.67 179.158 700.701 179.038 700.701 cv
1 1 1 rgb
f
58.3676 765.183 mo
58.0401 765.183 57.693 765.135 57.3297 765.032 cv
53.3189 763.891 54.6138 758.093 58.2227 758.093 cv
58.5502 758.093 58.8973 758.141 59.2606 758.245 cv
63.2713 759.386 61.9765 765.184 58.3676 765.183 cv
.941176 1 1 rgb
f
100.442 692.586 mo
100.423 692.586 100.405 692.586 100.386 692.586 cv
96.2579 692.528 96.3347 686.152 100.421 686.152 cv
100.439 686.152 100.458 686.152 100.476 686.152 cv
104.604 686.21 104.527 692.586 100.442 692.586 cv
.788235 .941176 1 rgb
f
257.278 678.001 mo
257.08 678.001 256.873 677.983 256.658 677.945 cv
252.871 677.273 253.658 671.678 257.14 671.678 cv
257.338 671.678 257.545 671.696 257.76 671.734 cv
261.171 672.339 260.871 676.938 258.234 677.845 cv
258.092 677.863 257.953 677.898 257.823 677.953 cv
257.649 677.984 257.468 678.001 257.278 678.001 cv
.960784 1 1 rgb
f
257.823 677.953 mo
257.953 677.898 258.092 677.863 258.234 677.845 cv
258.103 677.891 257.966 677.927 257.823 677.953 cv
1 1 1 rgb
f
24.275 616.971 mo
23.1384 616.971 22.0239 616.338 21.707 614.904 cv
21.2628 612.893 22.8973 611.655 24.488 611.655 cv
25.6246 611.655 26.7391 612.288 27.056 613.722 cv
27.5002 615.733 25.8657 616.971 24.275 616.971 cv
.960784 1 1 rgb
f
233.878 723.164 mo
232.5 723.164 231.119 722.269 231.138 720.496 cv
231.156 718.749 232.508 717.884 233.864 717.884 cv
235.242 717.884 236.623 718.779 236.604 720.553 cv
236.586 722.299 235.234 723.165 233.878 723.164 cv
.941176 1 1 rgb
f
257.738 751.407 mo
256.969 751.407 256.214 750.979 256.002 750.008 cv
255.705 748.651 256.808 747.818 257.88 747.818 cv
258.65 747.818 259.404 748.247 259.616 749.217 cv
259.913 750.574 258.811 751.408 257.738 751.407 cv
.67451 .909804 1 rgb
f
59.3203 679.45 mo
57.0866 679.449 56.4168 675.856 58.8767 675.268 cv
59.0653 675.223 59.2452 675.202 59.4161 675.202 cv
61.6499 675.202 62.3198 678.796 59.8599 679.383 cv
59.6713 679.428 59.4913 679.45 59.3203 679.45 cv
.972549 .992157 1 rgb
f
134.376 747.781 mo
134.223 747.781 134.066 747.772 133.904 747.755 cv
130.43 747.387 129.81 743.482 131.468 741.389 cv
131.584 741.399 131.699 741.405 131.816 741.405 cv
132.802 741.405 133.818 741.021 134.714 740.106 cv
134.714 740.106 li
139.482 740.611 138.874 747.781 134.376 747.781 cv
.788235 .941176 1 rgb
f
137.075 602.048 mo
136.759 601.024 136.043 600.12 135.057 599.705 cv
135.397 597.913 137.199 596.535 139.006 596.535 cv
140.076 596.535 141.148 597.018 141.92 598.182 cv
142.32 598.786 142.521 599.391 142.563 599.972 cv
140.683 600.682 138.85 601.376 137.075 602.048 cv
.941176 1 1 rgb
f
138.565 603.985 mo
138.111 603.985 137.656 603.898 137.224 603.709 cv
137.297 603.158 137.241 602.586 137.075 602.048 cv
138.85 601.376 140.683 600.682 142.563 599.972 cv
142.723 602.157 140.648 603.985 138.565 603.985 cv
.819608 .94902 1 rgb
f
135.79 602.535 mo
135.743 602.472 135.697 602.406 135.652 602.338 cv
135.053 601.435 134.901 600.526 135.057 599.705 cv
136.043 600.12 136.759 601.024 137.075 602.048 cv
136.643 602.212 136.215 602.374 135.79 602.535 cv
.972549 1 1 rgb
f
137.224 603.709 mo
136.699 603.478 136.206 603.096 135.79 602.535 cv
136.215 602.374 136.643 602.212 137.075 602.048 cv
137.241 602.586 137.297 603.158 137.224 603.709 cv
.921569 .980392 1 rgb
f
116.07 633.316 mo
114.387 633.316 112.894 631.104 114.442 629.571 cv
114.895 629.124 115.402 628.936 115.892 628.936 cv
117.575 628.936 119.068 631.147 117.519 632.68 cv
117.067 633.128 116.56 633.316 116.07 633.316 cv
1 1 1 rgb
f
94.5881 674.933 mo
93.5863 674.933 92.6054 674.396 92.2435 673.149 cv
91.6826 671.218 93.2829 669.933 94.8327 669.933 cv
95.8345 669.933 96.8153 670.47 97.1773 671.717 cv
97.7384 673.648 96.138 674.933 94.5881 674.933 cv
f
120.354 600.951 mo
120.326 600.951 120.297 600.95 120.268 600.949 cv
119.113 600.912 118.456 600.156 118.276 599.282 cv
118.741 599.068 119.179 598.718 119.555 598.205 cv
119.952 597.665 120.156 597.113 120.209 596.578 cv
120.247 596.577 120.285 596.576 120.323 596.576 cv
120.352 596.576 120.381 596.576 120.41 596.577 cv
123.199 596.668 123.084 600.951 120.354 600.951 cv
.941176 1 1 rgb
f
104.596 623.285 mo
107.064 622.255 105.962 618.699 103.703 618.699 cv
103.416 618.699 103.11 618.756 102.79 618.883 cv
100.87 619.649 101.048 621.914 102.243 622.955 cv
101.841 622.742 101.453 622.441 101.092 622.038 cv
98.5087 619.148 101.272 615.416 104.248 615.416 cv
105.209 615.416 106.192 615.805 107.024 616.736 cv
109.396 619.389 107.264 622.751 104.596 623.285 cv
.882353 .968627 1 rgb
f
103.869 623.358 mo
103.324 623.358 102.771 623.233 102.243 622.955 cv
101.048 621.914 100.87 619.649 102.79 618.883 cv
103.11 618.756 103.416 618.699 103.703 618.699 cv
105.962 618.699 107.064 622.255 104.596 623.285 cv
104.357 623.333 104.113 623.358 103.869 623.358 cv
.92549 .980392 1 rgb
f
81.5344 573.669 mo
80.9106 573.669 80.2956 573.372 80.0101 572.725 cv
81.1131 572.511 82.2229 572.291 83.3292 572.066 cv
83.3062 573.084 82.4115 573.669 81.5344 573.669 cv
.882353 .968627 1 rgb
f
80.0101 572.725 mo
79.9519 572.593 79.9075 572.446 79.8794 572.285 cv
79.6618 571.037 80.6643 570.305 81.6446 570.305 cv
82.3955 570.305 83.1333 570.735 83.2996 571.689 cv
83.3225 571.821 83.3319 571.947 83.3292 572.066 cv
82.2229 572.291 81.1131 572.511 80.0101 572.725 cv
f
130.537 620.155 mo
129.395 620.155 128.242 619.382 128.331 617.913 cv
128.412 616.576 129.443 615.936 130.482 615.936 cv
131.625 615.936 132.778 616.71 132.689 618.178 cv
132.608 619.516 131.577 620.155 130.537 620.155 cv
.819608 .94902 1 rgb
f
126.962 605.173 mo
126.814 605.069 126.69 604.915 126.607 604.703 cv
126.293 603.9 126.977 603.299 127.64 603.299 cv
128.012 603.299 128.378 603.49 128.555 603.941 cv
128.625 604.121 128.646 604.291 128.627 604.446 cv
128.554 604.436 128.48 604.431 128.406 604.431 cv
127.975 604.431 127.531 604.595 127.132 604.986 cv
127.07 605.048 127.013 605.11 126.962 605.173 cv
1 1 1 rgb
f
127.522 605.345 mo
127.324 605.345 127.128 605.291 126.962 605.173 cv
127.013 605.11 127.07 605.048 127.132 604.986 cv
127.531 604.595 127.975 604.431 128.406 604.431 cv
128.48 604.431 128.554 604.436 128.627 604.446 cv
128.564 604.983 128.036 605.345 127.522 605.345 cv
f
93.8022 636.68 mo
92.5233 636.68 91.2538 636.122 90.5706 634.957 cv
90.5098 634.685 90.3985 634.442 90.2495 634.229 cv
90.1637 633.956 90.1043 633.661 90.0756 633.341 cv
89.8408 630.729 91.8981 629.321 93.9312 629.321 cv
95.7016 629.321 97.4537 630.389 97.6578 632.66 cv
97.8926 635.272 95.8354 636.68 93.8022 636.68 cv
.882353 .968627 1 rgb
f
90.5706 634.957 mo
90.4412 634.736 90.3329 634.494 90.2495 634.229 cv
90.3985 634.442 90.5098 634.685 90.5706 634.957 cv
.94902 .988235 1 rgb
f
35.0938 697.255 mo
34.9404 697.255 34.7817 697.245 34.6179 697.224 cv
30.6639 696.712 31.2737 690.803 34.9676 690.803 cv
35.1209 690.803 35.2798 690.813 35.4437 690.834 cv
39.3975 691.345 38.7874 697.255 35.0938 697.255 cv
.941176 1 1 rgb
f
105.231 785.065 mo
103.508 785.065 101.814 784.079 101.438 781.887 cv
100.949 779.033 103.239 777.366 105.48 777.366 cv
107.203 777.366 108.897 778.352 109.273 780.544 cv
109.762 783.398 107.471 785.066 105.231 785.065 cv
.972549 .992157 1 rgb
f
35.8059 664.135 mo
35.3415 664.135 34.8469 664.018 34.3398 663.752 cv
31.2481 662.129 32.978 657.783 35.8049 657.783 cv
36.2693 657.783 36.7639 657.9 37.271 658.167 cv
40.3627 659.789 38.6327 664.136 35.8059 664.135 cv
.882353 .968627 1 rgb
f
55.471 633.395 mo
55.2451 633.123 55.0634 632.784 54.9452 632.373 cv
54.3548 630.32 56.0547 628.958 57.7014 628.958 cv
58.7701 628.958 59.8165 629.532 60.1992 630.863 cv
60.266 631.095 60.3035 631.318 60.315 631.532 cv
58.7189 632.146 57.1029 632.768 55.471 633.395 cv
.941176 1 1 rgb
f
57.443 634.278 mo
56.7043 634.278 55.9765 634.004 55.471 633.395 cv
57.1029 632.768 58.7189 632.146 60.315 631.532 cv
60.4052 633.207 58.9031 634.278 57.443 634.278 cv
.819608 .94902 1 rgb
f
30.5059 636.163 mo
29.8208 636.163 29.1495 635.806 28.8573 634.966 cv
28.3664 633.555 29.554 632.553 30.7024 632.553 cv
31.3875 632.553 32.0588 632.91 32.3511 633.75 cv
32.842 635.16 31.6544 636.163 30.5059 636.163 cv
.941176 1 1 rgb
f
256.648 524.139 mo
256.122 524.139 255.585 523.925 255.133 523.412 cv
253.747 521.838 255.248 519.832 256.857 519.832 cv
257.382 519.832 257.919 520.046 258.371 520.559 cv
259.757 522.132 258.257 524.139 256.648 524.139 cv
f
293.146 461.299 mo
292.308 461.299 291.615 460.137 292.439 459.443 cv
292.648 459.267 292.871 459.192 293.083 459.192 cv
293.922 459.192 294.614 460.354 293.791 461.048 cv
293.581 461.225 293.359 461.299 293.146 461.299 cv
.968627 .968627 .984314 rgb
f
272.24 503.291 mo
271.815 503.291 271.378 502.871 271.623 502.373 cv
271.744 502.126 271.952 502.023 272.162 502.023 cv
272.588 502.023 273.024 502.443 272.78 502.941 cv
272.658 503.188 272.451 503.291 272.24 503.291 cv
.941176 1 1 rgb
f
257.676 577.139 mo
256.931 577.139 256.199 576.722 255.997 575.78 cv
255.717 574.472 256.778 573.672 257.812 573.672 cv
258.558 573.672 259.289 574.089 259.491 575.031 cv
259.772 576.339 258.71 577.139 257.676 577.139 cv
.984314 .996078 1 rgb
f
248.724 503.314 mo
248.201 503.314 247.861 502.519 248.427 502.197 cv
248.527 502.139 248.626 502.114 248.72 502.114 cv
249.243 502.114 249.583 502.909 249.017 503.232 cv
248.916 503.289 248.817 503.314 248.724 503.314 cv
.960784 1 1 rgb
f
216.51 560.214 mo
216.178 560.214 215.837 559.963 215.916 559.541 cv
215.975 559.224 216.22 559.083 216.469 559.083 cv
216.802 559.083 217.142 559.334 217.064 559.756 cv
217.004 560.073 216.76 560.214 216.51 560.214 cv
.941176 1 1 rgb
f
183.009 506.219 mo
182.556 506.219 182.112 505.972 181.967 505.404 cv
181.754 504.566 182.441 504.031 183.107 504.031 cv
183.56 504.031 184.004 504.278 184.149 504.846 cv
184.363 505.684 183.676 506.219 183.009 506.219 cv
.576471 .713725 .666667 rgb
f
176.083 593.167 mo
175.205 593.166 174.335 592.637 174.23 591.51 cv
174.11 590.208 175.136 589.504 176.15 589.504 cv
177.028 589.504 177.898 590.034 178.002 591.16 cv
178.123 592.463 177.097 593.167 176.083 593.167 cv
1 1 1 rgb
f
185.879 562.164 mo
184.165 562.164 182.399 560.523 183.322 558.489 cv
183.801 557.433 184.676 556.992 185.565 556.992 cv
187.279 556.992 189.044 558.633 188.122 560.667 cv
187.643 561.723 186.768 562.164 185.879 562.164 cv
.960784 1 1 rgb
f
235.01 525.742 mo
233.211 525.742 231.982 524.856 231.323 523.645 cv
232.878 523.048 234.069 521.605 233.779 519.468 cv
233.663 518.62 233.351 517.939 232.913 517.417 cv
233.492 517.106 234.188 516.923 235 516.92 cv
235.005 516.92 235.01 516.92 235.016 516.92 cv
240.685 516.92 240.697 525.725 235.026 525.742 cv
235.021 525.742 235.015 525.742 235.01 525.742 cv
.941176 1 1 rgb
f
231.323 523.645 mo
230.203 521.586 230.732 518.589 232.913 517.417 cv
233.351 517.939 233.663 518.62 233.779 519.468 cv
234.069 521.605 232.878 523.048 231.323 523.645 cv
1 1 1 rgb
f
219.741 443.407 mo
218.477 440.412 li
219.701 440.627 220.742 442.069 219.771 443.368 cv
219.761 443.381 219.751 443.394 219.741 443.407 cv
.909804 .886274 .941176 rgb
f
218.374 444.109 mo
217.027 444.109 215.717 442.534 216.769 441.126 cv
217.161 440.602 217.666 440.385 218.166 440.385 cv
218.27 440.385 218.374 440.394 218.477 440.412 cv
219.741 443.407 li
219.354 443.903 218.862 444.109 218.374 444.109 cv
.607843 .74902 .815686 rgb
f
131.468 741.389 mo
128.32 741.104 125.669 737.016 128.551 734.072 cv
129.447 733.157 130.464 732.774 131.45 732.774 cv
134.744 732.774 137.702 737.054 134.714 740.106 cv
134.714 740.106 li
134.552 740.089 134.394 740.081 134.241 740.081 cv
133.021 740.081 132.086 740.609 131.468 741.389 cv
.972549 .992157 1 rgb
f
131.816 741.405 mo
131.699 741.405 131.584 741.399 131.468 741.389 cv
132.086 740.609 133.021 740.081 134.241 740.081 cv
134.394 740.081 134.552 740.089 134.714 740.106 cv
134.714 740.106 li
134.714 740.106 li
133.818 741.021 132.802 741.405 131.816 741.405 cv
.988235 .996078 1 rgb
f
117.044 599.55 mo
114.647 599.55 112.306 596.764 114.159 594.241 cv
114.858 593.291 115.768 592.897 116.67 592.897 cv
118.555 592.897 120.404 594.617 120.209 596.578 cv
118.691 596.646 118.028 598.076 118.276 599.282 cv
117.878 599.466 117.461 599.55 117.044 599.55 cv
.941176 1 1 rgb
f
118.276 599.282 mo
118.028 598.076 118.691 596.646 120.209 596.578 cv
120.156 597.113 119.952 597.665 119.555 598.205 cv
119.179 598.718 118.741 599.068 118.276 599.282 cv
.960784 1 1 rgb
f
68.3375 591.645 mo
67.1883 591.645 66.0492 590.354 66.8914 589.111 cv
67.2283 588.614 67.6886 588.408 68.1474 588.408 cv
69.2967 588.408 70.4356 589.7 69.5934 590.943 cv
69.2566 591.439 68.7964 591.645 68.3375 591.645 cv
.941176 1 1 rgb
f
82.2579 511.693 mo
81.4494 511.692 80.6232 510.875 81.1124 509.94 cv
81.3455 509.495 81.7261 509.31 82.1107 509.31 cv
82.9192 509.31 83.7454 510.127 83.2562 511.062 cv
83.0231 511.508 82.6425 511.693 82.2579 511.693 cv
.345098 .54902 .470588 rgb
f
117.65 697.005 mo
116.406 697.005 115.132 696.072 115.413 694.491 cv
115.627 693.286 116.556 692.745 117.503 692.745 cv
118.747 692.745 120.021 693.677 119.741 695.258 cv
119.527 696.464 118.597 697.005 117.65 697.005 cv
.788235 .941176 1 rgb
f
45.9067 814.77 mo
43.4049 814.109 41.3639 811.371 43.0557 808.478 cv
43.9176 807.004 45.2157 806.393 46.521 806.393 cv
48.2747 806.393 50.0408 807.497 50.7751 809.09 cv
49.0362 811.17 47.3949 813.076 45.9067 814.77 cv
1 1 1 rgb
f
47.044 814.921 mo
46.6618 814.92 46.2792 814.868 45.9067 814.77 cv
47.3949 813.076 49.0362 811.17 50.7751 809.09 cv
51.2756 810.175 51.2971 811.489 50.5093 812.836 cv
49.6474 814.31 48.3493 814.921 47.044 814.921 cv
f
140.229 570.702 mo
138.593 570.702 136.978 569.733 136.735 567.639 cv
136.443 565.132 138.429 563.745 140.386 563.745 cv
142.021 563.745 143.636 564.715 143.879 566.808 cv
143.527 567.361 143.532 567.912 143.744 568.367 cv
143.252 569.884 141.731 570.702 140.229 570.702 cv
.941176 1 1 rgb
f
143.744 568.367 mo
143.532 567.912 143.527 567.361 143.879 566.808 cv
143.879 566.808 li
143.947 567.389 143.892 567.91 143.744 568.367 cv
.972549 1 1 rgb
f
63.7947 495.121 mo
63.3197 495.121 62.8405 494.8 62.8774 494.189 cv
62.911 493.633 63.3399 493.367 63.7721 493.367 cv
64.2471 493.367 64.7262 493.688 64.6894 494.299 cv
64.6557 494.855 64.2269 495.121 63.7947 495.121 cv
.960784 1 1 rgb
f
68.1461 523.883 mo
63.7815 523.883 63.1037 516.912 67.7529 516.334 cv
67.9392 516.311 68.1196 516.3 68.2941 516.3 cv
72.659 516.3 73.3368 523.271 68.6873 523.849 cv
68.5011 523.872 68.3207 523.883 68.1461 523.883 cv
.345098 .54902 .470588 rgb
f
26.6186 538.283 mo
21.7561 538.283 20.7725 530.483 26.0222 529.637 cv
26.2946 529.593 26.5566 529.573 26.8085 529.573 cv
27.3226 529.573 27.7936 529.66 28.2183 529.817 cv
29.0458 530.867 29.9014 531.813 30.7178 532.64 cv
31.3881 534.925 30.4348 537.73 27.4047 538.219 cv
27.1323 538.262 26.8705 538.283 26.6186 538.283 cv
.941176 1 1 rgb
f
30.7178 532.64 mo
29.9014 531.813 29.0458 530.867 28.2183 529.817 cv
29.4916 530.288 30.3496 531.385 30.7178 532.64 cv
f
26.7395 494.707 mo
26.2188 493.263 25.8879 492.356 25.8879 492.356 cv
25.8879 492.356 26.318 493.125 26.9571 494.251 cv
26.7395 494.707 li
.741176 .709804 .917647 rgb
f
25.9904 494.996 mo
24.4217 494.996 22.807 493.484 23.6647 491.628 cv
24.1055 490.675 24.8978 490.277 25.7025 490.277 cv
26.7066 490.277 27.7296 490.897 28.1108 491.83 cv
26.9571 494.251 li
26.318 493.125 25.8879 492.356 25.8879 492.356 cv
25.8879 492.356 26.2188 493.263 26.7395 494.707 cv
26.6467 494.902 li
26.4336 494.966 26.2124 494.996 25.9904 494.996 cv
.647059 .588235 .788235 rgb
f
26.6467 494.902 mo
26.7395 494.707 li
26.9571 494.251 li
28.1108 491.83 li
28.325 492.354 28.3367 492.978 28.028 493.645 cv
27.709 494.336 27.2057 494.735 26.6467 494.902 cv
f
150.313 488.587 mo
148.712 488.587 148.664 486.083 150.288 486.042 cv
150.301 486.042 150.314 486.042 150.327 486.042 cv
151.928 486.042 151.976 488.545 150.352 488.586 cv
150.339 488.587 150.326 488.587 150.313 488.587 cv
.741176 .709804 .917647 rgb
f
166.202 514.278 mo
165.137 514.277 164.051 513.63 163.654 512.636 cv
164.226 511.521 164.984 510.461 165.964 509.493 cv
166.026 509.433 166.087 509.373 166.148 509.312 cv
167.694 509.453 169.174 510.912 168.397 512.77 cv
167.952 513.832 167.085 514.278 166.202 514.278 cv
.576471 .713725 .666667 rgb
f
163.654 512.636 mo
163.444 512.11 163.427 511.486 163.711 510.809 cv
164.155 509.747 165.022 509.301 165.906 509.301 cv
165.986 509.301 166.067 509.305 166.148 509.312 cv
166.087 509.373 166.026 509.433 165.964 509.493 cv
164.984 510.461 164.226 511.521 163.654 512.636 cv
.882353 .968627 1 rgb
f
128.282 496.891 mo
127.84 496.701 127.443 496.419 127.137 496.049 cv
130.515 491.326 li
130.536 491.332 130.557 491.339 130.579 491.345 cv
128.282 496.891 li
.831372 .815686 .94902 rgb
f
129.682 497.177 mo
129.203 497.177 128.72 497.08 128.282 496.891 cv
130.579 491.345 li
131.857 491.736 132.89 492.85 132.678 494.562 cv
132.457 496.353 131.08 497.177 129.682 497.177 cv
127.137 496.049 mo
126.675 495.492 126.42 494.736 126.536 493.803 cv
126.757 492.013 128.134 491.189 129.532 491.189 cv
129.863 491.189 130.196 491.235 130.515 491.326 cv
127.137 496.049 li
.772549 .737255 .866667 rgb
f
151.982 470.788 mo
149.518 470.788 146.969 468.637 148.014 465.613 cv
148.64 463.802 150.083 463.033 151.556 463.033 cv
154.02 463.033 156.569 465.185 155.524 468.209 cv
154.898 470.02 153.455 470.788 151.982 470.788 cv
.741176 .709804 .917647 rgb
f
45.3826 514.516 mo
42.7361 514.516 40.0283 511.856 41.6095 508.787 cv
42.3706 507.309 43.6279 506.695 44.8998 506.695 cv
47.5464 506.695 50.2543 509.355 48.673 512.425 cv
47.9119 513.902 46.6545 514.516 45.3826 514.516 cv
.882353 .968627 1 rgb
f
112.989 518.474 mo
109.778 518.474 106.932 514.25 109.89 511.329 cv
110.753 510.478 111.718 510.12 112.652 510.12 cv
115.864 510.12 118.71 514.345 115.751 517.266 cv
114.888 518.117 113.923 518.475 112.989 518.474 cv
.941176 1 1 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 19.2.1
%%For: (Sergey Gerasimov) ()
%%Title: (snow136\(mar50\)_ver-04.eps)
%%CreationDate: 8/24/2018 5:32 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB3XA!fC8Z_Y&""=L]p1#]nhZJ-n5StJcPp@!l5F[cC>EkDh$Bq.0QHbF(T=*K,G]N?G!:FZBMAl-+%!jWjM'umB7O;KOQpl
%(SNj@p-hN'@,MI>ESnO5XW8onEq]Yi',<qWGG(ZM8Wm\h.*W=)felB!"GuuQZq@MJ[uJ&'<TJ$VWMu?Ch=2e@8T!@Q</272G;$"s
%p=#@)V+MEt`3X8/USr3&dp&!oj.ZZ?8XFDZlRqg]!RPJ,ShFYZE2k$""tUA+7c8&`7g\pSE#'P3a"+^'F:DM2'Wq<R6D3j"B+A4/
%4-J7sKC/G)3.fN@9?B&jV]+]f^-36Y1dXA_7+c_26"dd=(C(V9p`QZUr'h%=$2]N$d^d.WIR9YU+73R^H1LbFRY*?r35W_?cqIR_
%a:ArW1I8ZE7)>VQlDTjh>DshA-H]^cOoc<YJRp'%g7<dB[KKEKPiW#N`.B[^,0M,A@+ZmJ#QbbB4t=?NX(u&Lj<'9WF2rJU93#-(
%QlXe<K(:iSQ/dZKa+>]H1`)uWdV?P^WNq!/<X^+S3ML1BlqFJ&.ZgDi:.CMQ#e6gas&ot&8[$;A8@58f&ANC9!b&R/pKBTAQ].`(
%ZmN?IaR,^FK3'%d.@N*4T&N9Q$b27RZ9FEc80>l]p0oX10IKH&phnE.L-pUHe*r0iH'$hi?)]@A*L]AqUc?qglQ]]7p;NJB%N%2U
%\:-mDf31'D_(arYN<`%?P%QE?+JNKP1ip669kl8uQ7i$&!6&W(cDXq&C@-MeD(nA]A"eKMPg2/MTX<+^hnP_OD*f\Tp7UqHf6X!(
%];C#V(5u>&ZL#2c.u'o'UT;+enf)r_q1;^kI77GA^_lRsJVcuk-T#C"^f-SJAh3Mm?g[m,oEW&6'@S&=4I^6gOB&FC)VB`711FRT
%g61mA%F0JajTi.`5c=UC#Z*GI4H0ZQdK-Z3;)$5@p_*X49jX^>.I@X5i,b'!r7(?c@[O1hYkcf@W;MuED8\b>2Ca^F0s.e^ACRd0
%1ZUkLIsm!iksuO#"%?5K$WmO3!M`PkkXp+-]#c#E#%(6Ve?1G2F)*?LQk)$te0`u1M0"j-!3[`YX'LK`k1@<i+Q5$#Go8=c!KM;.
%l84`_0;8-O%D5GKoF^K99^XgoKR.r4_iXQb7GGcDj/a$3n:X%`Zd0W;k4BQL'/V>i/2gqb<<`#.N3/HQ;tqem?KRLC'O`Q6.MroX
%RG@3>C<2VDFP[BPKjUsfVCLDfZYoN*4P1+>U<80s>sn<rQ4"Fdp*f2:2E;b]:4J0#IsMkU&2g9n-I,]V.>HX0HEG^`&\>0mO?,.o
%O:>@V&':-QV7U#V,kCmQktAD>0)\>-WX;,s420Wq].LG+=4aQQ5#UHLUs\?K-D>gDlM#4XhnSQ-s-AMR%ak,'^b>P"*]tG)?Om*V
%)&E7X)$^,8K?d:2&e52?d[>2,SVH$43Y$q4(?"-!Cmop-8s<sEPt@fNkU2LM_]bh#37nq/U>[4n7#FNIOsrARa`nFbV50L>P8kQ9
%P(nT_&kO:08O3#<+q]St9^m"?#mLl#6,Gp\WT-S"(`236**f"n1N>HN`Mr=`iWLBk(/o/t6i[c%OV]0!()]([3!bIh8k99qe6*=c
%*Y&Yi7\J_5i#iS&d*haNpMYF!%M=59#cLmtJV/]0j9_DC,i_dA+=%S)S.j:8)uu]ERU\;a%[&%K8Qd/M$cMi>ND79PJ0W?sX8iJ6
%MniKf_n\RE'MH;/YQSP>+tsRj!AX[!!*Os`!t/`1Ek[#jSJ^sRL4d>J#mZ"k3^]h(5YSt(VA%Mma+n=KJoq'6hnPS/pJ"6Ubs/?C
%e![!XQTU?8aVpEfYad#g#qTLIOGsJ/,!`S7+C.PM%M;g\!@b9IJOI>1[S1+T@^%C\+A6EAOp$ji6uk=SJHTOL30RI!6nCPnH:U"$
%/3-gM^4-7,6#o=;RDDdRA-U/6LulU?()"dtP*?*8&g$+e_\,9[$/s;T)[S&7+RPJ2+M"0(TK'fOM\I]oksto>"4!&2b)uhErrd;u
%ju`lrLG[662s*!e3+ML2jK?U),d&*r_]_jFL)^Q+.%19:"'MT;*(fp"JGK8s84AUI:d"Yrn<_,2KK>Mc,THsJ?-"Fi5in4!2[+\p
%5X;-<R#n+W*<MTe!W=l%$!)n;UKrZNK>en9i_52PA=Kq)RP!a,.Hq[^)Yf>()rYU*ZJaZa_;MC6?^dXlG[[,kJ2>%Zr??VXN%qO>
%.)9;>)%0sH(U1jqV_Q2*$f_B0(h(T4*:[AW.6ANR39r4,'VJ![,Y7Pp&/dIUp_TDe,!d?HLI<\R`!d,d=O@'f1,/Jb$ib;C08KZ1
%W@@a@'9%'1n/7<T9YnIHrr(=WN;/llrmZb4,[oNGHA+56"tN>S4VC#,5]a_U-:(RTO;8beON'=)J5jlt&s0aNNq4$q+\P=GNFb.b
%nQ*$,as#k5$3U4$/0<Lb`"!083'L%8R2c@ql/EUsnVVK"b2O<#inUKmImDK_k(pGk@1.gs)KZs'2[X=b"-UK/#sm,cNbq2t>K\jg
%_(6kJY+Qj@gK"fc%^J9+kJ7cSqjR`#K`#]lZ_"Pj*b/>6e&I6sRjYFQ:P"d$JJWlc5D9:F:_jf8^`W'u2i-B<in.H\6/#1(O[2;<
%dZ9>'N=@2WTcY>&)\HPB3;,U/n3dhh6(eJ"$2R"5e8Q\NT^W&r(6?-FKM+;a8atY1_68Cl`aL'BPQ=9E1g2kB$qu1\-hILCj(Jc>
%/U0hmr(q'_+tYKba:TQ(K%prY?S(tP%S[$H<Y3YS*.2Wj"Qtd)2K8OA84Bd'*6>o>nfn6tLkQ+bO@"jn;^,k6IS`._Ho_TsEHm?B
%?DO#LC8B5Hr>Q5n(jquiJAVVL0_*!nGSrL/1k1\>OhsWB3\oiK<$1*0r7@/YK"u\k/2N3d[t(SAZLB;R0sD1]^lgCe?k3&A&c3,<
%!]-,FRe"L.?Xug%.=7rQ\`M,$3Y>#T.;p(TCSnHnNhhM6aqEW`/NL^H7UZV@15=m`*0@;HJ6]@F9SllK'"0ng<.cHR`3R<h=lN\,
%Pe]&-Uo5q4ZqG^A1aQVAZ)%["Ngq8YRD->$dN[\,52jQh8o"]&5"t4F-,YrT//9:!VG,Y5J>@a>8V&;k-LYfcVefZALIiI[;E/o5
%&:&fp8>VE*^qu5lK'8nGkU2&p#[gM?MOZd9(K/n-i&h:#ngP=rS99@k5\+op,e#B#a<d<O.2SUILJK-S"^FZ&\kbB"@NAb](9\@:
%`nU>bIGgE!E=4#uEsuipUZ3Hl-!L4=%e,Ari"p$@12t@oR&.d!#+PI)C+a:9XJr>!VV2qLa=Z<bE!^U/ig%Wb\AKbZ977lSq."K#
%7j<dX%;3#('M&jY9&VlX%J`OA9d%K-_J!KDE?:'t1/\Nk3"^Ft3CCZ=`!H`=$KocMaDis`'SK]s.m?->R)M'E:()#)DJ&*aQ+)ZP
%2K'HUI&-7o[LO[s_NMk4ek-5h(BfOB7=l(J4sEUT&2S@hopI5S;Bg`GU'M/E(*6iH@L8Yl7<t$W;1E\YU@\u.-b<u';'<[fTo16p
%MM:C&>q]V'6D/&f5S>9PfSKg-#u]j2#Rh$G+=NQ<+c^cKia34M<g6/JM_TC[Aa2,fOt[g_2b+`S2:.&`D<J6D#JT#bjj(96N'F5)
%$G*Yll+a)P`I,M:>&"up,EcL!9"ATUh2lO_!9:XC%Du-`MH\Ql2MRlPgY'$_Da])6?`<f(NBmgjf0[4=!Y!ec%g)]ke=Hj:;lL[p
%0jps"KV;cS(>RJG,L_a>HGf6&N=@itFM&afQNoYPRVrmhGsL??lqiLN96%AgO@nSU<0XBf>S,8`OO<RZ>h:Tjkr@4tmD9\44WlZ`
%^#]]gH*`>s:G;HA\Qt>q;oe5^Pq:5=1I7tA'b&'[N3hFpFLi;!m2tl8liH<Q+c!Qb*ALjfp/E\7hZfU=`JbGrFEGZ'=3g%#HOlq%
%Mu=WIT+uCrFNiIPej[Q>IWuJj2m>e^1N)14UkMT'P&bQ2d;Z471APS")0D-b)Nn8o`Z%-)0W#@Ahe#/gNt]V9O,]fEKh+MqknX$8
%g^`<I,>STi>[Qusn1MF7mQk.Xcmj"=1492X.CnT!/Q93j6Y;b/bng_FP0,N&<:7M`b11S?i^<BD;nC._DOJ`IcY[:D6d]R5F#aah
%FIC<(F1Gj7\'3s"\_Lg$Kk.nq0'<P/KurF#e/-3g]HK$0q-68c+fg<O<7QHsmL+,pR.$CP"t-srf=fB2S$L`eB@.MM)t4CnGE$?0
%rh88>eii,2DX\N6!Cp%kgJt%m@Q`9)4)Xc-T;i^6?CdcqpO\#6X'V?j=nefeF)Sb!>-0:o'=?_*g9=`Fq?=lU+gkQDd3H6%Z@X/W
%o!:&7D](7Q^Jlko5mqR21?W*35e!ZCUl&EU8DXmr!+21JIt\)Q`5>#^SDGf+9LBF6,S%'HWKNkPX/!)a[MQ;7G*s5"hXO6RmB.U\
%$GV%V"\gs#/4"LlJU,RrnJu]ZT+=:emg4ug4eV?>b[ZUEVR2>Q\"_7#T3Fe$;Uq9P2_8LdoAqS2I'V*RpK%P]7gB"\(h[ikEm1!V
%nDG(Nj'j#f1D%nQa'qcs$P)gqE:C`"ECHAu*16QaK,9I#S>!caFN%q#AAcT5fS/mTTC=+ImhPl\p$s!NSdbOAaea(V=2^^ihtia5
%n"T1530X$HN$u5ud>iE>qjRHXUT7Mbo(cR2'Y3#\1CfnBn+'mM?o.7_9i!=.o:fhZ>=rY!Ra>XAD\!ZLQM56DL&3dLW/"T2d6h&_
%?797bcAL^`"hi(;Mrg@6CTEj>*9Q(_Gedb8d`O@?mkiD'/Nc"l3D;f+Ao-n[fN0b5?>bdkGN8@ODYmWVYCDZtI"f80?U;B?_NW$Q
%+L,Se^;.?g^Yk+AT%%<=FkoF#3;:#`V&rRmKgQ6SI@'GdTIf:/$9[[/?Tt,j-Cbs_8&oH`]\]56j80J%R-XS*BCRiaV['JqHe7Kc
%M1tIP=!"N;,o]ao/Z\#L#<gUr5'E>/IW5l7f058Qa"B1A2CYKW;5K//?9ilbFV`EeZm6L6_kjeqaE783%JP;G8.L$;N\LIr-2b"K
%kLhW9^Q83u:EK.[`1iN;bdZ(t1(s1qh`M4rghV\#P\pE-_ZLMZ'>\t)qt5I.aHCht[[P7]82^=^HS7I(eCj@o;L_<R`^Kl[6>K-'
%8#\?hB8)KR'f7a#@@fC/W`RZWQ5B).@'d_FXgL<*MH$SI>.k7>$eu#uJS0\&WjH?Z_g_WCUfPbt0AEp@TX-sWQZ8b_JR-g+@OOH'
%1!9Tg=h<\1\<YHGgUu%E9t4?"ika<Z\R\KbN\QpHW^6EJ=`4iKWd8s1QjGY!bX-%p/PeiQlVFY@$Tse.+tRr4bXI+aq$K2\]HFIm
%jbr4qP^0:TH;]s;fCe6#PY"l63S92JKgQ5HC&69H4nS<0]]EIaRBX[uBXo74;*5`_q;7,$24Wi2fSe_mM1tIQbIo=I]dRs]Ek_6R
%'_4Jm(WDS`T6h[Q(&"AH6"86!3K(Tf`KO]S]lndW]dR3K=I9A3:A1D5_H!$ngf*6)iBC[-B$&68IX%H^D0S]K/De8n(5EKOF;;,e
%_3]Is@6@adiFg#lIWN&8&cJ&_@bL<D5;Rdsfp@']ngC%bZa=M?Z"r.CY'D/+d]P1hg=!,UKO%7:E+TujIB@H_7SI)k[A?n#Dd0V\
%YkFoF[A?l->.+C;<HDLZ.fJLfoo!M=4HSJcFTHH\7\<a,I]5dX8?c'gV&Bfa$qp@t%ib:;UouoJiH)i\.N/ELOB;FEe\!C1.Xd"T
%)jg"/nj"I+DJ<UQ>d.lPDc,4g\YcaS^Nag-VcQBSN0L5%k?Y<u6L>.EQfa2i$`2TD:ICP1f^`/nb@dOH`Z)sr"<3:!+;E63[m'O3
%PhG!R,@_GH,?ae7pu"(8TAfee2#.'oD'?7/5X+eXQ[&su^=GCEb2-IG4mt\M2`):^)um5A0]+crXBPX:Y.;dT/b0qlgUu;(MUq'+
%>tA6SHK,Fc6Joap@CM>!^dGB13NciRAd/=*=kMs>LN2(!#&p5JR'1eN@GH"1!?@L&k(=J>gROtZQ#suYZt.(4#?a=\kW.^rHf+TY
%Vm9,_nd@Xjn@(F"7D'3%8_u)DAt\7VI`q&lMg,-o.m36?H2Z=sOd=UKQe-_Rf70.U_H:.E*J;`0qX="On*c;Yd1p&HLj=q)Qe-WJ
%ZiDrGooeDoh_B].ns]%<Rd\"jcrZK9Xk/i%=rUr7[MPY7csp,)pIeOemH8R*<MeP+!$G0*&)d)1iGaR?`<fjF7D\#Jlj'1r(,^=j
%)Ekb<0tLGn#/TKW[a2Xb[FG']3*X^rr2H_IoB$OK's_D)Cfqoc<lgRAZGiu.Gm\6"5ah!5^G'hcGtP0@bAoZK;5,$4hkei1fFLDL
%AL"(qeX34,mBP9NQh@[f8>"h6S14E=[!Ka%f+8GUPRTW'.HEUa,HL=YA#70K46&(j9#64;*3tGXh4'Q_'98SoSek;k_&.U^MTW7"
%0\=:!DF^ip8?`&u3sXnLl7C0.Irul6nl1GDfO\Y#HLNN[C-PR0rn(dbGZbegQA(Z:iFQ/:=Vb>0KpQB0AZDXpAJVWA@T?iUrFK,V
%RH"]t=a9a9iFR1UnFp64?5AW1+U'CT=m-4@(OaZKf=@1?;am!`a_7!+BsAa<iT1(@oDYs#0+Vf"5&=[lE*,;?@Rc0!h_R7lhXM,j
%b%!oG\ri>DZ1[geF.?`m2Xeq2q';j5E/r*h1!QtEr+*ArpC>W`6Wk8`\9nA,f6RMI-ht9#qU4s!9=#8[Gd^Rb86,'?ng-0nQ%p(P
%([oLRR!j9%*Yl,rSUH78j5EFheT"W&?rOpLZ]d*s3-]]&.L)>[[@_g3V:B<dfg+8ab>jTMH-t&j$]O+q0aIJ$h#3\`^q=[LX1g-3
%RA#&>%#neR[HS>#;lP)sMIs]Lb28>g(M"Gi[r"qOi2k:^OK8\/]YoFY$jXHhi?]V:@6E2G@k8_1]W>To?mbB^l58<^N\T,dYj_h]
%(g_/`ehQ;Fdp:NZ(<+`TlPT5.`g:h,AK>8Hl51p:1F,bCX-WS7=3/^&\l:C0oitG.Cs+a69dP`Sr(Kqer8uftZU*S$<(P_H_,-*5
%\<?#?RYfs[MX'HWklL!nk0UtE!f3e17h:l]Y+3o$pR^0CGY-SCi+Ib5Q\Q'YH`[[[K0MJTT,W#@c2R9"6_9N_q4OEG@;7p;%E-W+
%KGiL6)pFbR[Cg/`#+M0I?9\-U><_grL0/_X.i/.n8\b:.8[BrHI-.\"J#`!:m-3W'$6lgD7D\*7:V7t21VA.\;[0rYV:s8OjL$P'
%H:]U$dY9DNa=PPi0/(Djq0"DE.*V^'YJ,oINOufPOij*8$ORr2A5!BS(@?.ZQS)_lDLJK>2XtqUfH,36rTQ*217)5-Ef6=.Gr'Nb
%Ci5Zc/[MurCmNc017K6.ju`cLbA?SsA92*sHe:*G>GQYl_dbA91nF5gfeT+&VK9q&m[m[nANKRX:$:04Pg4P@Ams,u#l+W:3c@R5
%InFpcC"9dIH#\)PI-rNGF'n=2"Wm-VSp/ld@aC>/OP27X/$XIck48>8?g5*6?bd('+-85/Auhdq\8&`UH)I`9Q"J6QT$fYt7598Y
%GUaMQNF/]P.^]F=.p;N>k30A-.?A^)RMob!i%:`?IC\Y*5C;nEg_Vua)M!*o%_DFlO3'%acMe1p_IC85cbn3rXOg8q[5NK+\!JXS
%\At]3mq9PeD=4Fs@dqGa/)j$;\APE;oDF?F6:LGZ`XP2Z$7cYaA\(%<-<4T[BFTPH'A.egLA0<JcF\GoN6.^_8TX&(BFh[%rN3GQ
%Sur5XOL&CMkM]i-Z3oJO(04_FZU+u1T&9IUX'(0Q.0[`t3H#^E\,PGTYVF4%Y'hIg\Z[(C/0feXNXS,E:>U]853M$aBK##;^H,P&
%p66hNlnZUaKY?#6,_7&L/;'[.;"P!FU1I$jgD<blFEjL3U+]Tbs(WL;58?(-K:le\q[Wllc#GFTAg!aLM3eJ1h&Q1aQiS2jq8Qju
%hLknLR/+b<Mreg$d-sZ=@Ph8oV\^1$P_\m;U7Ql'psh8GX,<%+Pd)[udQ,UX6(<)]kf(@kS`>+e@HeaJ+[K62#O1'</:HR<qo2(+
%+>7([33PWoT<TDp_iI$nMM7:N0DGsJYOtrd0E";5WR$0!`!bd9q(]5In@GtkA],D__*fj]L@an>K8$PgUlVa?;4j@7e$6k6]a1>A
%\-SsNm[_o@o^5K,P.&`*SZ:pePB:ZUc,A4kNrJsi<qH1cK&ndDAuJ+[YOIX4Lkd[,m[o[4kGh3360I5lE!PV/5@icsmB-75o!SPM
%83RW8cFle7QP'j^MLY!Wc!THsaTCsDTg[/C4a.8I:6T#@a1Vn[B;e@.c!]GZA3H^O1TZ)M)i"m%m"N%Z;4XM1*m3CXi>\u^`rYBA
%>E_aa?+F-01\-fa/B[hqhcCW#USX@&>0P'kDp/hMh&M#F*-BAF;4$"mR[5r^bb<71\^JNrD`!jYWlO9(c\71M9d\+CP$XG<7WAZO
%H&J`g1;ipco"*Ucq.I-<rh1'Sng-hBnLR7rdd=(+1*h7-7Aic@>!!7ii+EHeXRcb/Y-d":hnP_+E1:7DjjbFM]tePAJHa#n>$:PF
%oNo#c4-SAr?.OE?H55!jXjLdi-7)YllDFTf5`;).DSt@<V(n]i462<'$N_RXQh(GY)m__]_7157XK=i(j!+j3s.Y-$pC$s!jbm_T
%>W3#RJ`'g1a4%KjZ]2^CSI@]63(RH-Sj@DB5t\B((6hiiPoV!aGCfbG]:@5f-_W=tn0cA84@_[i)!-".1-a+ebHp\hVaZmdi<)[C
%'T:7u'ZkCj%)jurmk0WTYr>G6rBfC:i6rX8q[)?RSbX>!$"*?e1gV=7JXNRC5eKZ.8[2Ki77877Wmb[JQW2WlA.uM$).CFh"@Zd1
%6r'EF#D/\#5uEae3Q>6:nF6k^G7>RZ=+PN#M7^M74U2q?J'1n_d4T[%*t;g>s#V,kpbK0TBj/CXPC#PSpq;I?dle8Jr]E<hnp#CW
%?jME#.hF6:s"c4H0aMbU->oMZ658qhJcPA!V\pIWF:CnO]RZYXQ6ck8J`93_'udMTJ4?CRCIHmFJS$onUIU:poLB+30GIt!6NNHK
%GD>#Z*]O`X3/Zi1+]s=13>-fQ"bORs@iC=DRd1KDeq9Z1NY"_sY=p(d'Eh!aGSm#^GW`4Gcm1e"E\RHjJ_C%<1n]kp9F2CZ@Tr=J
%9lii0U7=qb%QMb<R-+lNNZ+&EO%=:8+r0)t_$HnPcp1\qU]B%WRL9fN$9lfZ/L)];ouA<pJu(00'TFDt!1'll`1s'O/(%P&q>VkM
%Xmtt=^;`0Zof;W."2u-38KZL:"Smi(&H!Pd/Gs7J2&-Sns4i'Bkj5esX@9%o9!8CiF%S3<-u5YrqZO3lkj(K5#:Eb"hh^Fb!>GMq
%+k6O,R,9aD\4C871bhm6.g=PZh9lg*n&D5ZW;qkqVNuY#eT;&2/j-,U8fPH"DYd[LJ-D)OAE+ZY_umR*i*18RCg1[NcWgHFeLF:=
%lJokQ8o2l3.2;fR&/17Y[?<IT/#^bX8Me"uGNR-L]M[>WiS?%-f_H)!KP..5271pSR(kj8U,uWeAK&XFJt_]eWW*@>.88V$pqL.]
%f2C^JmH5J1pB"IfY,YI8NZ%"/-;$PgkM*_6-$9:CSmHDr(XdfTp$C'N8Y1i\OL.d%ceD[-nPWW\]q.BA&IQt+.#jDABdc`i`P>`u
%]H@Cr2&E)+QC<]`eCtK&14IIS@UOd#RPkJEZ=ZA3OcsS#Ks&q'=8q`!5'EBaa9%i)o3qrRWV18:SmNdZ4NXL^17I'_VE\huTPKE7
%:P9c'$odrd-iburGlU,tdd+1>+VlR"FL*DlBR]=?PmRo;<27jlc<tC4dbF9r#r^FE/gMYYaP\-n>1!*c[]OhmFZN%S<`uS;PKCJ?
%+W^90k(c-AJa7EEVf`EEV>T_c9&tSq$iGg[+UWOP8\>5Pc^W1&K?jp[;`NFW[CRu7]?1Y&Ou`S-(H;bs,+S`Shg:Nd(uE,(#Bk"%
%Yc1L>s0e.Ikcj5Z8X<YuQ]($A@GTY`\QD?p2Pd?`N4\QM1Q)kFojRu&lQVrKI<7cEh&h\$NV?`#>ts]h)[DmAi`VH:3S+g.'RCd,
%7R\Ig>Ln4JYZnElF'XZs$-*4fZ_Hn^m_[%Cf8t,JRU#I:bb,1;>kEtMc^<FEZ,eh<KfQ,<mn%ZTQe+:3Nno>_"kr3OpIIpD+&]QJ
%5'5FGj+/q>q@D7\PlELdl)J2`A]86+S<YI$=g"Kpo>\b;&#Pi*/T8%l6nKN#Oc$$i+W9[3TfQ)Zg7QMm=A.p;LDS_4BZ;_GQsEeH
%0qS'WH\U\0eQsIn0pLUX7J'0_;:[#+lGIO[o2.\j:6)DN"kK5@A1D9':FBV%k-f[6RVf1Te3Ff7]&p5ZEfFe+Xl19l7o/j\+JnAh
%p(;?T.f)2(#NW:n[!Jb5QD1VlZiE(OV:kB@ODZVH_R_0V't@&]1"9&c,:#X2(!-/JX%deBFH0>&/?)]kVl+_8(_6u?'e8.P-$HN'
%W-'GEo7muF,"g<l"*fBm=MfKAKSrSkZtlTNjT9H9#bWT',C"qe"b$GDG@)/_cd0qtr"YR543o;CDQh@].lJL<\*&qY$>2GGV:(V$
%hi8#\$"uuZn/@'9&Oh]p."WMWpJ[HtgMP3N_V75s?BLkt`1!0_J;HMk/j+lVJ-eTkm(_Y=$^9(gJc$qYL!6Y0^%"iVHpu;H//7IH
%8MNh+h0TKtnSG)#WjXe"O`_r8coRITK/$t(<f\O/]'$GXU`r=[`;lYX;?n,i<n=UV!EaPm&R?;B;h)Rl9Q4)0TkHU&F="D\G4hT3
%g*;]-5Ni0lK=0:1I=q34T^/bNXhoIkl7Bq0/M=89R$!:fPF?MYW\b`C)iR>dk"#rW_&XT,HCDMS]in/+lbdHl99ZC(5n&`W[VgbH
%,CD?r\cBpW.W*jOJEn6HQ,mE<@0g&WV3tffEq0`Dm>l#&#?7Z&ma6CbR8t?iF@K!Z20>tbj<ebXc35f-%E/RY9/[nC3*ZU3TuX)N
%OP(Y*F"3mQ+T7YS&%s=*@`pk64HfC%[Wtg-#ihJkFn!`1Dj'.+Sg+&l$*im-Ga@qEmNOUFY56qm,BoqC$9$YU@@6+\#U?5Xm43^,
%(r7Mr"3A)3E4kN%m>c<Y%Gjlk7T3gH<-B??BAX2IUt_!(CRnfS(H++![TuaWOQ>;ijZO*3G=&)%,p^BPh&`J*DQ$bn0\Xhb1->ti
%-<5fBkA"$%@c!gSqV3Lkau)nq3aO_CT[V`DY`K8Z]CUdg,S14AV#Xs8j(&j(m]R/Y-.qn$@X*e#fZR?L7*EXNZYl;hNVZU5_<sd?
%WZ*rrJYr)als=#_BQg0N)+@Xh\G]A[k!N\JV&)!?Y7kGV,jA4?NiH&T"PrO0O;l9FNf>*7ab[+_NF1ZY6.fF`V*a$";I_[?[Gs6t
%:$p%"duIqJ5-EdnV@oMhlN>2J:,*06@4VEsEWaNULZB<N6:\&+?U!$`?e3qcoJ*ckd0JRl0lW\'&id=RB2YY[YP:p8^eqW,b%!RW
%!MQb!ipI*VZU_UW0n(E[<UGf)r'Mtjh&5^Tjl4'DT6d<p+Pa5-N%0lfe%mZUe1KBSF6qb/&fV-<gup@&\H)i!N`%u84+S6e.d2Vd
%VIGcBF9QuTidWE5&d0Ml;7a5_7;.i!U*;0chYQ&2rQnRTOf*nI^!J,+r`g.gDY,)?0>6_?cs9mO"RM.eF^+p(r.&/g@]cr39).Ym
%+,XFn4rq6DVYuVL%_D7>KM2gHW1[8-U7m""J,+2sNflP\-%JHRe#RM3KUMLMT52GS43>&@KI#Z;B73:]<(2%!r*?_1N5HCIJPr;s
%.u3,1a?FPr>g]%hMtEk;"YZ&K(,;q?*iAg^):P.4Yl,VgjY'bj,bcVI8Z,tnS/cM'cFKJD!2R4hf%0\fodOb%39qo,X%%I`=-[*-
%I$GPtG>`!s0S)R@8<c-R;<H@]?;6Ud>GSb*f8d;sZuWOT(bH%#kob*hQFPm8oi<kP7N%@iX$t:h6:7&O4F"%["3GP3AW&?'G*8/e
%2nL.Y)7[6)VP(P>78m2(PJK]%;+p3nC:%`9KfLN1bfY[V/ND>sJI/QOC(&I$[I&AWSa+^%bq8")aAFMUFE@n.&n:p_Rb(<475db:
%,M<+%md6AC6Uo&"O9>@uKd]0S_Z5MaS#?[.^$UTM$o8dRctl-_"YRq(PG*-n63o>=9c8@Ucp5ml!`a[1?bVa7SlQpXE2\855Z9nm
%;&L_>Gc1Z69c-R1SnL3&\7)lXP(:C<[=AQKa@oRpY#92M"".gl,hA0b[7>/pQl+8ba(-Bee29tN6o@9WKDbM#ZDpE!"1>4m+;M!f
%CcB_kTh0JO:riR%nP-V/JG!YV_a0&7BPL%(efYH9B_pURFie&GltrU:DKFf`FKu$Q5k]%N,V^&C5<7+/D(=J).@>9/*OYHRK#'3n
%.dcXl=U$!9;>Vtc4I3c:<U+fOLBTXD!UR"#>YLZ$Qk<F:AN1>,(k\4\gnbi$?pWc]`TX@!P[_[Z<Nu:t5!*;5-MZtB5S[Sj9S;S[
%F]I-QD&Sr4]$Gij]VsIcQLsSj"qHA0/m%'6g2Q(0%G:&_4G5PoQ$@iIYJ^OIHR5HZW7El$<HX2l1P%T59l!N]I0d"1.m#d`O5a1V
%d-Y1C(`A9S+U1ADlQi?OUM[Oo)?#P$A"ZZjNH^%MQ6?A:Y,=Eo1mP0#%/XOd1Bc?I86&fZ-W(7;aTfoYg9A:T4[tGj"NHM.rI8sa
%K,H(3N1(QuoFK>4:('RCejh"fUAun?kdnPdMRS"!o9.H7:iLZCB18/GUqs]V%&DIR9X6VpU-"51(o#`R&F9Bb\(AIUp(KUe_bno4
%.GrJh;o09_WcpV9(CX@1[4@Fdb65++9h2caY7/<@k]69:Yc.q!V<&2tK&*K&KJ/fiEhpcrOho5h6esd*Rug.F!J"!UVR.]W+s+iW
%`)KpT-H9_I8Bkg-H""qMeV*Mk\..nJ?)`#!F)Xm80A7bT6I++H+_PQGAn!$eWqN$NaZMsSCe0BPldOj0PWfU_59(!+K0e,$ZDL^$
%ABfA8kXeURWM^mtAaXG7ks1KhDN88NM,qngUbTfPIZXn9Q7b@ciS;sI'?8hk[=)Q9q%<d1G&U(d*mqRa>o:*:9n%V^+:]J]BCqR=
%s6?lr2JJl62^b=g9r^:;6aM1`h-aXu%6(:B7>sU:fQSCsWTjPRVDQ-0XK(u5$jkGY-`*Q"rZ*R>T?<C'>6?2X1I;^?(C[9K*S@>G
%A`VW3J3%FM$sV5HeesA>-Gr_.XOQLUe]Fk'&>WU"o<85-d3-ht]uLP>@3(3p!,E35BfA1RX>hs1YX.kgJ[1L2%i[>-l?"PCD\W#F
%k=&Xd6LJ6d!BT;*FP-o%_e57eHsQU^bg2%!p3"VqBi<]@Ubu[D6q_-SX7Jnge7_%/%]46S/Oo8Z!<Z-F2>[gkr(HAO3a_u9>2';P
%#AV)u0F+^Q9&$8Nc$hjCU29X5@V:3LT]@mc1f-X7.Cc0*q,GK&pBtge"e!5/J'mE</p](?KJ$]0E.OrPQoVK1+&K0HX4D%a"Y!_a
%YMDUmY)A=f:g8fcjGL*^VSo8g;o#WKeROc\-*:]$Y"t0UO&os@ULA&c:29/G0%XX7^f%#+3'MEm;A47JE>,QDDn&@3e"K^:4iIu"
%^!K.Y!u)]f<k0e2l4c<ilA`?kU2*Q0#O;N@N88[)?*g6WBfMeF8@pgOO3Dq:%L'pLAKq<!hA$Z*0*HeS;BV7eK1oNL)jT9k-#%V-
%c^89<fr!q$L1",F*UEF3.2P&3Sea/se;V<hYCR0Z._0iYg,H;_i>@&LI*UqZ$P_s*VDl3`c;C<_3H,qeQn8.KpHOU1IL"Y4?N<:`
%T$[4*CMT1>+=rS<TZOL!-QWogERh_\@,TUah124hPmbUiLNc2*bF2@3q&E')/pJ"7lrud8'jW=_7S`e+lbf2_-I[%C+e+GTTI,.R
%FL#NZ,)ql'WE^FVg/!q:L(#T>S'ecNg"EWFi9Af9mipaXJXNGtLg@biZEC'h12Xp@&KDOR51m9hc0-k^c^WO;OkLO?h.no`Ok)=!
%J"9BIGjL<5+F]M:>fe&7@t4cU$;*E`a?dN9P[rI%^_M<qbt']@Fj/UXP`OMc"Lg4!8'Y4ONH(`rPT*n(SRh%NciW#lPKK9(Rrf9<
%O6Q#0fc`LV]100e\uj^>JRmM0+*uS=Drf.Vfn/i`5(dZ>JT\tfW^lbV_`R,CpgYA$qI,`>0PI0I>a_E[`jI[ZEc&0<$16Tf\=HH4
%r8WKA2Cl!\TKs;W[<g*dpSW@IrZkA3hs^$_WU5UR0p[sQoY!YdFr&0HZ#dZe^ErgDbjj6BcGcJ#.[dW@^P.UC?6ce*PjA8GpYUFL
%kV_JrDf2ZOrP=[4(fk$cl&3=R5;8(h3n,gh,^`_EdFVitJ$,jA@I4^,X9_=Q6i"f.d<YlqY_P0`mihJ1Z%9Ze?RseCoJMB<->4QG
%JA,?W^r;)O%f0AF?fT!Lh16*Q'f>]'>fa\1i)=;"I4`;m7iTkN(4=e':b,U;CX$o=5&HjcmcgOq/T.>eGc>L/H55\]LBr`@1J(`!
%7piIIf1>a\s#l0%8FT,['3(a.j0'df,-6c6>CD#qZM(s*2tt+1)X2:)=NTp,HLWDS44p>BgQ?lrptf<"U_B43co_#m0!F\*VJ7'j
%CT5c(rIV#'kt/e^Qil;l^u(e_=o+(LXZl.aY;bOmhg_hR<qSh?4&P9J0lm:ZV>ZOpG,)Ge[Wqr1d=7P2LkXG<MhRYF#P4alF]A\3
%"BH)9_^0[CFbfQ9JEk/=$_2,b2Xnj!@aRUN>-_6."nPi0&sn:SJUTY@P"1B+LTC2MojBqFh@;5a7DW[9r?[ufDsjIR[Ca\Y`"Vm6
%B^Sj/%c?`?KM/'9_d4I26R036:gJ"Ra'2`\QeBVo00&C,Eg'JrNd&A)ZQ+8cISf"@l!3A@UK;f-^]3/.St,YpqhEC#<,/&l`!]e)
%mA*X`U.6U&Xf)+G=T8IerD:Z_%X64URbOaJ0Z1@@am5YnSAheij,8#If]pFOmfPH*k?BnX&MG5)fkP[4L.eJ#.\0Dh[5-'HGAD;*
%Y@Pao;g_&lZ>t3lF6BoTU$$?I'5=Ii'IWQEpb96UNXM!58u`YPU/QoTZi+=P=rdJ[$hN9T5_tBo"5B*,J#.Jhk4bck)%^+;l1Z9i
%(hf`r(;iJ.cR]"Aq;&Z4F%>$(_JXB15V2:35,3%I9McCY^U`*T)F!MBl2k^X+<gK_qcD@@GPm#oe@C'o$CC^,4D=9]h?AhE?t4sO
%nco]T7t2pmd/9B2Z)Bm7\WZH#h7VP<,>[P_J$^1%q7#\4StB]X0E#FJQi2$A=S:.VCX18/n"0<bXh]je-VM$X3'<u7@YQo:mp,`s
%r36TXhS4PYrKd3Hn"3k[%rV++rkgW3p*Y#A;uYifT]AnPl`:"Yrr(2n][hB!B.l:Hs(S8FpZJ?[P5kG&*:i:E\ZGh:**<&lll"iu
%-LS&82nc[8s.-T`p-4f8)JGS;]5-:'EiD7u?]49:^O1*&n5o'>X8Z:F5NcruP2U>^'?C+'cMb@^]8.O(h^c2)IUe9s?L_[)hFaH)
%3*TN]"P-Y+NP"MAE:SN]M0.?U=,8X][R-0j/XU.(IG6bb&^E=e/$YZ=e&qZE[(C@WhnQ??)cq`Ybf_HAP'tWU/%MS<Mj94c)7+@[
%?FEq<NLSqM4TPXJ`RU6=;Sc^D.CW^M=tE=K.+^.</'rQJl/[OLR`=!ijoR%:I5S7S*&I^?V0j5<'Y*0'8`'mVG+B*JKU1*sm(UJS
%J]"OtLHt/&j<APJ+>SN'D0%@lJ%B.l`OENOi'%_+#X"$9Q%5*coRL1"ZiY0qko3;0BO<&)JaRis^:J?):g;c.9%I(]01V"%,'Ngk
%b5/;GX5[(BI<GRsj'PNXaGn_[3Z_Ee$fA7j='OLoe_B<5dH]3S9n$*r#s>BAc;#=Zc.?iO[::1FfDMo1*_`oKIWqAf$hlQNf#Vp3
%]uCr[nCm=+qYjZMW"mmD)OHGkZdZV7>(M_UY2-8uGAAjHo6mb;VJp<hV:YWKVcIN6ql:@9^<s#gY".)JSTTZoM667-aiF'A,p%_R
%erR>1e+L&ZAp_5$^9tHLE-YDhQO&:JYKQ:mH966g?113K[i=YhgW2iPhS.`PDP!UBZ-1eK7cIBW2R4-Ql:1bes'Xkf$$J45HB#7j
%)L!:[B]ZOr%AS2nJ?7_Lrgl=kXbh6f:?6SMHZ+KJ9P7gY_)&<X_.($\*di9s.`(CA-Po_q";`m-V^nI#KNnh#-c>`kT?HVW%UQ`o
%d*[3?)p1[?e^3,Dni$-?q+jB#IM#9fH<18nF"R&+hMeU%"ua$TeGJCE1"4o?VH;m(bB6P5][u52c*Af^D)R[Ba%\oO4bc=tqK&#:
%Zr/l,]M]6;?AVk\Hn2%JDpRkDYdDha$br5=dBKlr`PXN:_,;D\7:idf>ItL7E@]ki-sILQDIDf03DXQn?Kq)_X5(@IXL*o187ZR%
%*8u)cnOWTUrAJ\rf!NL-qa<q\T5Mt!c0/.Pd]5SDd;\+8/BY)]e`^G:K;OKsh?7bl2n@bpW-!?6**#eglLr@,]t5;q\ghV+eH!4P
%llEiW?gJX%p;?RFb;P/$]D\=N.20O*I$^M0"&7d*Pqp:7OUi!^p!bQj^8+o+%24q@fjG;e+j'?&2Rulp29;jeS<;DA:Q]3DWKHT.
%r!g(-Y/Dc(D^.sCCMB%p9toC]GFQu)W[\g0l9,s9TL5\FS*$*b/"L3XYN\0A32)t`eO00b<u76hgC"([@CD/+R+^6Uf9qj"n-X6G
%\S<hhrG%\`d]6Y3gtX_gnWmNjO-7UBp3QT[`)\()JplP1jLNO[_uV6IYK'lpZ!H:F=+q8g<eDmr0&Ef'RnjI5MkOkiH+9W9dl[P@
%T5*ps?/+GP<TIuA/oHC!j5Z/=RS5EP_g^rW:ehPY`5'>8,uX;J?;.HXFMu@E@on&C=$cG3h6!5Bjo0:5-aVe;o6##ZF"]I54%aKG
%"k1Cj:K9!d,`a^c<,/0I/#JnZZ0L_u7a-sMgKc!?@!<-FDout3;9A5u_Gb.B^%Us,(HK!$md4pn6[RuoUU!t4=ZtU,S?VYbf$UJ2
%^R$E7n"64iB(nq/B1N1!4%a/a+;.7(&,+?BkC\[f/q5!T[Sd?V7hQ?A093IOj#k"p=9u)*&$)gE-glJ0DT6DT;2M3Op\";urO*Jk
%gQ3>1NSW`$6G2Zm&uQa::V7s5!f;qD$,\UAkkQQrN)R:cAAKrpP-sl.9ks@(=&&3$kM=Y075UHZ^2:eeS_(27H@('I8LK29;#:%1
%+&=DVXo$>^m9;L_gMVh8F1HRe.:3qJ,QCMPmtcr/01X^B3L]*oH*)+1oH"M,a+S]+4AP#2k4)_%]mnhk<9r5>iotnM*X]SlY9,::
%m$i6qT7hO?q8p>j#bMfgNTZMFNP'`Z]Qie7mQJ5<S3k(FK(2g!>Yrf9F*f2?]n[e5fSFJ.)E3^qB-G]QF1/7tP%VaLKfXQR`;Je,
%^>:i1F6Ua:>;gGLhV*BM>t!!oZ&@*>6!ZUUoX6C/e'3k7eW9k.m(lUR?SYrH9E0(8G:@(0Q-0Oi\-CDef"t\U._)#sXq'YSrouu*
%5.G?u?_8%@jn7rVdIpSNn8]-+'`BOXiM'.2fIc60JeuD;;(H!l<c.ujM9")9l\E@9jgAER2/h-64n@a:Z%$pq>>N#iL(XXoVR_]<
%CY-$+_V3/7?JA95EQ?CDG8K4Gm&o2-X5&J;=8DaCo6'm.q2l:2r/ss)fP0CV*f=/`g-[A2autoqmcNOY?%7.$^6JAa6@0II;fYTX
%G^:i`p7M<0d<1i=3Hi,8I_NNIjIWcRb.fVC(O3L[5La!RIe1,b]tR7.Z9aX,<ULdaf+=/5]dDKEoC_4mW(<uBnrn07G]PAu*9IW,
%0:T^-a0,"/nkJd(?e.0Z<u']L\:J?DKeE1'd8%#GQ.r=R<A,kU?>\L\L1KG"@-.=C6UFh;Z)\dkr*H@.gtq^=c.X=HV^XZ2^F61M
%lHQKoDpXj<=<kT:\nS*;?!!Dk:e\F4hK`)Sk;a6D^2`s@p9!fuDS:2XftF8mY#_#NWArf%^3(]D2gm-RpH;DlXk^>X>DKhE<pPI^
%S?t5,i^Q#C5sD\,gVf\l`CCC)jI![3)WgqR%RjV*3r),,[A/HS-SWfWn@Hr[he&]"h+pOPr@n(qUR*n7UMabI-N;nO5NNrKfr"7[
%NQc-ErrSd[s.c-R)SV*Z*PVR66nA-ebU3)WGFfTU0#>09]]RSb_8Z7\GkZB",:;5`S^?[=Oi3rBe8"@"g]!CqIk/$k<2=2OQ+K4T
%F+Kn"l_FD7k$TS2ZuL8fpF:P;9q;T+OO=@>U76I%e[L@b_q7V(o5JoSdlm&h;VNnM@4^TnD5\*m;*Ve=*UY\'!A^/C8h(b8W.10b
%=1s@qq,CsCLOV9=;K'kfjrq#6WDTf;cPDI/Gb5B91+?i.2Y!Y^gqknI)KAXr3SGr9f(b`Xa/=/:)8-nPWuGs>q/Eg2Gs:$J7U+j$
%elj^?4K?t?)GI?YC[%R[W]f81-mcIZW?iHPZGAbe!u-#d:K>Kkqr'0G9'/CCk\fsfrh@6,ollX$q%FA!D)GXU"PVu^m\FS.V@h^;
%iC^\u?3ZT&VA.dEYL2[p`;.t7b,;BcOmd/ThjaffO?lE3oLT@eCUo0[2+_UW]WS?MmO0_9eV(MWYS#:#:VD"UYl9Xo#T^o[)CQ-Z
%@Q2VgnTJK=(#D$1D*u%IV[VX04/=ZC-$@YL!QspO14Mq1eK#sH/HM'WZb9aW92;F5^1H;CT3FBNAp4?dkq/#d.9S.ta9D;5V"PGX
%]r=3`;!#JK*d>B4"t8k[RfUHn8+)\TCa2jF-^l22@L;6m2+NbSJ[<k7[(Dq"LECUp%>Pj.n0f+VVBO)4=U'?^mq6gG:V4+#;\M@*
%Q$tS\U[G*48FRW3hVV+I;5o3ESi+m^hJTFkG5d*(l)Y`A]1B1"1]We#EL-+L?NM,#]0]=LK?ph%7&kp^NDa_MHf3a1nRCc8S>pFu
%^8E8k@l;)fY:k*\;l0G;Yu*78q:3Vj]L^F@"<]M8%m[&X6i-6DT]].n']&k)I;/CF'@`t0CbtHb9@XC6.OHU'.ttk;J_7*H,r@AN
%P:i!VRfmeVOu_%b`\k)DG'ebM,d<0O!=(Qm_?iqa)5cO=l>G&)Ub\?rL-cJOGcqq-Uf9*8S?P*EkD2sYJbHX[Fr2_J/+MVUdJHJZ
%+`=k^DfbqRpS2f.4N>$(Q2!&4H<6i2$*JJ=aTct^O=h3YRjhLl[g6q<0kVdZ73$@/NoHlK'$K'Jj>DQhp,&5\^@@@t"\c'+L%j/4
%r8K#BQ:]Y&"G/`f=#7s5lQ09Y&UZQ1W8-6HIrN]SJJUF$#53ceJI4$RSU?P\C9GZ4fB"Wf^C[fD>OCHsLZ'`PC!/L$XHZ..*+R9L
%BG/L3[9?Jm.NC@;OiKR!$=o4pGfAa7obQc`<<roa=a9DriP_=qrWG-=L=Wcfk)iN@[c3"mPLR%H(X/6Ke2E>tGk"J.+5R^<;C3u#
%hSD%\@3Y[2:o'<3da"i93k'/8N:2Vf9(RJeScL@!.[amprGa%e[W6:2I\h3Gh/J_/0pofeL;.J>7cUE@Kf4g+q\Iul-lj*!oo!AK
%]grXCONmGt/\^a1i"E1JR8V,`^kdLADTe\VCjDu0('+Qb*:Q(nm[N-8O0nO[Z*FUf]Y"C_^KV09mr:1%[46=AAJHBO7j,e#l0315
%Z^YPo\.rLPhe\eO`O!IiKR,sQ&\fCaMTQ;3asM1S;r6[.a(JIaq;jY4YPVDM<+tqN8KK1!LZm2N834:OaQ8rpE\!M>E6b/eA[%@)
%MU/!"$"P3C\0q9u'lqeMC>He`SJdUS>f%I1^)P2`Ca=-lPo_u#"L<q:1kJ51;U/MR"EiQCaIEH/3&npOZi#6L7gt$CjlGs#n0/E%
%0MpP0%)UN4)(c4.W//a<n7_c7n/0&B6AlmB/,j8s%1QGW,Ui'p6`h2fK0D.e@'htYOR7A\dNLpXPLQ"4f8WLsKDQ>Xl^8VXS:G=.
%Qsk/)o]csI&](7]UrXUsX8`nFj\1*P?NeO(#8k$:9(415`EY8!jPXUpgAbnZg.:c'+<(SGkMXmWQXS"DYSg*;4VLnu5rM1*qH,!#
%Mc"R:;H]C,+lhDjV@HaP#0/\?>Y_T^(Ujn!C@e=+J1eAM@-rDMGVLlr7XTm3`1/.9*A_/^WeF.Odh7`-Q/&N29GAC=FX.$EQHnFc
%UT>V.cI(%c#p\Sh7C6?5#/&)/:*;n?plif$#?RM/M:TJ4^X8>l']\TU<NU]W!U"00aFD-d2lH&e+\=Rh2.c0R"CtqnS1A(5?*<R,
%8k*gl0Lk.%rBpg5:Xp\`"#I6o81*n&"O\1rLSE(PH6kKsj,0r3_\Q+oBJhU@!Uh%P-$a$q,fd+BTk(I/mluBp^H1f[Cd.QS6]r3t
%@%*X-18TNq]\+6kL'SdUC]ogIiH),I*4X^\%CIN^<Jkk,O3]neP<Js2:`@Bp.b@aArb:[8HdC*24U`3"nU1[E=7Sg-b4V"3RD'U&
%gL5WT<Be7S;DBQhf]P68I%/N&XM!$?Is4GC6]Q_rqN$<ZkZYo4<,IE?(caAuNhHTc$1VA<4oNM."";-*UKE`5WOA8!-6H%cC.61R
%c-o?9<'BWt$.T4GdJcG;k;C^U]_NAcT%?XHVK%d483^GQRWo7&lM)fNRc$(h8j[)?r<.7^["5%qM80*5%S[^$<!/h)]oh_dZN!2G
%%]r-8b,;>q*`sE(>N1+Ff!P&L&dad7N6=4d9?eQZ2uPQ7EnZ20Ccj$f`T5<N5E9O?1SMH"bG<bq._L9')R1TJ+R:Ne2">9pqsO4Z
%g+Kkup%-p2X&W@Oph$_"-ZZ-H%N)GV2-.J$`'N`ITsem&6qp?eq]aD!#K,+a*%.+[JfqP*]7*s]Stj)ja-X:Q4,l3/Nm-t,npGFU
%#$*T!=$gVCU6jhk)sQ0"V9%[`fBN5@BL0Q)aO^nO^0JSa8(BPSlM#DcnCfPTV=&6'DEmOmH^"rLhg3O`3,!D\R*7OH7ugEa"D>@6
%Ws#"4eSI_!rk#'tDU"U*Q:rn3"$K)D)>MG!o4B,/DYIJ:26eJ"#8d/-mNce?56Q1Uh`A6(/r0h#kCjj+GdtR`UMO:.7<Z%K2Po8]
%N*Jj3`T6]7>'d<+_s*Z&A)$o')+P4lY?E8tHDD\OT+EC7pEWoPh7(p8:0g\gD=o/&0#!o,1NHoggk_*kg>QGa`]]b\2+D/h^/pi'
%aahHP,^#i"^.qa>f1M,CUPo1N_.jg'n@k8^j@Tk*o5mM6%Z.1oouFedoo!rS-WD?N1p1&B,EGonUfNArJAJb\VSem.Xm`S?SPnJ/
%n7L3)9G-&A/\\-k1\>jT4MKK8+@VqtFF0\#G:&65hY%:'Q0J+R=*B]@(^rpe9PTInmuW/$4;5<P)f?I8>MXJu!2=gi)o!kWT@0oJ
%a$?9Rgd@M'gW\'-hDiK-/4`c8GPcFh1n:^RLA"I>6%Vkn*J0:del/"0m;mY-TaD_^fDN/.P>6gF&Cn[-lD/c`Wp6kCEOgP.F1VnW
%I]C,=p=Ft&!K?8N\D?):*YE`1JZ-$`,bH\*2`=/WIiBSs*/sH1<_+7e+4a>fVaV5`L*A^"a,,+%1V>-=Y8/mi_"nH.1<t?=oq[q3
%?<&4p+-=\'+b"D]R<I".&6n=Zl&<7k@VHC_b?cZD**DO97C:l5l**8$GIa)r^tMUJ=g-H#ESBpFJb7k:4sFXVTf<L61?*1u/<gIX
%*^./r!"fn0[XT6M+ZBr[5I3W"1^aSe<tYqRo57c`^9RJ^9Bc4@\=t,-fhIgB+$(VL"N!iohq^!&jl7.=l-mOPU>lS"*IgF'[mGkT
%kNb6h(=>>:5n&@PjBiC@3WEUU8>(l9J8?r<:_H\&2,[Mll't5l02`sSZ36L:g#4':,sR\YJ^n8>psKUq^tg"Wc]^:u5:j93[_C;q
%faq6#68Jih\,:ZS<kG.sOH_raNVGRp(:\&7+F>UKMTf"K>_#&[3m5iP2(i*49_7mR8jI<4%[r0bq]0d8*R%Y[83^(r&$GS'>[R_W
%8Zj0+#'"u(Dk&O"J#N0&&k$EOmZQXRX6UHM9koR1Ge+aT`@E3Ji1H%dihs8BZ_9*=A-.gJqe(c:`BNSs="F7h*9@nIm:;7j#aX9M
%VjZFVg8m>q*8[4B.K(/7]"4)IO0S`A!d1R@d:PUg@+L<D>UXg]I@[]4TZHG36/cK/]h,h<Y]i^C&_Y4"?)tRPc'oF#3@E>)rd&!K
%hqbm$h%CZ&JPPM&Ut.ZbHX`osTu#UW18r._O8D`C6Ef%J@Q<e=867;<A3t^F2BAq-nUc(s*PW0O6Ll](#];+o@Qpg-_\U\J/SnP:
%T]k,(O=!93?u-hNmPToq"U>+<]!B!r^:d0@aNM;l`(.hDlEmgfp"SN@MXcVjj%TACgFL7rCoiT!DY8'=R&3XaFQFgR)d6OJ5gW''
%F/sjISOphnl^?g"N,pGE*?B.&\-i`G<\jtCjGCJCVJk7LR0Gsbc"fRkRJ-:ZA_W%4L%UX//Y7^dU/p"F8?Y97c5o2_d1rC6e?a0;
%(cfiD0OA-Z7q9P@2r]NVng*'UhL*Z9Ah%(>.Z:+;T+k%"!0XjA8*3l0Y=qo5%rQQhfA(9/oXRM*K%_O8"r?5N&>\&\.mA5=WT#M,
%CBrH&Ea8;^mB*+Hf\u+>2j2<qmoE;_Tr-o,Q^.@-k4T8:`C9jH:*eR(Dl7DVh6dTaQ9&P3L\8>BSEGrp1q,!MY/+A2clf76OI%eA
%Ld<#%@jRApE?Hl%aGk`Nb27;H.<PKI3K4qJKsq5)Lf`24,90A[<$Ac'r7D*T,*tlnh$B4=Je4qIV;sS82hpKjT^a'if2SnS;^WA9
%EBG5^f/(4i%:G)`$si]NT)C'_]TNW?>QO]jB[p)$<kr-KOb8LFG0[tsA%YoK]BhUnXSZi*4aEX5X='HLiDl,RDkQ[TmXVu&Cr.Z[
%)f]::Rmd6V72Jh<"MGZ]=h>B,]-lMeb9sf=Y!4drZaGj6mE"5:18dPT@6SjpehY3>6>^GRTQ.,O2rp=W+gpNDP@"jh`@j-@dh.Vl
%bc<kr/&.*Y1E]LAf5;#%ff^ro--oNG#NRBJZ.%7Q;^rGf5<7L^:.C#9\U4a7VbRM*"!]7j?(2p]o?)T?X**E'mHsS[Vpp`mb#U0T
%e4D?]_,m@0ZG3`"9QJ\?J$;so$1qO4QG3fIec#.Ehg1TG?G#73R:'(,47%^i<l!V>cX;eH*OdeU^=^HFc5Z<bI'M1:,La&eWjCL'
%mT/dJiV).fe&.Kq0k-1AZ5pDcZFX)6$1*1Vp($n`'],SbMg8(gKrVS.e6.3VoW*g1eS:qj6V3dCKGl"l7s>Jfm8WK$8G#QD-HQ!U
%\X.SimPXKGH!E5C(<ds@a1[[G!FhQc-?D]pP-lN`4)t_)\dla7ja'.-)&VpuC1WR9"5:/L_mGBRTJuBBqpI9;gARJpFBS[+LKsGi
%55E.ZiEHdGDqtmKeqhPR[h(9;Li/a84n#mQ\la=n)nY;@HYQL4Y!CWYRQtVCL0Rg>>2s(uY=@QND_oIl7FDaK-7\PDdpi[f7/)KM
%'ODGFENNeXY,!TBnmbA)e_X3Ykr1k+e<KUK?/ljOS]La0%OUZqGCB#VApT8B0(UnVGTRb7/S)f,FG1+-M6g#LiS3&/nAiDTC&'\Q
%pK&HbOaEdn?uG4b9*CKGXZBS/mO%[W.NO%?a[,D#]As35S:NTm@ca0C?Jh"Y%E./&3DchYM]?!/1B;ikC`HKl-*#)A\/)7O#Idn0
%9gSbe9665'+PGmR0k2G6l)cB4]W$DFIphOH!=\ZVEmcqJZ"pl\io099GTC]/)Q](i5b@q_'lP2ho+2$g;b/@/;CDG^iEDd0Gj-N?
%]f<acG4)NVJ;oMj&V*f.IQ^"!B:4bnU5ktH&BsVXET,(-"J.dDA7EMU3.2PX62SN'TM%]f5c$".&=1A>f/p%mFo$)XXP`<I[UTLf
%"#&fN**D=\p-/5"487#a-Gg5+Qt+XJF]Te/HA$1]*I:P)7r#Z.Nb@3Rf9Cb"bkJ6]kS6h^:.LWB_.O<^j8$u2]e3B7(ZdTd@ee;3
%H@2X]a4D#b?=R5?$So:BdIdjHO7sg;Y\]6]&aB#K&N,XVLJo$!%)J5BEa<D>]=Yh-,CS]?^d7g1+"s@<'[+@;(7i[7^OHWkZ=2[<
%_/jJ+PnB<?lF#<sfp$Eqf7u7E7$I]LHIQH8?#RQrbOOCRfN)&7_09?_l7`3o-rBd>NUXp7T=^`Q^O[tc8"WNRi7p!Xm0#Vd_7?1%
%P45%<*hNaGofG!:IK('+"bMTZ%)Mca1e1A>N[.2'$Q:FJA"o^=]?fXEc;QjG74F*JcasB"gFt<Zj86=?n))i4JJU[]kaD8]_c"A[
%ER#(HK]U0$7o@-YKoBda(b&<O@M-7jUIX0@I<GG?n>$?d6pq?KLus8A&J7PP'c9dZq\"S]-L(kn#Y>R-9b;n0_SOY[Q:!umVPWYP
%E.ic2VgN\?gdRka3_GSU5HYC;&Rq!%@)>=NmLa"6P+F?48Ol4#kBmSsF$s\rk+XCSLj5($lBOnJ@01gE%M/iW8KaeL+aT5402au-
%$\>$T)LZ!2OaqLMOV!)d^,r;iD[+HOn9gI3#ue4d%5bur7E&a#j9@rHUHD3%6GP?R?=Z%N+@^Y)l+t_DMR7[<1skG*DBOKNN%h8_
%A>6k7Vh'e)jr>X8!_Jmdpr;f8O7<[`Eo(LQfdKLPC4N.26X`.g"gm:Q&NsfY!X;>4+SdGKi'Hr9aHG'RMWi8MF$+nSi5Z%fNA@6Y
%_p&]1`/kkU%iW.6_J\9t=R7)ni!`$[7$MnMU3P8R+eZlh3t2T5V)Yf4KqTJU_,sR+(stSU>a1mU@=V3(LEsZ8UrTtM-b/:])71)N
%6ihA,JIne/DbU_m$l$Zu!:!`-,_0^*6S!a%UEXP4J8.)T7r,Ju44q?1;8JioN/F.S!!nGr(']@*h*$iLRuA8#+N5bN=Zq$)k\_M4
%d0`W<)+utujW$(V!O7Bfm5WbP.*7s"#c+HFAqM4Xq67pMQ:1'uYRUooX9HcS1KqsBCg^t=)/E5gPSBVlL9kH8!"Vu'H"X(l#-'lm
%9]oS3.(;@(Ri`mB<R*FW;-4]oX<5F/1l8:Va8ppQ+HNWIqETTH`5W@ITP4HV(]k*Pp_cmNOEt#gl-`*&k=Mao%'0o(j$RHNA@\rS
%?pFc]f([(8AfNC55Z7gr>RW#4%IE"@FI!-!KG2(,=9X7T+I8NT%)?gG'fXJF%gk77,l22GVgu$[jRBe`(d>alC-YAoRc$OdXFUk;
%+BB!gM#urB2FZQjJNu0`>A_`40$;Yo3$:79.NShb#?W7sSq)?Z"]DR*">\&#4[>gYim8MI2Ca5d=Uh#)"Rs:5PDk><9S(uj?lDiq
%Z4(T@B93sl'K/LH8N_,D)ShYri0b)bU``e#*]PZjk1LhDi1SIUGE?7<X;V7ob]+>8E<dp#J]3d=p6]>@=ti3?L;PDao((.B2LL`4
%'as-Q\?tlE9pJ=mBhVoLKo`oef"#?MJBWQ5@k%M7=Foaq!$T^`j^/04@*Ag/Y`*6N)aXt;9"*(HLKU)[?qS5rou1b""/t6\A`>o-
%.9jC&_[sJU(SKh)JOcZ$f`2XSU)4Dd3FFEdfKD^B&F-bB663NbB>sgG"aO7%,A:l3i-E++@F6AD/eqKH`hT7LF^3EPgu-CbcVLmC
%4W;FF'&580!r,]O+t^36G^D996JS5R%j%,UYZOY*?k3F3_&%r/"%3GX1H7nM[QOc)E=<GOG"!nmgHpO,`kWKKP\l[.!X)XB"^@[7
%>OkU$82AtV#+i5&ICK;%$'sc1PH3_7@ZtSlnM=0s"#n$%=G%dJAi\8IAh6VCi>#9:ZEF=Ja$(U3U(cL)/3XSA!fTNOA>IRF`<=Z4
%6!pi.<d9<LN/aRQ+EccBb!iWVD?-Z0OR9E>$\XG7aU\ir3>B7b(3@<Sg'TCj=Md5q,]?L8UEW3+;-RD9O?aJV(T(%",?U-@Pf#!c
%cLh>E9I$3*g-cXj@b?eON!.62mK%WJVh(cKc-oeUO]qHg4&A1="k'^Si"<'$8K+<O(<\c?#+fID,%=\5k8mSQe3H>/LG]c.4NCqN
%%m_m[[$D:H=irT!4S$JDF2@]5%V3:_O+BV$.pckM4IW&W5da=3)K<lpB^465&[ooj,tJ53e!>OAiR)>Ld9aaP%CVb5>Vd%)8]IJG
%?isrI<1HA/gC9s/^f\dop7kZT[=V(!b0Wn9aP)an8^O6=3m1\eC!oNDEjf;7M#L,^"Hd.1T!:V*&:.OaB]Q0A@712#PoNg*'^u\C
%AN*HL9hp<8YlSE%Zp8-KJMiV!VZMu!E+,g].A8SdUb/&]oR!6N7FNA'qLYBm<Wq3ZaI2[SAIsf.a$_3<Ns/fWqFB4JMfLEgis5De
%k)F@].lc)],a@RUep`5bqj9DHD?`4s*TL'BD4_Wg\F9Sd+G'\/_1/9J#W=]o@RP7eZBHec>m&Oe!p!0'-!DeQpYDtn.,&W:KQrT"
%$k+Sp)[NUM<Zpq>*M89_a398M$(T\!N34%5T^8pZhbct>3Y$4h.U['YdOj>_aW5(o"Xbjq))@r]S9&7ii&%MM"1JP+is:N_njLc/
%j7r1ji[?#5S<38NeCGOUYU_r%_RZoPTK*GlR5p(W4.N\;4=#3bko']#o"Mru'*OBs>r32u1^-uMcJ;mQN<i=;Nh-+c`Bjb7hT9e^
%UXiqXp%nPEd2*5emV_E,+#&g7CO63#Z;u]1ZI"<FATO*d'#(!qOdRCiC5JK0j=qndC1*K=E$IVogUjcLk\S/V,3RNiVILi@%-9lc
%,<E7!J;:$^cAISbL9Uh(A.2Vh3\U'&-42R0ZR2(5%Lb*@Y"</JK)i8e"FCsi4lhnG@F2iM6S`;Ka.ipa[bG:D4YB,^.28_b1DCFt
%"Ud8r<6f1Xcco<&4a7>0)q.s;k"1XCk[@Ksd!:bXcSL.Vr6aX)Z9qB[RUGGADhh1<j91NQ>'Lt*Ylc`m/6!hR/0bC/AuBK:b"N>#
%Q:[b4#Z'IC=:(pcF!N*-;$:TF-`DT/:hVo<+oN<#B>B4[E,B*5U"KGt2do0rfT+@44VBFVZ<Z/b5rd1h(4IN*Pd;WbTEF,s6',s2
%Q=aq\C"=R^ge_:>V!KO,-'Juoj%==hA:KM/#Vd5gL`&a8E<^IT<Y,aQ'_2mf$G^?I\mf`gXHc;,>p+,0"D:"1+>@f-Xk6/u4=(Jg
%O,.P#RAb[jVCd^`&uC'D9b<g8npq7ZK,>5h;:2aKBOQio<+LW,9PkE(LY1>kb#+13V6(S?h?i4f<.Qa@GReH"e%gK!i'Q%7"%\V8
%,#]>N6@`mV$t[D/@!&nm\HOb=a<mBW!'Ha1++l/H.=WHM]U^7?aHtt5c<;g;OaSd*R_b3ih%483.PN@FYiH=h6I&77;72:h;iCaK
%&tg;1h(V0[qBibVhKG2q=alTf1)A1:%m.shplo5])&Wj*+\[JaT<f:a;N@dX/J7=f'(CjgbC?IG,77npk(Kal[$fh_ess`\WCA#h
%3,k=+.S-uos&`G;?1Aur$FEZm($A:9.oB>5f2Y"S8qmaPD/0[e`D%IkB$!m9-iG/oS7iiDL?KF9"tNmFr.uCqkdVOu$YPnLBHWfL
%&7N4$ZU*ZB#!4uUF$2#p[rOVFB<e)p&_8oiBQ;1j,U<eHS4E+bk0KteO'0Pukl,5t"X$.u;p[+I&5i-]1!foY+%]Y)il:V`a3Hu1
%)2`RaI%U]lN#@KdqC/j7iLnTK+DWB9ef?B&WGj")ML@ThpJ@TBi<-AQ#lQbCpDfsoDDdn0%)iKQ36%,_?$$5&($u40f<cR$d\&H/
%T<TUZ:`0?/5T)6$fmsDs7B"3o=h7:g:'6Z7rZ(loo;GYLjpb$GW_A;/P$QgQGuk`C6=dA?GfD12UE1h>Us7U?D&-.W$fn61kGSZ?
%_]*B'l\_iJ<O<VInJ<8&N-%%!1i%Y4rGb5,4Vnk)SV9te">4Y?Jfj\G/oZ15&G:XYjK-c+l[_S13I2)sE01Al2&,YVo)s*3eAq0V
%H%'j8o%,k0oNB`U]kLG9'c?i57=VEAKjSq5!T_A8^-nXH_/W%'\dE9IE+`%N$R%kH^iJpLGUSfA3X'>AH&#tT.oN%Akb@!j%KklS
%<-pP?qu>>rQW?\@-;/;BnGS-SS4t@,IOr*P2rr>-_\?Ab6SWhhRL"3q'1Mird;t>(Re_*toXGc9Q[pb%12j1\X/W(TWljACOgU^+
%O-5f-X%D-VLYJM`9mt4k2.]tSbP^`[/Sd7%YP4fnA'(\+leR8N'=L&]qqAJJk;'.%rSd/LcRqIORG4#W'E6STG[[/glaSL,hec)9
%P[3nK!aNV5VVQqaT/kBK;R"dM.U7dNGAPA\6tVuUD:t;;p72TE2PUSeqJZE/?^dJ5s2U2>kMj8S97.>D]<fibPmZiXp4.rTgb3Gf
%`-SP0b;00O;e<,8dB:*9,12N24(F>j_[V%]IC9qJ0M2KX&Ii'n5.R!$P7%ma*N/Ka9=.H\B"Xqo]H<PDXQ&ZkAMrk=#[2YOncfKQ
%[@<)7Nb>FfHh()XrXA,NX*:t[%<aUJ7&A?E[</$L>BJT5du0gk6P*Xd('d$4pZK'`P*M.lAt9ktk[q<Q;u>[fTD\mpl)j4u30Ecl
%aE:%FT!>/0`#TQ0T%Mf:Ku^?V`rOt[jn`>-5qcgdk-ajs+'F@0q%S0[4)_^?nCZ8lRh:HjalDN!q)a*;J:sdjhHeL.PdpJ[G8D=4
%g5fCKe82DBO4FX$@8tO%m;Ik%Ku3r"T&8P?\8]jGnMY08R,#%[\=.3*nd%n.KOCiPd-P69hNe5Q2NIESiM*COQj1HYDCgGF_cT"*
%]a^\p>[hJ-qgI-Z4u_eD#Xp,jrIp04N_+l(Wp;'?7ph)4@FDA0F1Ra,F7Wm#a!9%$g$EgA,h[iNlq.&r6!tLuQc"#dJ)R-&Z]mbP
%2YEi2f)8=O)?[bR3eP)SI"9iRJMQJOZM.WFM]\P@XPRn?A7%.^$:0g(Q<:0!q(gn<N7kq[nCZ9?)d(o3V=6d#FgF^nQAi?)8IOEh
%=Id9._Z*#N7?Bd[FVl*ln)3dmkG%T_kPuL/oUf$5QU+lF93;Mt_V/POp8.G>!S?ZS]&W)fOdt_s[0psIU`HHt?biAYr=u"T*Ya+8
%?.+A^_q2i!DA8'A'O<Ba-`F^q$O<`uG]D@dHOA_doQYKbCDo\.el.0AmE]F/roN<^?>ut!IL-Z>R'8i"?YVA%N?Ha'(n#O3'Ra7H
%&pj;5FndJ+%hu"XNda@;lV27Q2\gIDSU\o7_Z[_nE<lSQR>UG8pR/KS^,Gr?>sFsDIpTm[cdp,O&]%DpJX8Dc5""r4Lg>Y=lH2R$
%"I9u455gWsf,QESg'\bVfcoe*1@a@m:4LJdS`[5el`L^lA:<$&58$_k[6jcsLCQ!C(X[P<9BkPJ0"O*fBH6_dmC@9-p&.HF&YAS=
%'\FEf=o7Kmm,l?K^AJ/)m!i:_[t]%HS5N#Zj+$t;\(gr[otUEcs6'DG(R:/p.Y#LEQA-i+93nLaT'=ng[H<gD"jOq9qmC<7p['1l
%@K5o"X'\$DLu<17FpO*#s#sW]S_NY]Aj9pZE@Qo6nA=O+,AJ:3qW4J8r)KmfCUA)`EM8HB)TLQg[#Cr.kh8fGF=\6;MlqO%B\0R"
%.[!-n4l[3Fo4Q<PeV+,hI@Feu\L!4N!EX*S?_2E5X%/Wkh(lruIJ`=+CX.`$A^_8Zo`2oJ:V/7?)-oQ]HMZ0ED8@D3=PkJV$dnG\
%hs6a-_:hfbQs=6@5;'V7C%"*J+Sond!73CuPiF\q)pMU;5s-;_"e>b(76<-7mqG#JKNG%mfCn&*fX?/ClSMgljIY6=,cO/\6;RUY
%Mm!&"iaE8r61KM_8(9Aa`Foa]YHIn:e'$teo`-3h'XQnO>4B>R<DSDH\[3amPMo"V\uC_>Wc","?&NCBajLPaeAdM9.NB6G]/n^3
%[EDe8VoRD5B2PC]]PTAADTbnPR3$(QlKZ`:&`gIR)l;X_;lpJ*-Ql@!8+?V6n$$4B00FE#9\QdI>2ESBZ2q+('o4_]CG1P](EU3B
%DmPHYhn7OmB%hD\o]Ap4_:i1g=h&#IKiJKQq[8Hjh3l`\JTYS."m"fF=UJXZS:La$Y;f]G&,.Tg]C=J%nW7m'VEY+.[T9j4=l==?
%>IJHK$Ls$<hD\g6ZCcYTCln=r"D6_SL4SL@WO][2PYA8G]=@@_eR:s<hg'0)'L3ec/8S/=?/7jhP8fo\`TlLR_F7O=YJ>KdL)IPF
%0X.ad%_%hg2Z?bop/UN5SFjUDh!3T\<lYF'>a@p"S*@:.i8d#Z-lHJ9Elke%R+1C;3p,(ck#<dP!K0!V2g\[@m2(:2E0pS[+L8He
%LG6M@2Y6F01/p(J+J%2Fqa1+la5OTK%i2cr7*l,bI_Xb`^jC,%HoC<2LO]69&,lPfV=pYLJS9iBK/WO[r0In`-Ouq>L/*3EVc'E)
%011!+Qbt]4T-qfm4k/:/9>7lH0G/9NpW^I6*SuOm<6M`3@Vsk1JOZaL*Lm%OKMLTMRVN'DJb+S!49m"[%2/u&b,"R`KsdnWk\cZ.
%Y5#=8f.kSdr@Pjp$"X'.Hm`r1IBEQu2fLXYSHTog>J#U]f?bpThu*0cC37-(P,R=7XCKtYD2?[iOM$h7W#uKmIIPg&,o,5VO__:6
%^a&Gd)/"Na-MG$FgB3$@eb6I0"j&f.7_H2Gbj*Fp=iU+$YQ4*4rRnrXHtVnFgEmOp>6r't54Y<+Fk`u=^rgL]![;_dKiAV5GF]G3
%^Q.hm4j>_11&ZN:fQKg5,QC$`<6s2&)pX!NR8%kiqS@,6V]Zjd-I8t7AZ*r69W6cWC9\l$htfc#La+$\*ec,f..G#dJ_Ol+,63LR
%@3:V,0J8lC'asGO2!oHWM_"8O;j%9t"aRkC2/VbR\6=75rmendMH)Vpo!6,nC"r+1oL^F6Z^mhpCXbUd80[5CZE:n,*hg0j#'7=,
%Zb/lH*\mNrV&68Fj>K+%_/Ip\o\JP+5F<se4q`c_BRXR)J!SnK\,0f0'3Zpd!e-BUiUZsZ95WO`!/.k_"7%h,0dEJ(%%!Lh;9N.r
%#(p*okaiS,ap(35;3g0Z5>WKDaH)@i$`+6(V@0FPbSs`P/G\]!45!rEp<U,O90Yqp#JL[6imm&;8=`l:OM5H04>Rja.Ub^9VZIZt
%,g.>;Ju$t?3Y-#n^"LHFKd6a1(Ks=fEj\5V#_FR,=Hp]F$X&k6,/U_iM.UOk_9ku"7.5L'/+!WqKkW)2s2?/tA8T$.gjR'scaj*@
%E5]K3et28cL6qi#\$'MtpAcNt>3DjuX@<a?60YEbg62-V&4mkq3cQ;X_eZAAG8>Y%e/]"?03VT:"3Ga/mcFU#ROfSFC:5!e4(Go&
%cM!]#XjcYCG3prl<:Zk6ko1dgb#LCu+scKS/reTZNW=<((J&c0"Q-tEBA1=:D,9k38/nikYJ;a@cF?+Ih&]tPJ_"\&i3B]d)&I7^
%NU0KC<Y?c_GaX#P#5'%"_IS^5^Wb7jnu*s]n&,4(<>'%jEgQKbH2bd/nMOc^=S<inX4o2,1MG#b)`JILX\^F'hu7'[!cnLZd"4a%
%3fgE>l<[X0^Nk@i]UtM&^,QT]I1S`H'->GZ/\T1@Ye<lQU$P+3B;22nqm_jU!0gr9J8e-u+7i.:!A2l!@0_;6gE`_EmCY_u;K.ki
%OrfgK]=8mGO8;Do-h<iCZ4TcG&'6.EXM)cj>R)fa1HX^<5IK@t#p.dWhp"<QiXYuIVV=QMoeYB/i5c-9!nVI@'+-YLSL@e6[J#&1
%rV-Td3`#QmF#X8rnii%AU7Nu*,VLRY&V*Gi)h\Z'e\MO$h"EZ<XHJKo/&t[d0^Ghh&rmX&GZRs:O6blF>BbikVAVLEOWR;EbW8]n
%4;-.`QBZE0iV3R5mq(6:ro3poK[(Gnd%MNf?V%:6i""ptglm=`m%hkCog&X<PB/YrRr5\<!F2jb-,Zg8l3W^NC!gDbM^k6<pT7P*
%lU?L+5$]!b3=o8%9%pY3H1:@4_uSj(6+YLMnODkkk$;b)<iuo%Hm.Ia8F.ArC9pJeJf++CI@ZpHXCTTg>AKCs%Dh:Nl<G3r1opD?
%(t6h7qU\ZlS7f18`p\1`]dA>6&s$U9A[neUq<cX9_i<hD#P'9:Y35te[5KmNm]5+_?X:t/4sCtpL\e@=HjP?-Gj[5TIK?QqP:`;R
%E7YU"A2LO@qJ"cr#3uN;/5lfdNn#_295P-([TkLg*kQXp!2\o.%/&9>6"&N8-0sg"7MPsV*((G7X`ZcPS*>$=!GSg'K*pMNm"`e6
%fJs/_D7$$G]-HJ:crq"Xrq:=.dN+7Als_3m]lu7F&S2%u+1Gb6AKe5-Flp4c<%,UEZSO-Uipj6e/]2"g5Mp\"]h\a'XW8q@8;)s8
%Q&c&1oJ/.ipWb!Ig'&?aQf;PM[[-A#BWdqDQ]!jneqGtB!ABk8Yk/2_Tl9u<Gl+ZBp]53pOiP?MhR.ui+PO@[kAFTUI^Bb(d=LN:
%*>nYZT$`Wmk!=.TAZa?jRg%Qu0pQ&A_EO!e:->NQ+W-$b]5OeWg&'0A^/3CkL[VlZ!R+W*&8VfCJN=aDSp:N/^gQfY]@Q=/=m$1:
%/sq$YokH@Qnq+Yu3r2V)e0VhB[_C@P<bpf`gjLh=V3lF+Y_f)s$!0tfP^bg]I0lmRU]Jr7hUJQ('tR^Yn*QYJ7:LPNa>1Z<E@FMo
%UG3!3pO#l\AC!-1J.0nDqhB)8KsjLfrSCg>rF3Qi//Q(2^OXXAR>hr<ccn+R,`=!JAb,=Y!9?g2e&)hg9E)GB57-S*a]6([q9%8`
%@ZENC2(F&0hmYp=ep)-%%,89#$Mfg_N'p>=-41pN^&W452.+aH.!jsbEIE3n;,?Q_RX'7leoQ#dV9%$g'-P5-IJ9H,!oJ::PBU?h
%k);%r1iR!UDG,_Vn%7I`H?&7]Bj`bM.ur6G2H33?QM')KU<nUj1=?GRPbu-d,rhfc-R]0hA??4[5\T7g_&mG7HX0ak#aUBkJ)U/+
%Z5mtDO2#p`@@`P/3+)j\)Ot,IfpX'tBhTl3qPK*GMeO2_S42Q,XrhoqbVJ@Ck$dc`*Z<bu`m>U<3Z0repT:6a.(6+G01=H)>jHBU
%a:(F@dkGTRLeFYHQ4CCL?2?qF[tYZGj#LIsd4PMJ_0KX_);&:gp>2-hVlC,LeZQ/el9hlg]W@mAX7mnggYQ-Y_m(TMjS*ZnK[r3t
%W.U6h!H<U/ZF.h`L32:`9N(>-r'!62G>t+d(BV#;2!fk$qCq5oS'PUFmGpio+h6Qt#?S)FmAD$KBXJ;:dgtm$QSotqCBR5j3'BMf
%#^;6iYUqE[XIUG;>+J?g3q\Y,Y[`S0c^HH^Q<(!B,b@(tV]hu@Ebt2KiJ@u/$@9DdiG+R6'Fr.:4o]FpJ_Sp5n<8mS8C^hg4LN%q
%0hg,CG9I[3lm:#t%tQ`'i>2`AR):N>e[rgb2J*=11u-U=\NVR"E6ZdH)LDPNYb+.Poa^8mljACSXL+O2Cnu(Dc0l]cJhYT8.3)F+
%[#`N6>t(YO;A+/G57lDu>[(mZUJs50P<AlT&Gg@\-X6s0]%T%4f]3qAG<64qM:jfWbX=)YE7%>u/Ph651V3+*\XX]qo?Q3PniW[)
%Gp752hK+0<g.fsZ%9(%+*U$dl&'%\C)Lg:q'[#Ln][I%3pd2Ro$la9lg\/3XC&;<(p>i;;n6a>eG2F3G9mh;t*?,F3@&2h\Bd<a6
%_TOob0?0hRT:4Q'k90n+\'J]_^SgIM>2(!'FWa7,`q(!Gmg,6hGD%P"389qJSDF(jJ_3oa(h>S=&UK7no*^-'],LIWgf\HrFR<hI
%23_j7l&")g7M/$J=:@)Nfs0#1=`R<@^VkL2oYH-cP[\J+AZ&3T@5*+Ym6#[Fdk>03:/<,K@6]4'7-K9Ynjo&K5'[I"keF>U[YY,.
%.21n*3?!`9NZG4BqBPS&^(h-5k#q-8$eS1`hYH=OY%VFGhm27GF%MQ\!dg!nr2pXcW/^:o!E9*L51+WhDC?,qHZ\)%nk"oW#Ft#V
%pc.`kc-HZn[j?O%ATJUs"eP"mHh$^,F2\*\FWa;O@/uI/X_GgDH)au"+.9`ok?Z6YQ8:5ZjQRUMl&PLhZ(Gil,@'VE4kTV]Nt+QO
%*RFt^6"o).Ap+FC0Gf!Q_8$1%GuH3.Ks,2`5S7pK@KO8T'LS>c31dC`BA*)HMP8-6Jf`02oNHI%J&/iG+7FVZLq=Ld/l]sTQkCbB
%<Q.Xu8E>EQ$/qJAh&n.VP+(@bC9RU'iHCjuUH$:h^"`1-p[PV)?K?[$-X-!)f@`@*!;G.6]p?pZ_!c@C2><FALfE"N*#bM4V]f1b
%`*WNuI.Ur&ndF(5en\!/k!XNGU[@5%Cip#pc7$eXgjXL&OXH[m0gagKr^DgomE!0GXL2Ok!Y!9OCg^P-HU>lk)=l"<$l;8c7L_Te
%k1n9:Ais5qZ0/7?%6,iDWs2"qX`LPVp:#h3R6U]EY&g)Fmlm8LMES,onqbjWAAa^H!>&pghR']WYB0Xo\!dAMQ_'b+JcRrClp>N#
%G]Y`;-^t8Wc._PjlY&:rjan1Me'=D0KP,j+[toE>b0.ML:lt&SfIOGN_bbXFY03[+&'*(bVGeOiIaEcL<'4Ep*'7GX/05#K-0qBb
%GG&F39S(1qZ<mUX8+;NKc<N>"QBkhua$^KuE9hkJXe#Q/3F)^_N[5l\d61I%->HF9mTMVth]?ZB-V'fWHZn<?%DM^AQ87SdQsl!W
%Gg4Lj:8h?R8)JaUHN)";13(ACr9/%qAP_j3X9mWHM'TIQ?5AE0h-;><p1)[8>[ibS)j:FXU=hAo`4TpD%m3fGHISu`?\/!+AKerU
%On1OZ3cF7$A)El?C@(gjlWsRB%ku+[=d4dO9*9CLZp!ca:jq]IM+/MDbb7fTrL#"1pL>Cr/@e9XkHs+V\;TA:rnOt<h`qSar>USo
%oR/6fn(YbIdG2A.^"[2pm^Iu61b*8nL3:3o\pI(_hA?H9hO2p^TD;)+[^6$?OP88gGNL<cp!>B**.5k9f;eOT3-$tO@j7Blm2$U$
%,RL[!XR8j>JU+nUbX*b51VcVVhWu3WJ<aTY#YIY<Va9=5s'i*c0O9MFR,("*)$i7unI.)LT5OR,itPVYie6.WV]/B%Jhjl=7d#5?
%?krBj3(ATBHh4Bk9DK]$"C.bUJI;O;h$taYX9Y8kOf$72e`Q>T_sPu>b@a>\rXRiap?H<4E(Ws/Ts`p`C\!Xu^qea)-87uX)"&Pl
%0,?/qJC(EN?9u7/7Q+oDJ;QCnVh!s=#q=gtn][p.$cao.Yf9C^Hi=1K>\>2]-6qsFWa'sN,$.p0SUaDJRa]/-n0]G\(AL?ufQ*_3
%JStN_o)W)9`EAcD.aO\tKK-SV;;i=jaaZM<pN8CQo.Mjs<h/ajcS,b0iit)4a'ZWof#rM%E"q"WEKlK9QgF6hI/0heM`$O&5\C#C
%b_mPGZ/sSjkP$+-FnDeq$b3UPW<EO3!Oe;TK[3eq"5"H6XVUp=cb/^H#UD']=E2^mpsgh_3b.k;C7T_?6.eJ;D[>FKc!(9p@5:)<
%L!H.Cn7[>)$c.Q^G=!_jL./iQ#*\N>WX==S)r]IQH=SOq_Ukbj^A3DJ2V7=HN[ePL+LT*AiL.>=GE$CcJ2ZKNes(s4#N?ZH@]Z=r
%S&P;bZ=BsAGff_td.ub84LZM`3aF7"?cZ>H_d]]!m8V[<'_M-:4dqQ9'IK5pghDG/osCin!^9$42d0Q8c=S6NDUCrRH5=:BgsnU_
%P5Su[$+'E9AobW)DdfilCJbq`UiYN^Qos4[`^KaV=VUC@<]u4XL(2X)*j8oeOAd_94VC;t&N'"o4a0-(a4ro#U2AC?4e.[]?0GL\
%"SOjOh%KeEduePnQrfHc#grRPJ;HYZ>cigBo^+Sg`UqDF'S:;:b>N.uOKYbjqf6[85[aHTI4OTT(g,_q![2#<I17n*eE1"T'B$q"
%\fLPm;[XsE2"'+K0"0^Zbr>h`%.QJB"LGoX]_`^$DI?m\r:Vs,::aNui!!<mQuqa[khW\+e$i9E8<Fb:5O'((2ZYJK_]NAJQk#n8
%UMiIt]DGHi[[:W,LZ1m2U#qeTLGcYT6k5fr].D.L6=/uVFOqTZZQ?YZ^RtbRVnb</-^K4CjiSo5Oc(</3+9nd%"],G&#_<7hMc<S
%q4lOS[JE([^5.J!>tCc]9R/=9i+cR"kIN2eD[b<oITA-@<T'73fl5gU2P<0+`6K1gR2M8.E.0,_PCU55!s/#emX]C^8,_g\.rLs`
%'=bZ)&mU-K7\pa9h$T#mQXB5tMDrbVO`-krP4UVFX<s8i:pGkm(??7LDQUVdgcG-+mAtA*fbe-KJd8n]$=P=q='e.YQVt-l[>g8;
%2_C?HD%\^g]/\V6\aD-kiIlI;NI`(WGau4)Y#rN?/-^R8!06%#+o(DtNcbBh]GlM[8+lq#6c_qD\-+]he!g&i=Gh/\2?Jb;C]E4N
%C_3-1l!`;sFuTb0C>.$S!a%Vi?ct/$-rbDm0^&#60^\Z;WZCRr:<)6M5aYk1;lG)nMiq?HTBloDSm-iq_S3^u4X!Zi@mO"F7I?45
%M1'47^19is/O1Q,G=0EhO5TI;n#?QGf#1&[oiCO7`Q%KS<:;g>U&d+%GLH&u?p^qiqalUHHH.GoE*)g<)%7BiaOB"Zi$9*?W;uL\
%IIgpm4%8r1JBurY(AKbPfSBoT`%C/jo2<ep&CCA`95?CC=d7/:&GO%4fttcCVg^gYd@-SFX?m^"nV^EV>Z1VHi)1aL6F=b/f'N(a
%OF*q.#EBrZ?l03i4cBi,ZpJSg6[0htJdkZU=!2WJgL5.Zn3,]!$q;O;En=ci^o8RlL^`*3iJ$rQVd0R2q\j]Y/?[Z&aJl#VI\6hP
%=c\$#@R,$#bc^JHf+RRI8i(!A1)58i9<Fc*q2EfcQ"p[_8r2'AK.)-I.g+ikW*\d)duW[@F($tD<&hMJ>*A<g(?YHAa]-=/G%h-d
%8^d$Y[Es+_!,7X>Cgcd.a(M3A.,rW^6IsC4N!/UOS+dK:nI*Nq6`l\o"='5^L^?68is18RP-f@7E-8VVr/Uh1bHsVJPIbc[,'#IW
%9Yl0RXT71o0Xp9!klONn6&cQ;\\i]YYk#R+h(_Q@#ALi4;0T,Bl:4qTcPP#uDiH'Jpk;BCJ45LF>l%`k3WREqPkVcj@bR`4r!b!M
%$V5#je\c#spg3uJei@27a_c_c1j!28We8jR[c#k("t<9%E76H3k(Pd3QPf":[d=(5Y&,dGkg9TD`?=;d%B\0JEc<_bfK"!RHm!E=
%8f`$\+-mB<mH*XVFOq).2+B>kLhkf_Yl2]q^nK5dDk#.GkQouUS^W`j,1>s:YS<F9>d/V?]<7MJZBRoY!rg^:$"h8T4%O9]]Y?EG
%EjL&0:E\T-7dpY$<873M5.'F:*1cuf=fr$M<$$Rk>p)-%;QGMQ@=i@7""]IKN7K"`OrDR)a#lQXj(m>'VQ'899=![Hci]>pAcJH!
%5hWP6edo(J&0_p0e#Dk))eWbGj$JbR<$_CKIeq8k6'#b]l'A,[5'Ko>*XP&2*9$H]ZuQTK+KmqPFnZ92k*ndo@"P9L5>W=i[k<ce
%;_7,>HI*8igO3k*Ln=>cX(YkU8Z`u1UN<'>ms]JgW%i<oj7JQ^QUQiZCa^:n5?d9,"V8d!HMj$)1SYAPBp=\`=FHM0#afu.<L>]K
%73IA#FW"t7J'Q1T7'?BG\A&uMJdk2/l8sFo!#VT(7,5X3_?H5iHN_O%mB(qrYHi\48Db6ALJ?>@G4Z1]r3Xr]-uR#AA0blSllgEO
%fI4?3MA4eW)>A2BIA*RHfpL>&ibq[b(2r)>N;_<2-#IJLnP(snQR,"O;jn@HcGjO4Fp<GPB?B'ua9"))<f,mMk:+N@5c!/SKu(@%
%('H,6&="9Y_N"OL9A/9i_Kjo"i%/"!Ki#G3=dErljq$c/9;.,V;b@r3-T"ba6*usnO(mVS0rtajFQh00J0pYTn$P>C'i-f6CNeMF
%-XEu$>".PdFb(f(D-'@"]q<'D3i@OXN6tD8aP@4_b^THke8RM!#_ns9o`ObUBtFPjVU8Djp^^C_)))p]:e55MAP!&*LiRXP9[EEd
%$;EU.HSp[T+Pc8HG]DeNlPE1TG(0b0'I1.)?m]UDa9?VGRe<!&$W'C+<.&;5*#7\nE*Prs%T^E"Dc!ML<l;@/LH.Z3&5)_d#mpRB
%GJdPsr(a?UV,[A%aWi3Bmo*&SVWTu@WanXFR%JYVHK%f\m+mBU(D,?cS-.q]<0e?nUq4KZ7QQ[I$Fpmii(<9gL/23DpcJES9Yb)g
%+$lbp<!4,Ukd5,9+C&i,-&l'QnaRE>O#[)g)-FR9?<GAJ$"NOTrk@a#$QP/V<$&n`/\mD8C'P^h^^W&$@i@B15iT]#Ut_.^:?YT`
%2Ttg$2Sh'Ze$ZEXR_O)g8U%q)q.pcLO_*(<2=;*:)9.\Z3WU[RNeu0XVN+c`f.cn,.c+J`nr<l+,os*ro2dbN&_8rKSNTiPT!C]f
%fLMIIJnMaui[oC6SrNeOOluo_\U#u#J-2[>$PfkRF_;Q@;=b40VWd]h1+c`p]b+.>R0>(5!aH=V+lE4ZF-e2-/N7T=!nOug<?jgb
%FQgN;RaV?W26(jSs1:1F%AnBQFD'"5Ce@s&o/-*2jca?5[4/I83@aE,?Udu!Tat^TTf(=_oEp(nG/Brt9h`7:.j6#^TJ)(e.)jXh
%>IXMF!-G=P/(Jr8_'`@uN;#<(AfuZ<Eh[Of)'kPK0P%1_XS=%+`^9<HYP%m>@1U#1k`7<8O3g-f\@Y=6W/NVp`I:,F@Lq9%fn.O"
%DKQl'+?-bL#Xc-dB[p`\.oH3TXX,!9H[A'cc#W6!\#65Gs/">DNFq1Fg"*GR@9GPRp10*WZEke8=gfOJ9&&#$R,?]I06JWkK[&V-
%hgYD&T[dbCK0"G]LXV8>_`CFn(aUpQ[<_,),?qHq'5lb,0>JEk%seII-E8lQ`?Pt31:4&dk6u=e^&W1B]5W5=q%j#3NAM_1e>Qd8
%QY07,V\af&A!2TsZ&<UcZ,tpo#_-_5-m!BW()#iDgh;G;,Rl9m8iDSJ0Lf[@-GD](H0C*Ae#AI5S];s+qZl>:[cu5uUhL/>!(jHh
%5.Y;d3Dc5/Q2B>qItoN;)6;Ih(MAVDP]dRb7()+7UD7-L?n#20ZI9!@2jTm?S$[JcI85g'a4+`0(Ehs5B@:($ctn/XIlg3p/Ss3m
%%1/Vc%K_9XpLZr*jF\9EJke\Ob\,6.^kL?_n9lW]9MoUW5].[j3lc0:lOo?BV%rVpY'RJ6=`pMq)Kc;=kqp*gVus)kiO\PXEo$"a
%>%+.aS*i9Wk\!lbgQW*mDJ*Uug"tMp2Tr7QLPWPP9=QgVK@s?R,T;I=a^lD+%:a4d1uj]cJ>DG>WSDj]%Yj.)F%_%FTVN#5JH%V)
%L"M[8O8)LoQY+E5'0$mr(B>h_,jj+<GD:B\b@8`1c-cK"Y^.]`HeU$GQFq,nmIT)MmF](:MhL(#%e<`M)KnG.N-["e"7)nuHQ11S
%p$seMmnGO)`e$"sT\j&>GPg,4;B35&bs1J--]H4'Beu\8c5'`b_u-.2`eA$=OJOOA0EJe(.hR-?`!f0:D&t+Ij5*I-=:>:*h-][K
%;)']idYm;cOeI**CG:6.N5A4u2D'Dh.:/d)8,Qs8"$HNK#I%P822/D'<&Y:ub;#Xj`c@.8dQXa-5Ic3]nUnpJF*j6:?[uAAGf7Ml
%mGe8%<K)nRBV+1J1J+!O0a;TtDfZ"+(Y-#Xmb3a!nW</449#<XB@s-S@$[?s>?FCo*,cn"4q,8Cq=+]WOZYS.$+ldD=<e>cf<>IE
%a*R8dcUJ'7FL:.X+h-J5(o8h$6/_=J!"6%l1bdE".Ckh^D.t_3;!WpknM]6^H%Od=)&iSdo<2?.6b'm+=Ar<FeUn(*DNGVD69>ga
%.auCa_-^o@n5,V/35JY%HXbs-5.Ue>dtg/^&TI<_!g'Ge=**;2eCPR]6#K@q@h+)RFq80@[DK._%f!WIcj^R>]Vo:l13rf),Z@Y[
%Y/=5=T(f?X`H9&M]*lj$'4+YZlq4kaEqJ0f3s(^ElGBp"#$AublDRWP7kg;N$6DmeHHg04oB4kqemrJNYY"/0d=)WZQK!]RN\ND8
%A?022V)W<c.qhC"h6F%jlo>i[?6OFo`?O<([K9^4b4f;g0RnGQ14pG&!io@=Xfn4-U+F*J9^+](D]co(*=Qh^UXUmn`U3aSIb$s]
%m!+(2GuUb-Gs<5FpH,&`UfQ6TgJ@VX_+lmXTf2Zb$U8=4<l!!>#5Z9FE;p=(M-BU+k7sK&#^7c9H+q%mR/1`[>&D:IJFhKB+@oZu
%6>;i1Pl>n.R%5)LM,+hM?%D4&h=`p&4G$dTb'Ag7^?osMW9HK9hnGPhEs:!S?'#r8SB!9L1F>a=?1Td#V^emk*hSK*U%>b*&'E^^
%EM2E8Msl3B2*+&O_pfUZ1XrHMF?h/"ZHlr<^FZ;kWdWA"e5,X-mrXM(X9cTVp\di2jt0LF5)>I%(W/mN.iZcQpnXt4`ZkPZ5+oRT
%(Caq&2Vc"anM"*TC)mdI>jBWV(%PjF8OmB%-1`dR6f6>diT2)/!Ar!F<dCFE]E_a'K+mX"J`O[X#@Zh]V^[AsjekFlNuQ.V#A%K)
%rh]\kf\hq!!C:uH3)j&XaZgK&$HLEs%<Vp8&G[30jG7oXmb]!:]XfJ^f$F=a1Lh*`l4GtNNFBB1CUPQ%0b\?PFt)o7ceqVJ;DeoE
%=2bkL:[WCVK?^\)(TU0D:p`qEQ7Z,_JI]sj713!0&>lnO1k?C\jUK$P\]h<-jK[ZZfZ3%7P[SD]>sLj5=FF6V#>,GE0[W?gXSSO[
%bgiYr`Ae-?mXB0U0f"e3Ja/UelKsYigJs\Ia9jO\H8tqqJ!s4M6Ceea$TG[Q,'9@K"A[q4G<5h&e8O=@gP$)=08TAO2VuCT5a34a
%]`[9Nr*7D>FV9$Wl;Z24aVBN1`$/;L7GQ,06EsaIZ_G<OMn8rs_qs[T_V*>LVUV&-0iFcE1e>p*TG8kcF\m73m^s$.-<HTB'<ljk
%5F'#6dMYl22>1=X&DYCH$?KW.G(map`M8H#J9H7j`'>Hc?=PQR_>rs)oNXPLTKkGoms]9N+UZXHVKN+'q<ijNO.Y.&!2S1C5SB<\
%9"Ve;8;]g?S;>R5'*S6YBo:mk]_'[X*$CI6g?VT\[sHQ$OHW4_rP2u^MN`WkF86SSP.&!U:e9n*k%o)9OZ8h5o0],hV+6HsX=1-2
%Kq:fbcF,l_Kog=t!tN/[M<)MK,S*b@<jl9Mi/S2F0#h.llG$`,X;Ke!=g2-Bi/f]TDtjAm%Ys]T@]&+#`6EJMH=WJs%[c#5`s2Q:
%<Ik?fd)"Oq"Y,_!##Noo"OEgVqo.Bh5aHm-d?[%URq2KfCOc-c3HY6K3A_T*""L8BV:u\[X/W2f$bl044:F-9;e[pb0J!:[?k(ZQ
%g#StC9r/BC14)2P.!O-?.g#_1Z/6As'G;?q(2ciN.&k4dli_.iSa]^,1Y.6'njJu')Z^Gr8gNu,DY!hV%j:,k)iVoT;]3k`n]=K>
%No4ujGRYc2]87V3FPQFNs.Zj<d)@Y?\9,L\`>n<*IipIFmgd)V88YIo$64.;]`uMoE3gOL#PshXikjprE'?A9jR*iM`&t%Gi>WPZ
%H-g"]_)H,R<5kC@^oKP`5-nLf4tb5FkF)N@j\\lC3plK&/@;;G"]Qt@km#*9C`Nsq&@eus+&jQ9-e@YS"O-HJi,c*YN[IekG_+0]
%a4'o-5`+6ld0H^"$p.?sDYqP:TAn%tba27bJ3<2V_-R[sSI%]8m*ltH.'mUhd:Q+6(J__1U-)nd&&3Y\[9!=+CJX;s`6/U4mW2;%
%SL3T3#rX4t!F+9;=FP+.C1BJn$ShfX(nL[@AL<WuO9!JVe_m]Hp7QX@==K0k#3,q[TI,U4V$[0Lrr_?19WpF4#7M8c*#?S_E;X*8
%q`Kb#9u8idXhB*]h7NFr^[u=ASQ&(!:QNjb40'V)l`6M%D2Ruk.0j;!r0!d_^Cb3\irQtAXd-\ZJ.ufRB9>j@9[g4?Dq&Y[Q>EKJ
%orp92d?KFeepXVdkSZGbeBu!57<//B,mk5E46;)'E:QEPGL_O9E'WL>#u%#UDI'MDVHTdD!As$FI"bnD]S(@d&B!D7LV&+l<KbG&
%F.YQt2:r7p75QARCK;sUA+DO?3GB/g_'<PX!uNG6Oiq[RrCZQ:'NH9mK8]Vl@*0"Z0UZm0cgjdAGA5pl9WF+j^b;E!<*0hk\Z5a2
%r2);h'VZ(!^%q:+RZ6@;^J**e!KGiJcPP,HFWiG9FkVR1X)Ij5'tUd>qUj?_(T90\p7OZ8,t]'%PE2#R#'FleDaN,(VE*G>ApEj@
%6&G%_F<D+QRlpH5PP<mO:Nc^NfhBsZk$X,2,meeZSMT7(9sFn&DRoV,]>Vb9X'[9[S!:%-6=D)Zp!\_'<+Reoj,Yu:>R8cU_&YAL
%ecKMe9fHKah7nKcY"cD;T6$q?=WGbE0`Jb$K,J3g0a*BT?"=Ne-J;@(&FfSRP3H#51":/EmGd4m$Pl0Ym^n(:27GUe6JfJ-6[Mj\
%nH0(l9@i)>b=l1Xj4h2s"PB9]5OU44);nYA^&.0<^r7F\8ktN2?Gb:HR_Ah3*-3s3^u#]D$!*bji\!HmD[9FJAXWY##A#j%_Y*uF
%E?'.-i\HO8*j"8)LQQ,QdC9&#SNJl.XhpbD*KNHJ-b>no&$=>j)H:u$d*N:L9;ho\Wrn[G+:.*7RoAC8?[P=r7Xit<km)0if.E8I
%H0(Qt%U[9H#jboUm%FJVHb43KOh/(+mk2uTVGNfZp8RrW\$qK*[ha#C:)5RKm\(PDB4eAoB%)W"?%0r:/`AXR,g@+SS797[-V%u>
%jWS?6VmcO>!.L=pBIV3bn8oeD5T=TZ7ogu&Ufs'$\frlMQhSfC71>@Q$e4b<R@JDHOJ#"?<p;FN6a\;I%qX5W7bGEhKZ7eTm-+'D
%*4(F4-Bl-jGE:#EQ>uQ9mQ)F?DVm;q^VeNHcL"GYkcQo>m.9q!h`^=g:e_5W5b7%FL2$g<Z2'uBZkYmiE>"9ujPA@1gf;;8cAKRq
%>#=9iQ],0AM-H+=HKY@ZZ%dT/OLXQt#/=hD!D8!FGF-PU+NilFpS480nHc@^jO=(HS2\gh9AWG]+EtbX$m4]iC'q7I4+T1*W@i%S
%ra^_ZG1"k1$[?fgK?I*;cZ2/^bEd&?$"/"ZqP$]"5W%q66$cq,R!0?CifF9WGJ3n/IJ;KOim/;H(9qB2Z<"FjD!n[=Or6-I-5N!q
%__/^crm'GVCK[N4P_X.C;sglUnC>s/Ah&,L7(gF`fuG]V8V`e'5)mZt.Vr`]c:P=1o"LBd?M&8^G8CnjfCZmRX5Z-9^6'u2`Q8Y<
%$HAKFYPb(+ig7LER&-m$K^e>"i!6s]ktNJtK$>WcPbCm)OH=1A!:D#Vb(`HPT\B^Dfa@L_pQ7fVZj7(8Eem>#J0iONq8<(8.JeaT
%ls6)c"Ab47U1H3o;isoJkg"e0,m`[7B[&D]mD76T0T@@'fX^aQ.K]/2c[NJ5!CLM!`EijAK\C5nD)rAgmqP;7CK#oI2cfg78L?&F
%qSBf9cb=Kf1Hu*o&Z%'N:ipJ;%n@F$2/-q`!JU7Oe54\-NdV<Co:PKD_31Pl#gdIh^*&G5(8B62_llODojA8fPKos("_]h[lFh[U
%iR\3#$SiUe)2RD/M$+/ZNsM8(G:ZW5kOAsRm_T00_2\8gYMZ5*f%UZ/kPJhJ[*uNtKTTZ5)^%-++[,hA(\XJ+oH36F!p;u_a]$[n
%5_6r-Ls4&NKA1An=9>d:m-t7A0DEAH8j05\+OWqe5J^Zq&[8XS7+&jA]H3g9S'"T5F3X6h/[c+jKe@%(?rj;o:7g%u`r:t*?`>=N
%l,0'lAI"H;MdDM]!O<Pc.:/*%3cQ7!\k7-CY%*.0nq^7QjU0HRO.3Y_6"f+3`,Bhs+Ba[Ei+\?-H2Jd%]Rr="3uJJ47i'Pqf&+bC
%!SG.kO<3?$]\sC:&NH"m6ET#r;6#_%3't<Q0:4>dThoeE,4CHi?qebPJa^i"#BI#RLo!N]]Q*0PU@X`.Wo$W\$6YKR:J6=e_k-rR
%:)?\+>dns0Vng8mrM"3"7)kdU-f$d8T'I*Dii,O_-D'/?Fn)8[`l0as6TjIY1@YK@f>WqK(DfkF@(:Fc(7QnI1pP#`_fbLf:@-u>
%icl)3+Kr8!`_"LL_Sr1DFR^VFM2NaK2VJ?l!4m+.aV#rjpjn>N**b+fr.0c=NJDb]3K.0)F$.C)]I>J)-#E*V56rm5a?k+@j@d"-
%VS'm35S4f.YaN(Incpe=W-@1ZM$.o::M^MF4>0.d=,Z6,Qrq[B0uPZ8ULOU5;I_kHkJ.[AN(aA9m]9!Uq+*WMI%jsjh8eZc3lD\b
%;VB!PFo,E+#AABW4@.3*`H,uO*DT2;`A8"f_^:s_BA2?*J4V]iKP%g7'-q&3`"R^=/Y3&I`$V&YHFnD3putI7M3iAT*!kJlGij:-
%k@hpiY?Q7[GTuadRWt]U'$l+_?f!oELNk!t1mrRi^#J%.`6`*"?LgZM#ESou:E3\F4@e^ti?o*)(/MScT#RiO:?"9qMe1lSRG["L
%,s&eA4F]%q>Q3_kieKk/Ti%eE?4gWV6%@0+c:_p3q?NHXGl-*Br3iJRFHKejnLD8'7s&e`j0[X_*5&Xmma0&=Rps"6.Q963Gg6a(
%F;4426FcMQ:/M02KTEQf=a?=9@\*2LLi$tM&SLn$<E^.2e`5+"paY9.;elm[J."@+<M\pqL'n1ANsi&^/H1un;de5<\<s0IVU3.S
%>_D$PLEursZR8q)cme`[1j)Q</pVqC!+b6q+fnf2gi5#oiSfLD[njW,MLC44:p+&jh1KARqCM",2&C'"WFe%fYau6g"k+Y`hHjdJ
%eT:%@nb1uE]NYP*4<B]*mUacJB!A;8,^N5U(o>KTHlol=9EV5=ih</c?fd#3(j?OAHSmT<Vh_kY`*`J[:gR+Yg%\e>>Dl\bM79fJ
%lb:`DeQgkg5]D]Y1(VWG5#+@dR!22G`,CDq)#egS50:M_]bJ#'-j)"GU#-no7P[$D+,Le^0LC,M9J6Q:]u(nM2OLO*psVA4F+417
%/Ina0j,e@^iCH8;bin:ME8r:g,8(o>J&ii0q2Igc/jD"rjHF[TVYZCDmeqo'd7NT-TcVDFq*KM@*j8oFMaJachl#(91+ih*jlO9_
%ONQC5I(VJh,L5W:PJ<ZENb<(?EPhaj$S4+jD*^m\XNh9A\'/nQi6s$G.#7<Z%iSR=d-C/TB"I4Y>"jqq$WcJhTu`o-=!/,LmNEgI
%]YE%Q]oQ[eW73#`"5,WFr8ELo[_9Uq3X.tCS=Koj.A'Y7"i-M\j/h$"!b\MT3uccR-aH`/+llJEQG3Q0I*Z<Vc5(W_08032n;FM>
%h[Cmb'%T?QCi]u<-&2cW;5F<]j3_Xn_atOW`eNq7X+gjAT[dF68CK,I%pk2mo>1TYD'<;O@$)=C:TQlZkW:3'+h8U`:tC3Dlp3UE
%E<&G!qQO5"JW<"NOW75=^-G'"m3K[8r`ZnXIj9YeC3c=RXhlcBCh:8k*U=m@@XCY%9M1?q_dqL2X'tt#5.]Bum=P)[iLoho.'@p*
%8qCJ&-jt2G4da\(FM?-40if`@fg"9YWpg>uA$B"tcAVgd*BVGqNr$q*GZ:).BmL1;>5^1kQ0dU84]lO;k>n)@h2,J=&<!,2-9egL
%:UjNhrj:pC@CoO1J=8-Nr;Ll*rn*c@eTM&>6e3`?_kP0,$-6Mt^<fhfVNL#jT@jf#])VD=h4L:,XbPg[G%,\WYDV)_iEGk.&\1Wl
%Z+MA@T+_@Q]"rM#9\,`(7@(p5qtnrS@]>]F1+trrl[ub)n:e++1Kk>Ka3$*&g\U*[M)"tJ@tb5>A'`k`?lRf7FfsONc[7R#\s!IN
%HD4U'2pE-TNYt6>F**0OB$ccRQnMj2q;U;AEVB4&Z+/ior+oK<gRZG#TfDY_,EOu$*GrE)=mtV6[JuhUb<5EkZ\qqkdX;2Ujq+6g
%T"^jYe;-5Ji!Ut?XMK7K[ENau*i#5!4tN`JbLG"j0:2=M%\Tq4NN:[pn],*-S)FW\EAH:ZPa.3WauCAA<r/t=NFd$J5i<0bP(^+)
%%tdBTO4inH:T]G%3'5%R!W\!U)V7M!(qE%G=R!b!!-L?3g70FA+k+'X6)^J$<es,eB\Dt/:M%=Mb:1En":Q-Bh$K$@=Aa5e??.s)
%[EZPr*oeVDi#f[X/].Q:lQk=X&2@A<W[%C<_h5?[>!9@_\*4+&45Go>Np;Lr[FsF:-u-KqJ&hu2Sr\:8(5$)s6UBNnbl)DT<6q:2
%nVH[iE7_[t2(5JS\pIO?U5\CLm#Z1`FG76r5%pr2TN$`K&9G^qq:7JW\nHGG>R,+CX>)^55\3Q,[_$V3ktC"F$gesASBK1N?\DD$
%*XHMYq6%JS9M$^4BGB97U%dWk;$9+qe`Ht8[V<IfS`S1o)HDr,p#hM7GBTd?"7,8:oe+S"la-*ZdJ8QA;S$@5]F\e0Y#>1[9f4'H
%.^fo6+Zs($+2q^6GIQbHO8L&`qg\,oJ*\0G#DMHD[l[e!'rp3W=52Ki>*/D12pD_!ld("<;D5Z5i>skj/*,Gi`[FXKg+)YT!X#V0
%8hMetXn*&'[K&OH54Kt@Gq!NaWf*_.CdijVE#QWR&mPjT#f[afG6!bm7Ipo^hrnB"'QN"S]"re\7_n7)80lNAG@Ti<.:DTseEDc#
%q0@1<+'<D]q?N*PL;iOH(LOS]l:7Eg]Q=A-5q20_kp%lVWb@KE!KEYdG1^()4A*\ep-QI74j(9bNL^:XTVTOnX5I_3?3V8&oIcpa
%aS&RJ$;e0I3&P4iVk\Hd?H*3K<N_C(mt>Qe6X<O%RBE*BRk!sL%+8]a?NJGVohC0"M%c&f=Wf#!B?<"[Gg9JRhY3d!I/-o^&Lb[6
%%DNBBY1DF%4>&nKPI#b0/]=P'&9OEP426*]Q]E/.&B@c:j-p$uFbaLkY9'"tUr`U+<tmq86?Pi[1ugiP>!GQ>o%T?`E./H<cljp)
%:fp/7_$@c^S@NJ_DT[aureJF64^kDMEu1)/e2n/+8A*#Y7@bL#<0T5&S"9rEa7*bG#s<<t8SCQK&9q+OfL.2XNFZa4[:W>nR51+V
%gf:bA@FXq4S7tT+"POg=hr2b"pG)#F5dZ0&;[M@gGE7E+EkZNL(Xk8,2RRG_Ib]4_H10j65t.@/=5S;`a&.J%\/V=GJb.EYKn%Pa
%[g9bjE1^$0lT`(t*GN(Tmgp/#,tDA;8Ioip#j1@r*A6@bh+>O<4Wd.sD:Vsjn/Y/Z*a`PAgJ3eUKj35gEjGjgm"F><k*%5KI_4u#
%bmWHLmo"R&Cfp"@*S+'/SU:[U-`&J+b@3Z)`6hsHpgeA_??K=;`TpNfaGZ`V_1quL4\I4h=kS^(C<OH(mk]nU;;86rZhDM#]bH\T
%]d]mV`n]68!*h;YGOHE]HH);BY0)p_KEVF$%l]F.X!Uh_>o-?1@6,Ds#n1uA[KBPqk(V%U!`%'^o`X/(J(A[A_NoV'?+B-Hot_og
%0O4M`lX91+bi(Pe)JicZqt>.(*enU9!<%0s#/N.')V4=uU&#ZWXCj8Ps+mtHFQ*=*fnZ7U_iCl"p4QFf,j,c=\qYA8`l+Y<\5tk>
%_tQ^]Z)>Fj';$(gq:cp]1iOUOBAC\CP*/?Ikk<@02]Mh[I8B1n*5pLGLS2aemr1&XZufS-Z0\FS7u<)EpUSL_MYE`0_(.nqB.<QE
%11g&T!ks0F/=,"_,W6UTD2]+':_.bk3!AK-(G<*_OL>T'iFm5S>u2FrUbVEs'OE@o.ulP9[_r?8!bH^YrX4$9`=eZRI`d"^O_bsh
%7u<:S;hQuCA#1`Br@,/lm69Ia505!LNd^-%V=&)urqUKcJcF;b:5qK1pIR_s,#Bu^2Gc!&<_U/.-d*<QXO[`1k[T&RhV<,fk+9_0
%*uaYd6:<ds1GSUCI.NI'p[8o(q!/7c61sedHa+r5ArhbTC$>P^^7n+Ymu-^4!;`s[6DlXf'[d'Z8M61DILk6YcU1"_IG[5s//#-Z
%dWusPHdc[YZ_U?(#+oeB:6;/[=^K#K=[pa6BEi-]')1VD(J.^`pIJP^lOa_H>M>0k[3L$223PMjXt&g!ab",N>!YWLqu*$ao!29q
%ngG;a,TPKE#G5jO`/)?#6/7N4aLX]B#+9pQmceH`=-qhDqqkSLfX?/e^oCjr1-dsARX,+,J#PYXn2ES\0Q[XY/4=q5S8"fl^IC6r
%adFQM0c1n#/CE,eguDh@F+/U#)!OB@TAm%f"cJ=rik,pX(WB>)+:=&?J9Ghlq.HFH]"K._"Lt6k267W-M".R*ft=>("uboQP#d0]
%<Cc!%1ZuuZKU;b;AjLjW\i\g0h?W6[$p,r"Td)U.dWJm?:iLc,]Dfm\-SD'aeCG`m:.>MR=S,uSN[VXB$n6sqTIkI?E%[h(-l-aA
%//%u'f33AK[T.5L@N]Q@EZE#R+Rc\l4(+W13cquCdGA%uE4)gr]J&p;R97%d%0rCZ\P8J7A57>:6qVOD$]pIWA'=jB<'jG4el$gA
%8"[TOhcSV#.R>123WDqEkLf[=E49S2Bl6I+j;t/[XjB+FDO/cm(AiWg;R[l8_;FSRVQHKJf&Q'=\(G$oLZmGt4>:u!]8,ElZ<pnI
%Si%0,<73Y<$QukK(-?0F!&K57)GuH8U#S9B5dLj"*+ua50ID&jH,eZ$cOtYJ6<XW=+t-80#%$R<kfibY`%G!%*$Pj^R6,=Jg162,
%8B3lIVp>RGp<a0JR#Y"ZiOW)U4`[r?hQ?5Mk_%ick;%i3mV-$!p-dO5@1-)BaUV#1EL21=L\S*DfWYf?Qi/A>bnJ_0k0jk=a1m,^
%LTg<ihtPK4XOZN;0UM8FIJ)EjX5%G6BtU@Vi&o'r*e/A7cA/u@p>$%2YFb:Ghr[0+.(gOcE,;"@rcDRn#$qoEis*.RR2E"Qk[?\k
%<H&Gu8`o(#jIc"o@W3sh9TS!J[Sm7\"f34tgsGGEZ++A#F98jN#26)J;>KFOJN<,sK&@>IbHS!RpT4Q-m+47)./TDa3Ei%iPE2O,
%OT5u`pIOT>Sh(;bDf=Z4i%A1fa*T)0$V^K&gYoQK<oiu@R7ck\F\f)gSP"5rhZ53p4so'=Fal3VFXg9>Fse0,annE6YEKQ`4^-<e
%S9V(8r!otmh0ou&Pcc)=XY-kCO3f>WcL+`m*8Tp]OO^O]ibY`g1<'r;8J.a)?,A$8n<1=!O4!n0fGS1'HHhYt=9Edd,(f'urO=Q@
%7X:900fg,grF#E_DAn'C4;L-GQB[@NnS\I*_-67"hcLb<lf6Q2$U=#3ICahuU'oabG-EU!GLFe-H!3NW7C1OTo[b)VB&hoU!]%(;
%$QRg(n@eD9EC$]U*Ogg[>*<G2"-mjWr566<%+.Pmith3j"'t(jL[5pWiOFCP&Q['gr8Z'l95b;ZYuZ+SO4UB.FW*"^D;Zf9B0*I'
%euk+&hphMCHgsDXa1bWQ+o7B0jE[dZI)LOG\0<n+9hqWrS",#nFg'lQpR5sT[Rd91mnQ,"^*OuEn&9m)^?m(^qJkI9_Y/3#)uhPf
%5:$-<P;3X$TDS?IB6\KQjh'*mG<T@6)J+hDb^6<GJ'"s,!YDJD,RhS*LksB34X]8L,@(f$P+[/;=6grT6hceN*O:B6#Q+3s\$jcV
%5%X?UM%a8qG$u@g%ds/[qo[5rs,UM7qtFVR"S<RKU#SLaJY;an;EX=81/6>C,`!ffYRuPg5rd%",COQ=L^+D3WNe6s!MSCI9?C:4
%OfR@[Y]ZWj?4VFi>$T#9N4jnPZ04'kjdbE5VQHe=q,.^#0?ul#.m]tXMT^slP]K%dTk,:I8!'Zc#Ack(iPVWuG0iFN,Lf!6>#9kX
%d"/_ja6t4I2ieLn!V]<KrPA9LjTKsTn@k9]P;1ING"tgn\ZM!ZOZi.B:ho$[7<nkO:i$TsMO7MHdYdlE&#\0u2!*X>/55u`g@RHc
%.B#/O+7+X`]*:86]+^ii:-^(FoZ**7d0eYq93/D@SFh9(Gpa_d[lU^#6mGanH<,J]:BX8e!N&HPE"kr=#I`V7l\_1Y4si!I5$fYQ
%-Y^BS>hH^I(Q\>[J`cXcir_\:?^[-DMgkH6=R/EuL"4*^S*]jdhDL^*QCi@FbA')r.tLRF\F?9LD/iL]mLV8i4&IF!p((Zlmn$&%
%Q7J=rN_;n/!.!_fCaTJd:^eF`c<1UC\t4Z+M;fb=p<6]`CCF+1`0j_g9fN8)j_D3X!FCa_SZoVUd]uBjcD>/cehQ.NfLh%WhL-aV
%BX^uW7@A(6jED81Fb0cPNA:V*7u[X_n>tqNbZ_;@$'sgS5q*k%lQa_]08<I^X;-[rHD[1B>#.XZ.aJ!D#*KB'<=b<k+K=Ifr;:EX
%/TYsE!4n;9<VEEpbjGp8XHC(GET"Hn8NrQ-aX%GfSliXJ"1G_"p3X=ka3#'20!ftAos[-VJH^l"#l7+L*;JS5gSNgW[I`C099Q\<
%*Q"d@OjP4\%AMd*YhRbaAi:jc@tp:74^e-\/#Es%Q#)8]=XVZKC]N6)]b:s$=Y!GWMbD&]Os!U)9Lgb.#9M!^UfQ+[<[X&5(;#b3
%Mq2!6!8t;n]:TBpHgt.44WTJ67ji's9uARt/"oXnW7C*:LuL")f)kS!c`P,5fdh[SDu,1u-`"L=\ZPPm.&Wlc)5Qa[fjHorFs@\H
%.EAmuqp4b"iYM9dN6T'R$G/J"^jl:.o78-LU9/Q?Q*\Z;o=)O3e.7`-Q!f<$l6dZ+%$bSJ-X,DqFM(umZQ(Kkdb;:QTB>7QnXZaH
%/GGTL=Qag8=aullSK7f.$\=`ti_aQN^i#c[[m&_kCC5]GdXXb%<\(20:Zp"tpnbEfM[MS"eeq>%mr7j>eNUgh2,"CZ,`UuqB/PDe
%E]MdW)SGhndWIX=p$M?<p]]1Q6SDPDFo+k_(!2c\B+2Oa[8LnL(l#dP$XWU`BOpsIQ'@s,=]"DQm;/r:&We0()Jk;r"E[k&3s^Xm
%[Vd:%`')c-)la80gB85la1W-JlckcFCJ"d5QCblaShd/CX11NH]9]&CX+KP.\XVhR=Z\gS@5ZT#`rJUc0-tlF6sGWgA;s4+@'GkP
%_U*,-OgH^?"Ou+Wphq&:_70\GBqS@a1FVI^m6:Ym>tW3\s78cQV";%K84o`'EqO;Kpr-_5Z#,P&T"-(45)KNEi0=$@__?#kC5"r"
%],[,@0\%nL($D*qlA1guZ)uqNe*V5b**o%7MBK8dZcLY2<NL_8<9_'=lCYm$K^'-^QJW^0"#e1/&*7dZHdKb+"h-5uo?=hs`]$JI
%Z!1-9agH&kQ^V)a%V=H%-Oo'bn9A2C\CU%a$a,N66e:5#2p/3;;!jVYAS\9m.bQR-DSKhaB*4ip;%f@J9SB=<fkE0WgB2.W0H9Z;
%&:X&:Qqt-V82rK<4Yuto&+CJB)mst)c"u$m3*J4q!/7fCekE'j%kap11ugM2:\.a6AY[m6;;j]UMe#:mI2(e8ZfP%V\o*uR;=LbA
%OOZIBI^4Fu.p!'=b/QcPoS-DDQe>j(+9cn<UL\*pq[[7V5V^n'K:E]CXFeuR\+Kc?H?,niS^9i?"O\RKg[66<(P^J=,l>JVYRY6Z
%[\m\bO^2<)ag!$aK2%al8KOfZ7D+KcZUlSH/mPB-G[L$#8f>)_&gU_!Nus+N-(r%#lFOUpMF.tI0?l?hS@V'ZYH0[]SKAf_0aklZ
%.eVon"+F)D^CnboIURtZ_&!2M4hfpX;RU,mM$2f!4I4&J/kh>#8m6V!'Q\N!OQ!H``j+O`YruR>F%m@KlHVJK<>,EjLFA7_0)*qF
%B7kCn(K`Cn\,Z?Np2@4BrUJg0s$>A,p+b8=b8gV,QjX"t9W`6AkKIt+(b[#3>tc:.,$WlKi,KuT&I`H3A0n6V"][Qr:685q$'AVH
%#HZb3)NNBjI)E@]V;jnh@'k*P,tQrr<U7cU$rVG\CARO^Zbd=C[i]-UV#OVqjdH+)(HSSm(9]l?9['j:4^mbb/O4LgOlmqU2_9Xc
%M82KD1!Z^b-77*q>R,I%K7K*eM/KYWg:A:tPUT>/;Y^L8<%6,L_^$L&C+b;MYm>;WTb""CJHU7qTsU0Q8f4MP/(@tEnNnV,qP<Vg
%Z4k_&9LV+^p<+`6B)$rAX;M`3BfO-?0J6h1.]CJA)&Z%%NVe"RQ;,O0>rWR62&fS;S)GhBBXE?i/F;YP&(C1pW.O&oJggf4io%0G
%Rt814B_5=J[O8UkQr'`-UD3e'8;73jZmO%0%)%8VK5iJ2\Vr,5!m4gXImM'VeHi;8Z=$'J0aL6%@Kfed()C,d:ss/sZZt@q\F0e4
%Z'!kQo^a@-Zd3M0r,h7DKDn0t/Lt=MV^Y07=KeC18YWS+pD"CtN(Q*#El_cGPCc+6CHASn2l"(1/2*87PRW*RP]BhT1K9P]M4,nT
%@a1.s!@edm[TZ+m;H#;BU4\3c*>G"uXN@.AGpb%T@>T\YMYb*bR(oo#Gu]R=!i@s.j1;hpp@/mp60Z5B+SbOh;1Dq#@X[g$%F^.(
%FebCiU_tRs$8,6[1D!_W\X:3+5h(H,jCWKPck21r^]KONU)C%C3Nr,o)PWu&PSJ#_UY(8H[2U16X5@6<B[n`LjWFN;qNa?j7eR@_
%OoP7LGBiuqpt(#o=(*H5rY)-+L)Et\-pRi12IaV@XU'J/3)CJY6aUO[h/&JgXqf#XHAa+qs7JJMr86(4s*_<RlWXd9s81RNq1"+-
%s7VLrn\=R0KN:Bo`ELBVf[#:)"'^!^F2ia=SXHnl_X>F4*^_i-IM4a=;Dt9*8fA`k]OS/!6!#:l*V<4mbt3QE*/`Y(5]4n;pm9L;
%NOe=7rj_QoTs,Hg2qF92pd\MW=!nGI"W\4>6,d`\;TAfmgJSQd6k$Lk8mkC%OAF.\!-79G.:#u+=n+mRcnW3P;/((WP^oQTc?H1/
%<1GcOId@K&BjI+lRoBW7/@.fQ_X$i"%-)Lo]"ab##Te5EJ%TN+`2UmH/bK.?al_6.:.ChWFb*d[c*/4RLBDHJ;k-+o0P0Ht[@X]*
%=X1L[-a6+80BAP<YhRc<U"78Hgn"uF`@SqgHhh(l(qp;q.Q1$;lE*5X:bM+fAA"N=6`H&:M7pgK4qG.6;q!F1+I"tKTJQ5^(W\F8
%"TY%I_tkJs<5S8eP2!;d^0F?IA,Kc(BD<#>5j\T-Gb+bN>J%ZB-XT9j(6ST3<\FeW7\sN&QDeg8!6ammr!QYF"p.nRP-VW+s!G;J
%^jI.Bn5J:?hX8#hXlL:M%T>n"AAA<qQC?$g],JcXaT2?]mSKa"kqjLOUAj6!Y9Ap>,uB,?.N<:.`\8pq"!;=0,Q^"Y<*2G'96^3M
%-s&o-"o)72QcV'&0(>mmWnW)HP4uS6_=u-(gn'MpK`o8s%eVV'0E_2%qjdl8:8Q,r=E1FX9@%;R&dT5Jd#)RaXRs/Kc"rc+9E8WX
%!ki`MA+I8R6;:Ul(O%AA524&Nr%O/cp$dG#`;TTo(f2/gd(IC*25@(B"G@AfES^e:6nE=+aQT3F]Dt?Y)PM&IBIX'FT"#jBN)Q-`
%m"M_i5[k'2-A1]"!7XEbhhuL0Sdk2.0bE&:.mK\$r9PV&!C15L:-mQl`mP[=BqR6>W"=K?qkhpm9%:YNm^*\TM8eianZL!I+`!AF
%cV51-5b."3X[tdc5gqL6\*K13Sdk5??FVPN)*Un7#oMkl-#I'.a5SgF+E1=k($0]F.dmZr_9>cqFpqSC0T:QC:hZ\p?7NHQ%F]W)
%eIQ(@/9VJ`._,^97rir7`)lOiJ-Q"k1PN.m4Bd7r>rIQ/Wl]f%[?<to3*i3dGM+olBE4QuCsgD*eSgXBAi.'KUN*NUT*./U]FY"<
%+BZGVESR^PpM)jXoo\E-WrAZkQ0NTNi2$&TJFt_<@[m+\>_\K:i>&sFq)43F!")B"lO4SKlokMBY7o(pbikb#b96J_S,7B(?]=%=
%Ck/_O@*)5]+.*/[>`@BJ8c"OCj,r7L'T!^nM@'@f%r!f1Z=46Tm%c&a&?YX#I];TP"n8C($?.]]iWY)U/^_aMgn'MojaK%Qo_mN[
%'l.g)cd2*-5X5^,g3/LX</PPn:7*!Gg,5TX$$`h:d4Km&K`rQ=@$QN62E'c8MVX:B<3->GHa:4PXFf$seNe#u7efT+nhO$k>dZ8@
%6p)\`5]kLllN;1?3Q)BBZ8$_K<eVJhN['2O#\OIt+;N>bnSRMk%P/i=DmS;YiT(o#-e4\ONRi!<4HALrCl#9rV;=D3/GoS$",\%t
%VBSqlV_d-P70H#.]RWF!7pH*.;"I5X61I,@X>6o.;F+`a,@N!'k`0@A_n(@[R#R%me[Ojagn"uEKlj#UHhu^gkuXBpE3XGQAOWt^
%&B._3Q,h[7D8iIhNu\D)F5Ig_:DSFt(9WDh47?)X#89*g1:YTnQM9#dG:_,/)jpD?*4KP_Ho6a$^<BA,RjMW5;.G5oX*.jli%NkU
%@:Z'JT)#c%)I4kW#7MfFXKZ'>@ZRr'&\G0_m&XcKF7rFS:;lt8agAW$a)QGa^_c<]aj""<T5(o\LF9?M,&l[OrB`Fq:O'j28Ir?>
%3%Lq.4>p6XlD?ihalRJjUoknT!**TSE`B)u7_qi<f;#i=)r<(miY&/M.&t$KiCAcbj:-fTF7f<fi*]8[]F>&%/b9#l@OVc-mpJ$8
%eI!QJ0n/=3[]QU^W6,RaZ#!WU5s6^qWEL`9'W*`lic-6QB1%'CW1[<[s(!KT'"]UXhB7,eUuO!.S*p^Z9FKZ%M5@IZ6P*Fda^V],
%1GD@HplLXVpRt\t5e3E'IL_DnGIQmXgn"uEe[\r:#5dFebU\)F#[8VaYrHIl4V#_.MA]#m#,.'mTibl$URK.5lkO>5M>@AOkfkE3
%/5[,"cl(h>*tcrQXE@Q0W?6k7],oe/eQDm+q1&VK5>1G@b^cfAT)ar[,^p/&ktPAZ%rt5q+saC07[RPSLOR*@^toIqr:Fc8/O\M'
%=<`>S-lZo&?]X7@Ck/_e@qfY>j&:.MTV7/%!h"_W^jU>;R$4s(>Z<RR1IVUlV4ImUS[-KD3.+"%"8'%7o/ZmO;`[NY.dN%:q`6tj
%FTitSe(aOdDU4(4lEHdOFo:cK&Q:KO=[L47lie+q$nRDj@B)L;._c7g,74p@#X6e$*O;NdB!ig;Tl!(\m].l_ciVX*9ei2='+?gB
%''T13+Lbu.I&ZpO1]Il+M^k]@ZSDht]D/9?6%p$YH:2YQCO+&e)@2j1"tI(Micc0q=93oqSN\WJSK/X$3+4Wu6dW[D3/lUUiOt1.
%_B\YnHS[i<$lKfgG$929nrcVndp4o>ILqELS.(0s;<>ZO(hk/6,J7$lTt)SEH4P+QFTFM`6MH[BQD%DaVR&81rnTPO:WE.od'%Ti
%\:`pF.8NOsGd2NfB2%Ksc'U_oXg+'ho4UnhGqYp43QAsYV^b);^nNFXKL>,Vh+[%(HWIa1p5D^6MXAA:DU6>sC4?J"roYd$mV2_3
%D9889J9aHUP6i^;.cXK<3^`[UbX)h-d13;L<b*$I=0jdR>_n$#a>6gVcQO@%A?@``pi\f\gTpppoJ`s0qhI<t>5t6q[.U'Vm)T)>
%XOo?8>,,>KJ_PFXrJ?P31U,t1L(eAJRLEK)Z[eUf>8Rq<R,-P'+W;F"E?r#+6[XRkBOF('>ZCen:)N#CK,8:_=)VH30=S.17!Lp)
%"3Jm:32[6]o"aTEW\6j(OD:g`3H+!t6`F`r,+<`LkMm\&:BpPcN(Q\7"5\j+?]1jP7;*,MM@Id0L7uZ5h0c!$9'Jah:o1ac\1\FC
%8#Ue@+ktj<Ap-!b/$gp7M=$q#XSB_+++I`'qU"N^jZ%-R`qRWLZd+^'j*2:"6"Lh&RRB+of+_=NOMoofaEZjMnb-(S":Kf#eI&iX
%C'AQllmY2CEM:0uW1IsL<I8BXmqROtS%\.^,IorVii?4\:s;+E,q_9'$+lKm6aUJ#4G$sr=T\u5ihd_*A_^G+,iR5l6'=X14`.jQ
%H/:QmKB?V6cG::AgJO1h9>6/V,;'4AHT&`B3dZkb,LcGZ;/KG779^Jrj_"AY_@QhYRO63;1,`$d0IB^'Oj8h_cpsIrf`a%9LA!V!
%qLAi`"]B:fYc8lS=g$>Uf#M4SSrN38LD:*u+'=W_N#GRrO9%H;dFa!g+hKXkSY4o\kS&_/DboFIoMu.hU"LW&[.oBm8.\3@B.N)f
%Y"P%3!9V2Q^%M=pDU4(4dY\8/l0#(HAC-cg<e8Y;CT>3_^bL:Qc)amI;_Z=S;NU\,XKgrW%UVUMeJp6d@X5hh+i_kIH>_!?Hk58I
%4W3--ojV<^T,I,`;:h\aOhmaP5VX[X8]C4eW*JFfVj^bHh4CCih^1>/F^cJA5A`%qEc%f*;<YUQ7j2b?L*#3c7#bJZN9'\KLbGY\
%/d:gD/4ikY-/'-,5DST?(SWN2\.fA[lSk%N+J\mG9k/HR3Wem+]tenW[W$A6L`%h_T1,54mh$c`+9gTb=Y<0aHT&g/RsjNc^/=h9
%nNt?BSUpERDf9=o3?I8`MYF>CIV-63M[CK)Fu/l"bUh]_V8'toefUt)+>3jH*q2-i"Z,\iW86oO*4I<UHb%>-<'Cu0UiQ0[LiBYN
%@%eI(N^W4pWKt]+Ka-Gk;Bgr'#9J`#J[0CR86qS=+\[b']1Tc/'*.=.+`orIG.Wc9jOSCc?Oc&hCj[n02_jI@1]f"G>"]p(cqHB?
%#7FBh#RDb6#pM:+hOD!;;9-*sU93*=h*_a_:i447Sh/JP\dnF)</_N4bMtj*:BpS,\c[0):[E*!E+*F,b")qb7U]Qc9c"F`\g[W\
%H`*VoOi(s<CLCUrZBSOJBia@,kQ6X?._Pr)XT0u;A5bl/>`Ih<Cl#:W"WS1?m*%s<$?An<F03-hJ`Fa*?U0CHjjap,k,*_eP[mr#
%=LG1F#EkgFcGdfop5ZE];SDg>[NNb:-3,b^F*hV07=k-8#',&K_H.]T>/Ke3JFd-P9=<tY/FZm[YAb;.S]UH.iq2ZmO;dan;dP5J
%SQBSs.]>`^.fQ7^5X^SaUP*IOV4FZN%(Kk,#ofl6"$I.Tp1/\<?lG"8KS=m31d]`.5aQ":7Q:lO'W:C0oL_MI\&t9;4ApEXRKi[=
%84+tEJX*oC")slC!2+oq_ZEBo=Ppd'9=elU\f/ZWfa(r1odfC5&$/84rXj]4[Dkis+qZCrH)k?3&<!SXg9Rb]/MWkO+Cca$CI]Gu
%30r"V1;?\$93%I$HXXld:o_@iSo9qt\NLhg.m[@-iCA!E^C;n#,\'f%*["=(amT:tNoD,d@kh1;(4rdgk+shTCX"-+9u>1UY>ASf
%cY9O77('RTiJGapn_4d4]GeiXanT3=>Kc='1Y:PGI:La/:L;n;dY-r#CLToA3mLu1?$5A9XXp_"\.6f#ne`WdR+Wi0+QTKOM%oa$
%:*Np^<A(Z,H2(_WjS!DC05#9!b)c"%(V2q$>agS)gesu\A3kXq8JV<pb7k<E%4_G]St+_aDG]Ca[!Qjb4$OP9O^`"nj`aFV8d06I
%,B3=u'Rh%BmE,-03Gn=JWIGcarA1rj5XoIX8@8O7M+JE*6b<2gAnD4$!j[qYQ*-.91=DX=cD)lNZ_AAJmq@6*d4L9l&/'hE2_"O6
%l(4I@f#rX"SrN6))70VJ!K$[KFU:lE8pNLo^bosA(f;8u\lr8`4euYQoH6XM;hn>hWKn#:#3hWqRtj,9#plg/L.+R+OB4IJE?/DI
%jS!DG0B%UE]KT=k"6*nqRCi]FYcdC<"Or(Y_GL=BWiEK(U2;69Gasd-&-GqihB5@;,e"bGb4%aC!Q9GN>IJY,W>>ZI4WEA'Le.E!
%'Doof6=-IX^'JGlA(QK+?&'\-UT:\r^dKi*=(7^m>?tP"#J@FKDT-ZK7SmAp(KhL#\`T[r6NaJ@b]kk$gQUU0>bF_uqS;gu$NTCD
%2!QlLY4K_`0?=37T4&"'&QnirMe+JEUfar<;PSJG7_OuIqg4<oYREm<M4@N^5bOs%A,tk=!aH2qp2#C8;^Xk%o9oIq8tjG8`i"i6
%VpM3[V)#^"_qg.>9>H[NV!oNUW`038Yk(!5k$"4.cQYt1>'pV,2gIJei?P71(6_j%/d??C2SrP]'D:EN^`rgl[Fg2@.0SM^,U?E3
%2Kc&F#_Z'-TtWA<VhZG/fUB4-ORprLUtEBkmV)Gql_6NCdqFWqW_+%n"1^Q6iCer#S+BQW69o33EZfd4KR[eVZ)^ePTRa9C*8d_r
%3V%\8UfTI:E8OIC3da4?^nHReZaIa9,'g.M'd*LZ8X&p/N8(]/rBM_.O5hlY.$V\gYT<i/qV7PQ4R=79RBmgcNOOfsR^a4+<#Klu
%(C7Hd]V1Vm.bpDD+"?h^Wt4I%L@ScPn+:cdOP@)R^659%`gmVk-NNnZ()2!E:S.dNRa*<X+=_b9)+A:PimtbG=il@+:EUMjAi[($
%eF8NTV"a5k_GEX2L$jP=L0E)Wn%'L[mF_bP]"$<=q9UC;6/8]&dG7`s8WOfFe>5<;32)I5(rKK`YhQgt,\/X[b@C1?-?@%9&9rda
%7#m5=WiA8o_mit^ma]LI,qD3Vn;)Qfq]0/4(-?)IhU(A!$OA"n@A=gO$rfJ@A_NkuSa4D/=JqP89nAWVm$"Hse"k^1EWe/<T0BoG
%@GIF_mhP86SS%*giTHgsWEBHbD/<DJ&0WI^ETV#8T]462T,Q@ZPokQW`N:=/@ld%9>,bN95:_1Q6+@#AIlVKd>_P`l?=^&iVJnPW
%gTqL+R`2d3W=RX(J)=60^=FJ<"4S!?:,mr\bg6bqC=V*^HSdGN3dK9lU_T<fb@]te3P5JT3QB%'$im:>ro!LDlJZM.J@#!QhiHjl
%Cl#:E`EL:e[-iipM))]VCS*2WKM]nAJqCCGA"fh$M&WOT/a<ntAgmUi(!\$KWJ&ceKQ7E+]EshO'KsrZ>E_^00KPVcbW60qA2QO\
%jS!DCYP_2^H[Q#1s7<6d"s;:7e+WGCKUntPKNZk!l70T)DJqs"!0"?QU)@X6/h(8,=1?ulA[TH/KK^RnC=*fknm;A\)WK>\(ru$s
%!+2kQZ!R4GK0!)'I[u!".>Q8"-Ypo*))W1t)$t2-l#!h2$'C1Zi0%faJMnp;_&P&fR97a"67KETWPb,c(3_q&B8Y%K=c7?7h-Q'#
%p2#74pO*`prlff*&(mN!;VDC!5*!pc[0WrTlaX&tnmt_+5TDQHli]h_1+Xd*MLEg*)l='M5^n(/m;Rf'A\*HaB<(:<OkcN;nPtq\
%e8[\mUJS)[U]N3N&r=+L>%#\^Q1>-7=;F4J-eb931AdM:H<?-To.cT)A7O`0"idO#A3A4J!YonlaTTd-fk0t<P2!;d^8*QPnPdmg
%Vu_R>2$KY7O1lmuM,h,?eB8i3kmL2lj@C5&+ulu^*jfUR2N5/2#[$A$=soOh<EC@_G<i$sau+<!Nn^l@^@j^Tp6j37<gYOS>)H]N
%-BU#\V(BHd*i7()GG#FA.+FXkp:+RGQ3`bAGZp5(frbUoKW]/'6nT\Y@1:5aqhp$\SrN6iMT#)\<.=pN[S*j#MPX'jVi;`?m4r`2
%_cOk\Dp[c(/Q_G%N+/=::4b4QS#`8VMaOnbAt!LG_3WW?bmC=9OBJ/V_mhiIhFg3reBd43>O"BB0_mn'!pK']ar0i;b$ejaG5C`L
%@=Dt_gM7Q`2R7sX1a$&Z>S'at[+T7)F1bq^m-p3bNpR[*M-UPNp1/]WFLSY_ap6r#)%;Gs;E1]9p>&FWcB<dt;N/&ZZ18CL6DCK;
%>+t!"K1Wj^5'5+)A1?PH$cMI)2(#:BHkWoPnTI'WgTqL+b`Z9^iFbRJ1RZI@Ea\$FoehON0EHl`]HBtE^jKsU8Y_M-c\kb)n3bQ6
%&D_0i$7,"N:B@[L]HEMVljCo;N)Xnr>`@_:Ck+0[m[(ZY!DcEZSK1@lY?>,-2?uLeM/BC<"dASW"`Yt+)@:BP=1Xh-%Hst%i2UgV
%2@2oEOZq>=6Ia&c5BUNgU.ARU%<O=fgTr';>"@[A1b9Hs4),bZDRn^WPd'<S]Y8DG,Z^]i2?RNZaUJ$_XqD*r%HTpLKA80&89mIh
%KQ8sUC9U.`%bZi5S8!5CX-)2/%Ip8bG:>?jYRQ)2O%,7k3-Tgn1k61lBBal<[3WRRRRLu/>3Tul>8$$<P7O.<(0F2>#Ia_DQ#VZ1
%M](>U*'l+AE>Z/4_g=Cr4b"`5r:`,tYS<7=,Coo,p>irEP.cMRd_X@nU<0KOCIO'd7LM!(VAS8ZN`\c,5js\srlhd.c@_;LcpnVt
%ML%,g>$MNtp2#C8nS(.7`&I5Xo!d,pd>9b[/_oKS'8kcXRi5=1jt*5<2bEr]C;Mghn6jiX8qB;Ehs?Bbi'p1bLr>N@j`f_VBRPM*
%<0$Qj,e%DRI$l#qbGTAo/6)lWGu^R>"HiRgTb38m6;Xr+8L";C0nfu'Us.,;)D2dd7/a3Wr0YP/-`?Wt;h[20G1)Wj!s=M47P@8P
%HT&g/!U"T_Ij-^uXZIAV<6(DD#Zl_W&SacL$GI*H_pursHfC#M@3Cg4g.$St-\)IOLsDWtj>N_`ca5mIU`6c^6hs!9U)<-t#',&K
%_O!l1WVnV5Vs*iqNB>nq]XBl]1$\k>d*<d4PdGUgar""ZJb4,)<#*/5/'ddor?9QC9Zo,D7Q&C3dQ?"C;1YuL9]9G+[qA'U\Z3\r
%p8;eglU>U9(dX5MLGOfk%5l%'aV+\uBpU+P!c@I!Z*ae-'Bim6=&*]X$)!.>Wl_7_`SUiUi#K$to$oF3:PSTNqQS8^p/>]Jr&$p2
%L]_"'fgU[,WBTOW&3qVabp\b90&,cZ4e,ZEO7IoWB;juQPFtTZ8Q2%#GCk7/mIoJ?NrupU)rXH.egE+IOtW\GL^g<CaiT9>YY.G"
%$Ht!I1\/=$esNa6TNT:OZ=8rQZ)JE]iCQENi8BtglkM'7OK>j5-+$qdjS!DCY>1#.QP0$kM2mB17A]5kmLSE-Vs#FZq1N5B0^4c6
%/)DT&RoH+,@g9'gM-IhLRob^"W8iI8<\%"-;q/+a6#;lG=n'%cgn"uF-*@kskFY?V!#"L'fJ:h;RaF`VLQONO[#)s5KEjrH'_&k,
%c^.6Z.OBt?Z*QIXi]u%EjL?RI7RQ:l9GT1:UY&>E#',&K_H5Llg6qO[3c[g[1KgE2b&5o:J[MMfmiheUQ6XfrRWc)n$6Gr\q9U+Y
%N51Z2]A,R.7bm9kR2\SGKh>M-!?'ss'8+]O5]4n;psS_?iq9i%:5Q>'h,\5XB%g>$YS?b=f%7:_W"93R<N$hf34u\H&H`V+@;QNZ
%O.a`>N\2DVlsP[1J'TiD_oc+HNo]nMLp,*_,tf?<DYt7&bH/i;K<-8ik=<P?lR2#Ne$@6Pm7F?$h1.2bij5RM=f[;XT"7(?dn4)c
%ehcl$U>Vio_8@5Y6Tbk=p2#,[1Vh%$k3sbNl&b/(=';SC9pV]+UJ-pSbTK90XMLp#[9G-_n4L4p8S_(JJKqACc<EuHhL$p:`7':V
%H,Hjei:N2rT,pLCHT&g/n<d6?iiMt[9=_B\/0tR<4LmKt2&N.N,/Ao\ZP*p-o*`?pfqo>h<$@(EfFN.IPjDED&hhJ1aos=)2#WQr
%&%ib"mF_JH$"6;gMpDr$TNS!';s`86\.BkYXiW2,QDB\M5m/a--^\8#)DHH:VsqQ5SO+a%kiW6Z8C<Cso:m6*!RT=j("m83A7ri-
%5Ead-+he's/\Cj8U&@"pP[f>%Eh*?FliTum3Jojn?nndVEmOBtOEMj/8(gCNHPmS3N@*EPAhr'FW$on0>MG/+`c6>`^mCrS*:f_a
%s-6F",AU?^2b5Yf'tj+knbUu%VG_1Bkd^AA-a*boE'8$VL!*G0+ZM->s+'+dP<`1BOc+Lri%]%S_rptPDU6>s8hZ]MFIt(7S[kD6
%J:Id4q,,oQi?.J*R*lC?UH9_];Rdd';5jth@3!dkK<O@]!4FMAQoj#ffApXsZ!X6HRkI6OHT&g/*+gpT+KTgQ[tHRrZJS9Pm>g4\
%&/[D5W5X@I0]3e;nnV4`R^bo0=#4p4>9Pa8%9*u)>OCiZR3[>H31A>C`ItB`EdK^_=)5,qc0[<l]KkO)75_%O!&&(D872jiV\0c7
%$CrBt/<1TE^K"/`-QqWNTFl9EL>kerJB\5mh,$1"*+lFSWu^($[GmQKHngZ9ZN7cC59SPQJ].Em"rum2*EAk_RjqgT9E+ksaahJQ
%dm]+E\#mMoKC,@3SHh[jDp=L.U$?bL_O[2Plso&CC`?BIdW[R/gQV0@RK8d:+%R/5adoAp+roDZEE'!c_bp_Cg'#CdK-TP]eN*s5
%2*k1a81tn(aG&$q]b3@c](;#qXq[c88RQUVdap5iL\c68aR.Xd?`C-o,67s&ZnT*Zmn0bDYC</U;:H;uMR-uIR"/5N<=q=siq)T6
%<6l,p"ms)B^NaSj8B%(O.`MC%+Lbu.HoVN!;#S15!;Nq%^+A+J89.@7";PkG4aoq)"L>E^q&r?B"Z]c&.Vaun'XfZa8HJ8-\0k1=
%?g+9nTa+"?kX<-%aR.(L?gXh.BV.q&`UrDtfNJMVI+(q\Ah#^n%+_^#CB,bRV.V`s%I'lZeK?0!g?.GRI"^'[GHGG4RM<sJdiM(,
%;fiEa"1^Q6iG5qiqshNulOi&C%8tS'\U[qL8:Vk[%TVm$_h;]/B14_L@jiiC8tYLYLcRBM&lI\Jg%r:AV!4S\\d\o\C!eS=%-7+u
%KJ3:UEGYhC`@&Jhbehjh*lC`omD#+sNsr^t8QhO;[L.DZ*gE5Q=f]]1PMCAe.b)t070PeC@58MZ:fE0H&i$)HUUWH+hWl05eitri
%#(hf-_Un;=iRH[`VO,H".7>SCjok*1%VWAR$B#U=c)i3gc;--rc<Y:7rL^)`dm$:gKe"uLLNt]o>SlG14W3/#1_CEVqU@*s_agG/
%=TuR`(;mPX`1]b-]5\Fn&ook_YDeH+<,b/E\f_h-<oLK''2$Xe47#dQc*B]fROc,-AtY!)23?S!&\dn$VY#F5\BEFU&a.U)$@t#m
%4;5mC$V+'Zbq0W6M+^!P/\)W;BPSK;L#>Z@#jcqg-,bn@2g(@bb1"pNXCbHXd!TlR01Ku/2T1rU==!fnjpKA`.VSGC,.jSH&\Pd!
%0]rHb6KjdE&^.'3b9_a(EZSf,k<Aq"mq_W\[E#0)K,D;\P8FI5]GeiXf`5CDeB;H?T?8\iVMLQ!?j&l17aDc"_!u3r9cuH=qSAl&
%i$((jC:k05hCS*B%s$?G!U@<3<L-d\=@Tn"/=tMq(4Nk:a6hO[?\-L+:-YnB?D_b:&7B8`QYXCXIJ!t*8i%H_JRG'd"Nje,-b.a8
%kG)%2W7X]48o_Mjb_Q:94&'9CB96sl:QVRB=!P7=)rbWe?N/G"hM@EnZH[>$2d.+L80H,TP)*"ae*S:ghpZ>,\<-BiqM(;2M;\d/
%QKd^_.Wo:To"gQKhQ1JIj[a:8LA8pH!@6](Fo@OOF:.1aS^Y+=0bRRL)+BdhQiOMW[_+r#$QuRb.g>J(+=f\P"=3%k'Tm/TpJdGU
%!m4;H$'[@5ih(H8`U2@J?C_j)DLTkiQO<Zn*[aB&8Xko1g4d3&KZ\M=//tVD.s<5HY,t5/^Pm^>g8_qMM9Zau?UY:H0ER-<jYt2o
%/r+Fn2SPOJYP\DVa'XB&Mt@WAQ/';W=dgN)RQ%'_(TCAoJC#,h<A730nc2lKP%/10)fc@';\tcNS9HOk<<m[KO[=\%>$PlF"1^Q6
%iMurR??XT>'Y4ne20]-):`jqR&L%ONO"X'j5XnTbWt-O"WD68ZLeHqlf)+/-Dh,RAC=<5j1aOY,/P3=98F`3KXUbNE4W30NW+##b
%;u%@::A3[Jjn)a=9X`1]P!eeX(8JuZ`Rnq*mhA"5!#K->Fri>l@+5QQ4>FE$KE;63KJL&NZ>/s6`c6>`^m?$.^fC?CG6/(=6gcE*
%:(\kYPS-)_@20n%'),Jgc:e[31$M.F--.-nigsT59M[SKfmm>YJ@Gr*NNAAo'rcge/5hG0`c6>`^t1\Al)-H-3!"LFW<.oP>'0=b
%=O,Ej19s6I@H*%)6tW<=2lH\I.VFf3E*7G0I3<Hf(KdY('aU4$8HKko;E[.&iq@250-fn#[<sGC*"t9P!K`WLKI,iFKi9?S)^_hU
%!hEVb*-&32<\%n9crbj6[AHt`WkMr+A&`"^.krdeGI9mSd*]KM>g"0@7WEc5]U-_;[9J)l<\nbR"#]PTpHjAd.JD\r+:%VOJF%+>
%k@n%]=3a(]Ms-0K!p^2q<`IaiH\Vh(YBi^G<+-g6gR2Vc<nDk5EPoO0amIam?W.bpcQsnhJB90el[lca-[.*J+CEFHd\WJ<TcbCO
%<"a,1@W*nKTm/9[APl[p74sEZ($^4L>kr(AW6L^kbM-[;jL`Hpgn"uF-"4^>Bg**[@Ibf<?L/S$[HaZlISuHlG*5?h[Nihg([1O9
%<oqlo4^#?,Zkct$PY$R.d(-!<DTSk#G1SLg8N+3Ss2SR'SrN3(2O`Tfr/AQQ0VQjALBJcnY!";E,5*d7!B;L,8uOPle7;DI=LH<%
%\jTU>*pA7\X=QpITh8%%@uY<mM!LCYbQXshB3PrFMh0ZTNUW3a'<p/;Ei)\X=61@\s2WoaA4^elaeE!r%9stHc$D)+nEp6C6rYc/
%1CS!^N$polRde0G/_&`mZk4$=qlZ,Rk8hbL!oGfnR\7kA>)aj:mX%_PO"Y,eU'o**QBK[FSq4elYYu9$7FmL:g_L)aSAng'[i54o
%P'&PMkre:.^2P[Z3qFa.Z`-*MaPZ7XcosoG@\+arI!JO87%G"u7*sUV"7rI<'_EHgf+sBr*od&!ZoBi`RfW:l:D+c<9&nd]YtbKe
%p3_W4rqM^Za%;4N64/'\g_kn&W=BO*rKnZ9Io9n_AB0\J$$h'$K+(l;r7US#*C2Hg7!3H#!cWg8\PXKk8lt?%57LaC$Qm"-l3h-f
%hn_=Ic6LUk[LY<45,5GE6ImGY.;Lu6PC81sjH7#,)D-E(AK[V8Tou-WSbSEi$"5o<o1j@!H3`0Xk/Y.UlX\q;]2`1bW`&[!qGu1^
%hWdPQKXK/NR/hbBMTRgld(r82(fat/)\Q&k6*(*+Z@WJ3+Cu4=8ZG--S&#N]=N9WW9Y.'(D[]br$Qi"W/\fj!9GE0.<J6C/M^Pi?
%]#^_$4)4eEePfN?)P)G^")l&RmFJ50HEhet#!lFmmIai1]0,Yfd6aepSK[<,i+"NaLCS5sL>n6INk(r@+rKM?YO7!uA5W4SlD`U#
%(MedmbIef@39;rb0^LuF0BridgWQEDg57K_Pg,t;c@YJ9$)p!Rf#be,Be6b@hBHE\Q:-l-!u6!A3C1VpQrk49Of96_et>T;,6ZCO
%)(RIGU,qQ*f_L67HFmceE('S"')2[?9Tl7\%^t;!.0$YbSP4EO'-MT!:7;4!&W=d%,6-"BR8n9YL`H[6@g5FKV'Hil::_o3iWMi3
%A7P<pVDimcX@_UU0[)@2DLem!s#ebZM(7eA)`uWe^1SLT^$4FZ!YOqK`<$ok^.L_j^1<AqJQtP?SrlSanqP+$&bM2bFPteBjLYNo
%J%cV)"skuqO,(lH!.fY>KUGB:#/2=u>/&^qm`g*K33_nc[:[%AV,8eLL'I%QLKUYaoLGSU)'p+%An;@Qd9rD8[8D/@;$-=$,,jrU
%EKtO?)AF'=dN"F'RQ4Zj4$2$8^o)]EU6kV$,!,UC(]Q%Vfb0j%-B^f^CBuPH"EhL_(^TQU.&'`3X$i'CaGGH+4\(9IdA>451Y?W"
%2G'.@D!&=\Oen*/eW=pZnB",P1&delqVUP4fQUg_2T%kl4[7?&DoSdna!4gQpiLE-B*Ecb`uI_E9\jcsGDDAInhNV9#='et:-C^'
%r:(2gGQ503A=Y9!/-UTgjP<.N:!5!rr7W3/#"7%lWm=!g8X^5F7AX!=g*;NZ(_nGA"6:0":bb4AN7S*Va=<cWr6<=KJ7k[6[Vd["
%-PN+1k<9FIT6hr0e_3+cT]FOVlqDQG0@-#YoF+?E[46V*'8/sY_'+^B.K]-`I'gnOO1LFYNQ2Lln<L<1(/o`*G76pTpVr/7ZL?1P
%C]0N5m11a#YSn1mScR3l+e0e@'=qPYPL-QJ^$hcLXbV$Dr^2VkEH^=^I9_1G4+K1dg[-_Ogl6fg<>)cL1^R63B?*%Npk\^Im?N@t
%2r"nM6u27qfGGVY%)?-!Ib;rIj*AJ4,r_K0n)(rGoHU;5gXuJ]!VF+)A'qbLUiui]+[r"Y<%Cio)W8o&FgCMAC(alG;^VhnkdWp^
%3l!P$q`$T<EMJs"ci1]X@knlH1c5qEJ^MU_1'9WK_INn&+GDIH@F/D^Y6S5ZUGCoNBGOkH`f,$omu`Le2=\_Z!6g#h:TV\Zr3m0J
%8*Ii].0H&BJcLPH5-(R&FVa%45n(-c1?d5kEl]A*T,;Y;&,KW_P9U:dJP`^RQdl7hA&gX_pU#bQGNCG$[:8BE7OY2NYGK2R%IB1M
%-8j;-#oJ+3e7CnHLGlgV@8;/,139rANc].P8[N1b='Gl9&TgGs6o?Ci=$,!T^rHf/NaCU7'o).66uc2[=<3;%YHcMOa7'WS&qe:Q
%ANOR2HF!a.2uWGX_n,bc82uGN&`Z-PR'SlQ!Qd9)`o>!sFYN9H%:Qu$nIdC91++3o7_`e]+!IpoR=?.AZ9lPu,:Rg?JNN9Kaj)7J
%b=&9<<[J>m.)2"9Lst>D9ABVk:.=IM8r#IimgN>H$Qi1.=i5TsE^0drp6?'1F0ClOMh?-,qRs_49`I6W,?UiLbJB'')3@Ccar%"h
%"K/?kg^p\>566<X]ak%d_X>5KOE=l3rgb4uADpImJ$rP;g&I2EG]Z>@T#AI!&asmgL-/1jM%)5^^<]>=GhrXM`TYe,a!F6_I=Y:E
%`qM][.T/4qk8`0;?9[eY=SKi6G5;h")!VJ\j`_1s/omNp)>NUk8HOsSJ*m5$'29Hhc0XtTA:SMU^lr:fd^#u\]5p&L;[OBb<E:0(
%?G8Q4#n?DjhH@-Z-9fXHhri*3'^"9aj8hIiIpF<8G(f$-)_cStC3c)I1+]$BA@>Gp9^Dn<&6i,A%Xmuk+baTUR?U*<b!nFO"+BF6
%fWr@BQh8:XFY`GpnnQgldp"9n@:Wj(3TKb0o(.P_VoT60QtT4F'EFi1C+aj"ZF:]_,4>02\2sNK`)FZbf\;maD)%++Hg__>)KG)6
%-0o+$Ds-Y?5ddtI-N3I'8U@_alu()NB=cPLTI"%)QdZ21S6d2k;+TXo@?fbBK;=^EA0>D;b*bQ;4KK]T+G:4pFiEq%Q&b45-0o+$
%j#$,/A%iU3JHg_ZKLMol2=S)Ico%l*O-;Kuq+QN+66jut#%]g:EXQ)KdkBMp8JOtLj\dpl/8R`5"X(@Urk1BLf#bY(K79GeJ$.B*
%5EbOXf>dNGAonVX3(]l!E.PUE5(AjO"D\nL:/8p3M%OWfr%j;/cSf5TQ\:h/a6HY#!2G0[E;n,59_eFa-0o+$_^r/U?=KK)$/oOH
%>FOSIB>;lm^VWRi%j]F<OARAG.YB3dbkpc49IC4Hf%Q"F)h9tFU,!9%MGXcg"'TS'aFL(P?Kdq+lX]#(QJBmPp\Y6f`B-*`7/ESr
%E.B$leMIqn9X_qHVME=F]NhDR7)gHZP=MH*>0s/JSnX`NjCPE=GmAS]7o_i_^hj0"JXkeqhAEOn(-_,k>5FklG5Mb9%qt<eNaHm"
%"XbceB72Q1#RK/T-b56AVsU'=#U5)mpH\!R+6a>PVr'lTh]R_4?=D43;6<:QerFl.n7d$=c*r2+;e)IIR"T=G:r`&1QG$#h0K:31
%D5/qjYcQN/C;;Ao>>W_K13n2f:k4U-?<@A]>/2J\qT+FW5_](3md+%'"/#/,!I4W'pnWT&p?'o+\\G0gG>Y9<`TpJpeBfMH=&u`6
%m9V^\!o9VsL,_"LG6BnMXPmKA?=>;j,cubf7kaTNp@kU*lX\m_kNDj?hTAMufI8*W?r'U7mR*X3_hsH\]TZJ0AU'<UT:WlLb71:r
%pIIep"u<i$BXq`:<"M!=Nf_aDs0^9h^U7RB%"&DjTbmaS?lMb>fj')NgH"&n!qr&Ac?'f]()G:k.Lom`MDDc9MOT8p9M')N[LtC;
%aJMZs=.608'RUTN,rD"/O'=]s_7mra$ukSA]KhmKA_&\k_H,>-!'5<#+A$t`UEcgb,69XHllY*3PMF+[[:O7m"/`4iRfTncM.eFR
%;cYG7N&i/$$s<f;J%296-gG2<3DAQG[H:3<?u&]CFFSf^M:/L=[O3B4q]t;1:,k8BkU"2G*L28FP=#lGP]#9-,]rAGF:u+M`f>2G
%mt]X/i)f&S#Qo$7A7%iG)[5LT,UK.^#hZI(09kXhk!)n!f4T>n(GXEmg9d\+VOosIao+9&XTCOUp=8$QYtbN&E$)skZ!A7;11@kP
%p]5BB8OTIh;hG8W20k8d-q5JQYE@\=8@JYNjIS5rT@J-BTU<3>*19d9nL+&qeCG'ums/Qd3Z7_1m0Gq\):?h]9h(B?+E6GK=?uJX
%W?J5sREja5-RK6Mpg1A>!$*`d9qf1BD'^_S<RC56'VUaF\]s(0HQ%eDU)QJNahjZe8,.YC)!Rpg)hj5SRa32#'hOl2rVT)3%l>^\
%ZpppMW\]X/Z.c_hT%iar&GfR!hJ")]Qie!2P_-r26r!)#=XOl4["%&#RBr#PAXF!iRqjU.oe6O'GQ=aD8(8eUi?Hh-K.]iR.bgrD
%DVC#U's-$8I)Q<U3=8V^4O'SR;g7lY5:p"c'7\[-rs:(se^K][f$R(A'/Z$L%AaR8cVm^ZM(slFAYr^$nf6?'*Z]A@gVq,J=n;!h
%87tpc4-0lr_*(^BcZb\VPDMLB#2m[V@aK*5*KU`"KEA6g&/bf6LYPYG&kJaD:^f^D:iXa]p43&?E^(^<)\eqYSQ/dh$m;`/bgldX
%UhfU\*U@+jJ'E\fd9?\T5q%DK?f\dT-hT5N<7t!Z%L7>.*=(&OBWqB]WLhf@O>D+522Q!^k$j!eFgWLKp10mIdcdC)4j8t66e9Ar
%+8+X.KusYqNsWPEWiB]?+iINo9[Gk+$oj:O_o^Q)c/.taT9a1R2LMgMMm!Z$$XS[7F(&Dl?]g(`r$&PsMn`B!%b<e;\jC\C1b_TC
%a]8[$OM6Frec9Bg/[QSOiWe&WCg&l^]W/m3Yd$DLKBf8QM^GS>rN$\i,'[P7fK^OiXk'/9I:pY_RJ73Z$87JL8+Hkic^K^=M%ZNt
%L'H4u;PNqu<E8o)GtWSea?RtGZ9;l_P])?LBc(.nRRj4`^)T4qnepBYP$hIJ4DA?Ji7=!4ZLE]jU6P?Q^A\V6K\WeXYgK^YX"t7g
%i?)nQn9>`W'oC'"<#OsFMNjpEm0+Mb:];d'&['1%61pr!T)5lR-ZP:(fs+9VrqAB"J2Cq?7KgNQ9,sZT:mD8s$e',!qNgFK\_'JU
%T-P@I]:YeZ)SKQ/X.!kBgERFd![,s<`=>m8Q5oRW)=(hjIu\WF2H8?cQTla[X&BC+SF4VWJ-MmO_2JhR;g"-/'nOZtTWB8O,Spk3
%M]TO`#4:FLL)a`?Wi1$WQepH$:'U^\-n!AXgISD:/ro>c?!73#AfuJO7T^kn_;\=kT>npP9eNq=.%W`iNmb*[T\dj'V[)Y0TOpDJ
%IG3l"*`al4)b\c(`#m:tW;5:c4>l59.3T.1jW'N^8T9DqO;SPj9NiBF9gG+M;hKu+'cZ0pL)O%:5n6BN!7\=$blIaHTa&[nG-$=E
%ru&f_U<]3`<N*gsN"_T_,(@Fi'!:A=fJTJ)2q4]n;$b3Vc5c3tU\SVa&%[.HcK)'o@Z'DHZ2`Q6s*'4!PD0#s`X-`uRhGsJmlGh8
%Ji2J\X\!:%`2j)WMr1#!1t)p%TQJVh7+E>q!['*s]=h_jj(E&p=F:n'Y]FU$3a)6-:H/BbbnMZ.o\IE_b3F04LUJ<.C7>\KKR_3h
%EO9l9j:1gX7!hL`QO*H'KZThk4AM^5R7J_$)h?@.jn?u_FY`Kb.4=n+o'XBHMTn_QF!Fm,O.7mH`h)Q?9p2r?hC2M/hdOo?5hEDR
%H*JT/']/qR3^iAp(EPSD',a2CF^rHQ)>G:^S=hgFDoZUd6@`Q`B6uLF8d6K9lWhH_*eP49@*ZUeKU*<r"/>&UPcW_dMoU1jEX8?8
%.sMl!)IjFLfN1/cahT!0SG7s$$/@$eHJmD4];pWG9h.)fM1T8o$Dm0OB2`tdRT[fHH22GO7MiWE_^6L!Y)n-2<'(pkU7o7TA/u*V
%c]Kf0GX?pHm`Tl!jNp<IQ'ahh-`eRa,BWABYptDH3nP0V6(2b=Wu/j_R[l\Y,:A/J%9(@m\A;05(gi8)#NPg0]8XRT=&ieMnPtJ\
%I3l,%X4;pZ2fpYIph9AT(c6:F*G=1UC+i&KPYS/fZ?N7_PbbAALNOe"hlRpbADiM,);A/oo+t)j"UZH']@Sf;:moGZ"F.o3.0SGE
%XrYfK)MdVHTW_+WpOiTN'*ej-HPMdo"g_\2,grW>g`*Oo(B/87kJ'7:_<=IgOM?74:7):7h4eMGr)o#qj0@gh=(+cj9&PhnB=#Le
%euujkUq//R15qs.`T(+A22L1dA9V\-3a)6M_h)r9K$a".Wi+XL&L'`fpjogq-m+#u=*+[0/*(:#N%)=t8O/Pjd9I3iprd`gAl5Qf
%>_K6*nSrKg3a)6q:iLGt`?8>VON,<.`*R-?Xj+oJ.,a@C`'4S#6g6cQU(<!:LBQ[GU!$BP#M.Q_]D$[1c*`9#EGNTUf_;"jJMRD0
%:b/9`jP#X@^ehgu3`aZDO)"Yj?luEpPOtq')l2(e>7:F3/@m,P625gCd!11-,:HM6oYlW/Dqbd)^rc*r9IQ(Zc(S2UT2Rp3jAh.D
%hce#SQiV$QV2]"HC[i6Yq4^^kf5-TB'lmUFm71'nDLV5!Ap$._[::6Dqp0i.d1;<jeU^a?oM>MS+&k*B,!4IF'`"'hO<MLZP.I)s
%0U+'EdCQfi')>n!1>TPrgN6FPNn*-91T4aI`fP>KnGaL*9m<JYX7d75UN>sVorm>OY!l<$gF_,#1RAK22M5Hj(lcB4i[#$R]]SFR
%^NprI*&s+Y`t9ccWag0F]m)K%XHSM@2=NQhRu9>&5sn>CW5&:`rBIlA0S]f`fXe?Bg1Z*b09"K.FgTIg%tsZ^@9VkR:a&fb!`ZOU
%%-WpNjZ@B3=XOm?!<9d/*gdEET0<7hPItdXcU/j.o"%GmJ.jFN%k8Dl'qg(X.plPXa<+2h![.SALV4pZC($+HKul8cXHS)4(%aGk
%if22089;7[boO*2Wou0C4r)"Z$7IBP#6oZe8=B732N#`BB6L+;0Ni>7(7UV`C#/b6)4^<=]cl]PiI;@;c!l2Q_\HpMdmG9\>jVFm
%DFad938)R87&<=])OLq+%G(V[QXBa=".RGVeqmk8plA9%P.q2Z3C8\mlrXMirbKjmi#j1l?s\*$*Y8@i#;hlro&<opBV##!JLja4
%&GJh$el<Y5G(ZFVM%k9b5"Jk!A1JPF?Ti#lQi,<qFY`JO#Cg?4C=96,-<Qm0T[0X/bYc5iR)CWD,B"&<dQ-9+\AuoGqI366iaRWA
%T^[hg0F,Kr9QQ-\bZG,AI^gTASt;l#*oN1Z,*2eTV-j&dm1V0c.En'')L4k`QEF+-*^J'*>qcDl<s+!V8B:uqF'7$2]GfL3m`bXY
%OEIkuB8^4X[j:er\cFb\pn]n]4V1IU4FF@84DY)+oW[eEKBbs+T?l_I'VE^P2.BrRYXT(PQ/#=98Ru/onJOjq\2Rrh/H"IQ"PR6m
%M8fGsX2LH[0L[p[%j8L$,FM7a]'dp0daHZV@nX<s:9]#GZQKsXMnfiQ1Gb2-Z)8aX`pi0:OEIku5?!Xd9*+`S5raHhg!gHr+2m'N
%]8S+A1t=Tk5XNAc^]Z&_'bOEE&3oZ3AY*^pdK^Y!:OF(?:R_7iYrqgm?`dE8li(tE#iITSKAHZLPjF/]57lLo+b\/LGI?]TOU=\@
%r+P"/[ai_:>C?kK6"#Ea'9L2QaM*"9lu=j.<U4Q3=XOUWF6*\=!O5,KQ4kgcJ,9K94lHW#Wi?4gZ5.jf:gT/_VCoA]F2']u)3]$L
%,5`.9IGulaLV'@Lmd+%'"96\_&t&eEc&XOc-eYTZSlIj0fL:+/$+<%bnV#Oj#q-@q%mTSRq'?%fN$)G(LLmNZ-9d0Tn#:#NhUo).
%#6&^=!W`PZ;_kogYJqs.?!S"ZC<9:DMXA5YeNPh%mcCAV[Z=DQn+,0.)97S7\Co&pd)pT)bhA*lFB2i1X!-e:i.%UJYn(C?,PKS&
%GftS`&A/+[Cl<dDD$asm$C6F)8t(R_Hj\"e'o3rs$Vpr-XYPag=6^[=j3TUEBEXDDJ)"86:+#u78eRL.Tg%ENOXS-0E<jh.;";`+
%hE8c?8IM]-,$59lQ%eGJL=*3A(^O@,A"\*I4SH9+$:2XI;Q\rk^G08i/H"aq"=eaAgND;%oshe;e"h!Z6'EuO7tW]J_HG9rA[m<a
%)@]b@#sKJ<`BFPST`n,cc6N6]$+/SmZ;)bGpW=*`Z;,G!^iu;3RZV\&!tfnlVlonhDA;mTcq3ZU5TjW-]qjYD\:C/!mV#/nqB0Mg
%as*fL]qA/#$G:SKXHSK*>+bSPY]u=#JA:a[o2G/l)&couF>RO`X2JpI"3@Z6Tda".pLmMB"^]XN+85OH"F*kSj_2d3#m.4UmhO96
%dR<nGa#_lIJ"N1M[9gf7^&pLGW-Zu%Ho:IbR6$5SS-/*J/L]m`Q3&cj3>]?'(%66pGJNWYI)+nABGI\CfXE\<Pig$"+mW[tIkNSg
%G*Qe-![8H"cas(k-j8LL#unH0ljV(j<_KLUf)s-;Xe?b8?<BE?8>KZI.2%6j9;mri_lH^MlIM,@1@]!5o@b7nN+PY3r2C/_./Z$[
%:S^;i2be"0`;p'@I=GcnVVrmrd'_R3_2?Fb]Z4Dh655((EWW/O*7HuBf#bl1=Q=[s8>&Z$(/dqIhZ!3ZL5f7b@dLqt_KHb:%:="6
%iZ-P)L0s_Dq*FC/B7RU)2\=l*`Z6!Ei:b`^FY`I$ep+og,d>%POTisQRRO<nXCr.^;aMGupe4VI7suaZDO9c:H7<$7f/2Il:lIY)
%>DY9(?'PjmA#)V<CWSW*pj\8rhJNBOFfh,9[6Vocm13#;1Fb"rr87g?O?_H7<!s#i%c99E=@r!+bTZkQop'JJL@0!#KD(JL53\"g
%Rh4trQE6:,5?ol=JSN.fJs`E473u3#aR+IYGn-eJ(pGpG<>WdkBE0CS&i`k%&XS'K[!O8-4?p)#-OjE6aE=/Z/i(.h6_nPOqQH3d
%PDT=-:00FKT,kZ+P5dgK\HQmbc:tus9M8TJ-#($EV[DDfe%7t?nWeigP%JG%G(iJ3`t!84#]5UlN?.=mhh0OcO/qeC-f4TE>s\H>
%2/DnQK^.r`i//742$9Su<l>CM-"1s(i&7Zd7:)bkQ/XK4^&UH,//ml6-qV3Q:2I5),8*R1,&Rim-OYDcMj1p1ma<W(PrP!&41,)q
%_i$)e4JfnIp5"?*$jClF0Fu6lp$"jI?.?#l8\''rEIoXoJ/W6Enk24NVg")r/4SI!L9-#Y:N"du.VJdIbXr^cUG-XO'"%=@1;L1N
%3_qGrP8.RsfDGWgA*,%?+<8lt7,[RG829&"<Y5CbGH;"2:a3\P!tST,F8`U-A"Dt5fNr(MG8$pm8/'k`Yc(6nf0ula9AX/c6F'YT
%dA(3>!bnI_E':K6rR`gk,1l4FCt*]h.GN<k6jG<'g&0+pZt#X8I+ho]pJ$.m8cAh+m%-tOb7f3gS=bs+&dT:UB(h)qA7?QRke`AX
%o&ra]<?jt#1alQJgX-iu$U,He?'*#H65.pT&#:j]-GC>%mOW]eIrc^,mB&Zc"IR]-&2?+\>\>!4B=aWuKhPHF2lkCLDGi%*P;*D$
%N^hZ)0*sBZhLmb#CjFXmXSr]V]Wi(7erFl.nFpR"Ju!a0InkftT@pHD8?VE6f@SA5^S`/4e4&8)d+L:HAH3R46j@Il/rkQ'q9gr>
%,H)]'D<bP?WJ.a2:I3jZ>:\:H]Vd?k\,@i-Z@AuX%.<L4^]u-hT^;E^O!b#d,NoH/)mOT8lC!D,5_=9DJ4k5)0>S_!ZNj*>C7>Di
%+R97tn^(J4OB\REF_AcV)#1Ic-CBMD=KiNkGqoU23Bes=Mdq/BG)E5Zocg]@6fsT-fUGggJh@m+?4]r1EQo]]VhH&*:GKbk8^B:L
%N)aZn\@6">9RJnFctr=:f>&E!1FPQ5$%hY?pLupA57)@5(u/Yg&M_"T!kQA;USZ\OJ1p2^Sd-%($85OI<&kgKMLTBnkha?X./@>n
%3Z.Xr1&!-1=8`N0kPeHn9%[kR$YMLKorVH&'c5!1b)dqt*Pj!bOT?%X!J,d.+44B?mb<L=.+(X%e=[AM\T5lq*U@7oU[K()HmO"5
%n(#qZV&'2tGCrYXV.Uu-.t6Pik""D6<Du^5/,"W+r0_N2'AEMbX!KusnNiKq-![2V'%7D"G:?]s5^=%!H>CV`RJ:m6LODG$2ckgB
%PsF2^ojYRSKch6HbSd?(d]+_UjKSEQ\5oB07K9+"$f:d]YZ1Lm&50.?3Rs(^14K54[q)%'I%&'[IG)*X<201B)R0f63)akI,c*>7
%G\3dh^j;^=_H%_s#A<Osgj6]gVbf1tSHp@AHJ7$hBj;8[q:Xu,s0Q7+b^4H>;YqfD?CD"/,Z8[.Y*]D!g>qrM0Q*&nJ8R[)\q!nP
%MU8$<c(XnHVU+m68$$E(.Zcc_rcg6<ON,XMYPr:Y3god,6pO?:Q0(.&\Oik0:kfCF=sA2!`;Dp%]@;_RB<,5Gp\rB'_bt;%fs;JE
%@db?+C[1+5AEO.'AAuUt\4CJ]eIqmj`]BL]Ggl%CnW#.B8;:VG^2.eT)A"ho69*`b&*ba^ds5Q?hI[C\(k,GM$eg\VG7%WKGtXdD
%#_tIi_"4H%g8PtI5&SVI#P3DZG46`3hHiIds1la0!k^=^!3t["&klcD<j<.o!3SM!i'p#&EDVJ"$r]#7DmpgZeU\jY4r5Zqi8pN[
%C/&/8HDXV&a_1.9L9-Sm^Rn#<+REh<itHlK,+qF4G&\ZaDUaL>K72BQGu48Y,WZ.NY?3W6hPW3o7,TB_EtkqL\tVG[<uf$4frE01
%rMpZ[1R[BDm8t_<T-du2^T[Z]H4-8Hn++c5P8ZS/1E5RqLW(j1g?3g)cXKWj[q,%WmSTcre67mR#E<B>hd3pX>5Nq;DQ,ckZ.rc;
%1Kh9U`fbI"nTe'1*K.YIo1F0?q9c.Q\`4`UTNdI?,jGZ#`TTu3)9$dhR+mR%.*]@.i[#Z^d$J5/8l5:=3mtrRbpa[5"Q"#)=U,&$
%k+Eh7p/V_W#eZ.jJIR5\?2Wo"_c/5q,q/FKOk[P&k%asA41TVk&L]X1(I*3mr6;iAMTo3LDqhZsKmC0aA=Y9!g64PjfY7U-"XS@b
%T,]n;>[6+DY7]lZ;]k>blAeRd2USD114W:]<Z&iRc?N*!mu+ZQM8K@Do:i@dco`9ipQhnEM3"-B[.-bP_%0N7o;0^JDWOaoZpKj`
%9o)mU<d`ecpCodt%!WA7?fZ8K2#nqgUB"K'NaF98A:I+j5!%rQhAW[p(-X=SI9+VdSa+LDDt]6/Jab(Bf\3)<@Bh2UJeHr`r=ooA
%_.'ZH,[7X65cd15V;@XA]bl%8+k],lnlHCH$L1\+eu`@V@GY<$q1[\8Ip[&Q][O.i't$$3"&ddR"`JEu\LJ+r5k*aSQV!kX<q::8
%;=o^!/"$lpMg;Y]9bL8l"gZe<`8.!Ia1WebAE$N1ZQ61=!e:2Fe0K9*25fJMp#9%Jm&KbCBdpi=HKPRjJ6eqMa:Tl:jA,Qae/[rj
%05*5iXYBI$icL7!\H.=;n_RBR:*r.oK\MEbmmN3>;N3#A!06sBg)Y`-(p++S3GU!3UJtksq\h(EK@"be<f!W"pB_N@6C,e`B^Tuu
%Js,LI.)=s7EGrr[RJ=\M`?4S8p@]K$3L`=(fj-T`<K-q`7*T48qm+]!K(L/=[+R&&.Kk_p>o*UJW?i?W(cOSnjF!b0QJ(r0?g+O6
%lX\rb(Wk<H1bF[B-h+bsm_EVf/:3)(O?-;A@C1KpV'9BsJ/htj0)HJ=k*7r3V?'3J*2;s3W!4]odI77`no8Hd3Z.Y0<O*_!OUs]W
%$j]rj6H[(A")e]f/BUnc!@iQIO8LKa'b",=l6-.JRQu6S6M/s*CuBb^o'QV(8g*-_erFl.n>FH@5HuB6SQSugmgop.J<qc^f7QYo
%J/d.l(0IP]X8rsiX4Oh-CtC3>6ZeTkVhJbO*%%;t6sTDU*U@+js)kH&WYNDWD>'SDi(2Iq+T%nIM9I2KJo%9_d7$.%8ua$Kpa#5V
%.ZI)FLR?QSlQRehKU92EJdI;In%#]6SP8rikO&..']3EAs+7=m^VY/G4t[I?'mmHL9$SJFK+$hZf$J6Ys&OdD%>K9W<Wi!pkLt#d
%!+opn&TkGH^:5n.SLf/Y`P&J3gH,f;9HamGHEt__0m?,eA<*I5)etK<`/P^j1'sC=N"3*IiRp3(&I/'J]qbPnWE>c=pgI8?O)mC4
%;[p5qQE6:,^R`DHPt(Bn1>rVfJ`jVN8O/2KOfAq$,;iJDA>WM0LoOX7oqk;K$_uWKE5-sm#$`Yr@e-?4"YoPo)D.m&q:,>[OEE8H
%O_NkkQ&qW"l\smXjjHEC;fV)JC7[n$GHjJ=`!@[I@;'D\fqp4=##IA@pkk&\g)22[PRnP@7X2(pm)>"3ke'<JLEsi\B?<3&ps?"E
%O5?#Ugb0#E""P?nF#,iP*n;BhNoM>91U#qCG%b[E!EUp`"l,R+Cr,>L?bL$ZnZ:m-Z"o=e@#sGhrCthbD_5*>';'GYh`Kbe*ZW-O
%6j"Ekm$QCF`*$>Ur4X`81lP9Ca#At^o$CdKj/.Y+ke9#]4uX$L;!m@%)952E.nbJ[;F528]/=,i/:<o*Z%(XIC6e_"C<`I3';X2q
%'%k=oVA>=.,e!/t80811qm`ad$a&X&#'T.'Wb-123'Epg"Q/6,J(*lef^;>ik+*gaAE)(0HqjM$4'L8?(i=_CL]jXNMZe#//.LNi
%9J'R7*g7)F"HJ>AK<A\(EKG#Drl'Gu-@m4&BQeRXF[D_@KYYdfn^W_DZLDT%p+-._f^pCM0n?L#^MqJk"7QD0:34AKJO$ge%19%D
%k,Yj(d>U^W(o*qi?e/#u3Ydd!NA9.-X.lYQR7pr[j5,rA1@am"S$Th1<1K3<[U>2Y]iHA(Y3;Kh+F3]C6q`1a]d>'M6dGN0)QlQW
%G"ZY5FBs$nJcn6.WZdpX7O8YoE(SZTc2?+TFY`K$3J%e*cdg61Mq>pc)8X2LU3Hs([bD&a+iPjC%cn]&D$('\MqB$ri\LJ[oW+=T
%r$5Shbq4VrULYoAbMMoLY?%`WF\b/$41=p*#NL=/2JD`RG!MiXrE]TL;:dPI;@qks&gasRa3RSc/OjNAF.\Q^EcOHnY`EoiNk,3L
%'?($JhX$e^[t^uJKoc4ZD1A](V-e1@qb[?Cs#"Og![$Gok;'"t#NI^5Pn%<k"SZMsd@P468l$VMkn;PUbSt/@8XMQ+d32K;,qng"
%6e9Ar-f2#Zl3e;aGKlW]q+A9L.tj%uR1j*@`Vc!3PWsL/S8CZIU@ZPHLsbr7c&%"U_"87BV7p3DGDr'ZkoImf6UK4olc!5u==43C
%iYZ&<ho_=BE(#YhW:>i/Ud5SURGuYNO];Q#2;$,&G7r^^,2S:"^iRC]>ZNHn+-@ob8-uK`XD[N9Cc@C6!9O3k0k26JHTGX5T'/D1
%6M:#Z(p=C-oD`b/?n_Fqa890T1mA[unraU78\@.mXqC%I2)st:51oJG3QOI^-M:k,kE<VoUUJ"@-0o+$;m5g5ql"p5H')`9Lj!%C
%huOf]YbE2aifM4hZ5:hnLMbZY.qo1t:7LL^pKb@li5fC;pPtunF8j;@5#A'SfW?1[ADkogeQR9Q6MLBEXGQT>fk)N2enq8&C3X["
%[RO;MK^UW>F/N\Ug7F_4JcsA0>H]WUC\^5N8,EkM$V_i"I[Jj0ca/*,^#Q.:lX\sa5P;_p^4doMcPqaX,[3S+Xbk5L&G?EElt#d#
%XIVY$,Z(C=c!_/*'o`j=U=L;Y_A;FPK.*B_A#aXA/!@qrPJnZTi>Y/8ahjr#I\cd3^%Ec<&kF/Xkd[BInX*PO)";&sOm%]q=!=K@
%1p\"^?=uX%;BR61a9V.aI$J;?j.g)rO</5\fE5#$d0BNjm2s9-HUHB+_P_,'cKBFbb;n(s44Q[]<s>7[rq6lrcOaq&`+!3>HNm@g
%^-nFpJ^%&4(QTnUSs7a;%>uZqDoh8gOsARY`jda5Sa:\K-7S25i:sb6)CN-:DM2<Z3n0sII/PDdTt1?:B7;K^SO@#0#\oV/;m+X2
%"+lpKW\p!`7Dj[)2RC2r>#mg^bSCR"2jUP/M,3`KDn]9kJ\Jn-7MT4<^*kK!2N?KSqGDgN);:#OaV:AN]nj0P7e9grg-t70(OL=h
%\AJ&ZM(@R#9mBZIH`Wf`A&gVJpuI!ZI4E"I>eN9LBM)>6`p-Qn_$@<8bL"K[9?=Q8DqZ8Y&naLBY,d^-e$!<hb*Pct+c<1eG6;N'
%c2EF%LacE_=L([K4tJ")rok/9'\f?<FpZNR)'8<<iY`T!#/mi7io4t$L]n@Fg+7oNFcOlEM:iPGCK,XNOVeV#2?t[1hI6BChN2lc
%nG13G0DJIiSj3[T`/&)\"E3;WrdcOI4T>Hd:f&s9Z[6j@'ZD[6d>!Zq!&;-&(Er#n[<%kP5j3YFG_on,N6Lf=^%n]LlX\rFXRn_)
%Q2I%P%g"k^/UH!aK0;W/P0FK8PN:^"?kD=M>/4M+#uj/:1>L7(a5nR^R'<Ss0>&Ojk&FZa^B"Du4G[nb=XOTLoAfMi8La[0D>TR'
%q'uQII$t.:GfAMRTQ$t@Fb3X6l+?[<Pl9)W6DZO,YDsIOnTP<)$D^2Kh\PQ]U7VH\)lEd<-]"[>JUOq9*UJ,6Bm3Mo^:1dPE,EgY
%_#4Z)6+_`YY-$O]0&R':Mm#MKJ1([)Z_KE`PqW5X+O$??@lST`_qg9+1@7WlZ=>.Vmum'5G@mq?I8<GCI4DstQlDkJ",l-)",u,]
%<sEZJYG!F+!UR?pYK\pne5Q_]b-nnf/[LFf4sM(^aOjW@%-h&2cX7oVVTHM+A=Y9!]Z"*$Krak'\')%^P[k`co@(Z-L4FfQ$;;/N
%2XJ5$WBDKWaO4\;W+6G/k^J67-_c5spi*mY.'\gt3Q)CLO?,=O^`,Ylahjr#*Xl`N:$:nJE$$dU,,p7?q6tk#`:sqs?Vc^@7.j&3
%pn;t$#7.)>n%h*>]N?T0m*iS,2c'q8n^^""1i0P?*PF7>SLf.Lil?:tlh(Jgmbeo4f'La%QQdOel:/&Kg,+X_1`=sVVc_Hl$XZak
%/WB+ebW?$n]eT8:&%YAX(_+Wk#gt#EQEPJ5K7-P;(rT9)pn:Z#;ue!Fg-\$r!n*ed_4-7:6[&T7Mji'@S]'<b)o[B/N2%Tt)"4<!
%`)]IC4^GW-kT5Y:T>DYBUOQpu3goc1fULX-qc6o\$?)qHj*(QeZ\q93CsCFYP&A^oI6Z2.D%'>(;^]+*1!XE;)$e2$o>uCS?M(B-
%g$6q&9iroI`f2#)ADgCr$])u1\(A@j>-JAHoY%CBM>M#>JIDh:[+uHg%O6`bM[jdrJ.h5,g4%^s/0d'9Gm^)I%2gQkM2C'WaeUPS
%)`-']]Vfg7U"//)S^AH?L0"D&YNeb^&m@"mH!P5Yl'%j,?EMUGhsOu<fk<'=g:fSb-fkCt\>/aFRKl@3j$7&IjFR(O*:hC<FY`K$
%-0>g=*;k;i\&jY7g,L7khC^Na+G#e5`o.PH?I0B0JCs'2\Gn7+#/d$`1\js:PYRO=]^;RT(6p3"BuuJt4Fk/PA=ZDA.[GYtqjdnI
%7%n&nd.!l;9a*)LU-%6B5!2to?-m^/%<\'%J'r)Ra:i9C,4AjOik2H+*093=cDT1E\tA+YI'SIhcAm%OmqE+RWZnY=Q&sMC9A2Cb
%?Q2Z7n?ab#Y<VZ(/D\bYJ[Bj</G&&gR%B*7D-p;(5-i(3kr5VRMb$b1;(5Z'=L([K5,G#XHO2(s%58Y4*;VZ?.SXu5K#uBEc4@uN
%7,S7P9d8oG!Na<U$r%:1aeI`&-l&'VM[(/rTpMG%,saa&ZmD:AC]n?/`184?AE))1<TO)7.=ctYZ@d7lbiV>!;MQ/a4HLgk*Y^"]
%Kuq6dPi`s3Y>Y/>\jt*3B$/mXLPh=i+H:X=XFg=XrMmSXB?<3&puKc=1OSY6M4d4^:FP-gHJ99s.c^RLs.NW&<3TPIW(7P7()oJn
%Gi</e-/Sp^%'t[k6+uoVTm&0IQ\pP$L>LRf%e`'I2d-WnE5I)(8g#La:Xmp2#Web9<4`CsETPdT:Th;-#tQVq-%OjNTbO2sEUc*k
%pS%^`-4!T)#*9hK%`!p(KK*=t=SK6e"Tl*EdYRl9GXg2JZ];-S;j?MaD!6p;bIrL/Z)_:5D<.#O)2t\N6JE!S-#heFbR9;1R.8bp
%M;4o`!LQ,JFot6S0&.>M:)6#F_?<'%2[][9:Qnq?M:j`h/&>.f/l4G]ko\C[S+"S7/:!I7^aB!\T']i56jm-I6JV_%?&0u'*jH"$
%g!J\-?!e%D-OV"pPrmKB,rS7jYQdl9679P`=+K_[b,SL/"jWcFPBVcDqC'$pGb.r2C+)\]nlYD3b#"[c>4[^A+g3:pY!Cf&8`JMB
%Z;)0!,oTE/01Z(l,LKW`XdCO(P?hOegAu&H-iFNqYj<3=ite1(6p"XM<0,j)WNm"h(S7Q/hj@CrRh82Uc'MD<Oms`ro<[_*A&^Qs
%pRItKIngs_1JKq2!uV/udI5Vm"/[>d6ND:n-"Mc.="'*DD*jJk2b-7L7)#R<To-Zu=oFeFVYD1QRq65[8CChZ0k?h+I+j93]HSVJ
%a%ZVhloao%'=d2CY^gW1WXl,O5jhM)6Th@F"PU4u'Mo<PU9Rf%W5q@\!fgic0F&e\+Eln#r"7Bq,=FpE)Z=Em3goaKZpDh2S[?:r
%_'#a?m=,@Lb$ia)s+66nqZHUdUcTM!9:B?P=qJ5^M.hl^p0a<-^HU=4PJ+L]C!@G^J\MDFXh_MjDoFc*pR#@CdIB</9&]jKL?-p4
%=l<P+qOl5)WFb,0IuWe+SQ;hn:7`H0.@-K?m*`KjD0+$Eg'9EJ[_Mn]`jGJ0b0&UFYtjFEU']Q^gf2((K,':9_]=bM)pY]]@@HUS
%H3kcthWINRU"Zd;be"TY'-?-R.'HFCT)o5VBtMY-FplhGZgDC_=5Vc;:'Nna,@nj/PJ/A:;4%1e1^D_c:+>'&KUhgsa?M-IEho^+
%+.o2Y0Z]]t8+F2I@mMI<(bQ;oi]=So8a\Xed"!l2L9cunbDdP.ADlMH[h"ijDl;5,3.MMX5P78d<]0tii%Z(;nq2H,'Ftl<Yps`N
%""e@8K\W=n0G"mQ"?W`Xa$V+^o`3r7,GREC<ZB>OFPV1^h&*Fm(-_FamYCeSZ"SX=m!W@@%=ae!m4In\JeBO&*'gV)[=(]-ibu5=
%k'$id+?iWm76dBC>ES82*(.qSa8mec0u,@sZECgCG-$mYO%0<ko&"c;@`qDW)d>M:jRW;CTKP[b"N8/^obHA@6o9==a9+JV(^66V
%oc`klr\'lF+<tp5QWJA!J?'"LS`4Me.;<Z/=XOS!d>p$\H&p[g6lNilW`u.&o_",76WXL7Ng*-`Bs0rbN(aW>?Z(WRRr1no\u5h%
%TSD>Y^jRth$I'K[=1mcYkqWm9#%f`PK!0p1PD.>5^\4cB7YFi?KP,hR7WTgX5M.bSD0)"T%O5-f$*1pV.f)cqge:D[j!D[VrqHL3
%R^m.%jq,fL-':3t+6amAG-$mYc[Cit^=A(1-me./@1*54+VFGQ]%>T0PoWVa=/`Oll%jO^r\"9/VPQ`'_lL$M0Yt]`4b1?4bnM2l
%(iM$W9r%>3^=oh%p-$tDdgPFDi+Li/'po$;V&HY',u/!!PCC4dqH$"?-p97ReEGQ!OGN;u;6C=TJqoHMpdH94W8S;++)L0#h^egG
%_b$fN,MZJ.:*r0u:@;NQ40lV@&H/>]"kPLL?ZUeFH6a;?IuoggSN`R8$D'LnG+JUbTM[W$>Q*[%QrE<$P@(WL!>ARajo&P@*CaBf
%=XOk)_5&<g=^r/"Q`<ak;3(27bK--La%(]&XEtY@\!f#/NMD.YW5m%8O<GmI(.E/)@"fh's.*p;bdg';iXi.^bbngm=9nGhcDWG?
%T._dthM_s)A<()4`ad*'OT]c[(F/oi4taC^KIFK4,AneFJdkIN`pRhOejJmkqsr5u.SpY%]V<Oc5OJt`-OV##6K/LP?C:qP_!)hh
%()$6^rq6k+[>iPApM6##r@^M5pRkA2Bi)%P"Re?--Y:7%Tdu.Y\dtVLpuY[9OV$Pi$Is#&=XOTL%N4a]^9SA4<@iCc,J5q#qE5>Q
%+'*su,"Ci+D@\'tJf`3Z,L+OU`*K:QB)@4'=Cl0\"1SNZ,:W=)kE40uEj7.&9K4h8m8sVj*YEUq]F\qX&C=Q(h[Fqa+AgH"TX-8T
%Ud:W?nSS=c\DZGlVXT]&UB?q1Bof.UaE#de"/TdX=3_tLZ[E/S(8aeYZM,I8L9-Sm:Tdr?Zb:=TI_Q<tZ8Ch\isesn8f`lKUM(h0
%ibbF"`b#hA)e-'U`O=&)QouDIJU8UQP$bn*:mp"ra*3L+JS>c>k+*OYADe[pJ':tV^OIo:1e7W!c*iq-1M-`W*gN3e%NsVh_jRa`
%,lYd$l<^T7M2+OmH!WQ<T_oS/+$a$G5DinVUnh5HHbZ#S:A-ij'"u&qa8Q/K0J`N'D,MiS::1)DQ_K*O!CWmG=@]S,Fk&G?B5mNo
%^>5;nUhTFsSf3/IX]OXAW,W?$e*9?<:"KOR]!Gq<9RK6Vef8"HrW!A`-m_[(Ua.TK!boCIe^*T]-kSb,B-@F^IlPrn;54@>H?YLF
%;Cb7qJ-*@:KY<87%24A73?^h8Auq2E:Fg/ZU]0H4&@\4%*L3jH_%:m(X@7,d.nn]*W5a^HF--8si.Q&qJ.<6WP6X)sOKM&KT0e^K
%'_R.]#r+TedTM'4a#Y+5a@>b.$K-D5&<8WZ)aE?$P<5Z6U[9=-C)\1-!(Ck+!eAGQ,1(0qr.d6:@Wj5DJDnXamKOCH:+4)ZX</D(
%6.pR:^KRp<-9bI:8,`&HnIo^D-n#KEVF_d*J,9?c8I,fo??qArZAET7,?rVBAmI\Sl"<]#k]j1sZ'j>gZWdC5>ICNi#R;"%h:]%C
%p,suQTU+KikE2ILhE3Sia\lV#fe_5[j(cA#CD)b,Xu^lk,Z:H@0A..KF"d)n$:`usp>S*/.VUMoG4QhAAPIHh>>*Ph`2>#,ht6`8
%1nJ*%f^gS**:?\:aBt$QeCdd*(8[]7hNh'74-@BX&0k3ih;d2TW%J(E!kAI,FrgK3866O+fYlR9GN,6\XHSLeXk30j;4`p[a;1'B
%SdEI'P)-'R`3IZ/q;^N*A0,>6efm_dP,MhQYPiF^Gp\=P.MIa:Whdo7ps;=7s0G^BaW!n(ai$\'H/Fh[g?Dqfa_!3,,IDF$a)UL$
%@P$9T.aKWDdX@(4//;AII;b7kEs@pT1k/$)OCt:"fet?]=n]c3T8'G2Koc&8<*s>prqAN?5\*Xo'$-Hb?`@5Q4cjd1p$67=E<IMf
%F^^sHMc9@Xc0dIZoSUPY2A_LS&`F2h-[,P=#+I8hXFkq^-+.U+)tcl<=F-10r",g2h=b;CfI'<I8"pn:(Vj8_@$&.44)M`B>3ubE
%_Jlud6+s"9l+=0sjIPkdW[F%"10T@7L9-SmcT'JBB"dkPm+W\#;$\)9YHJFS[&#9eK$&S.Vi&d,)6>5&TlIk8HEbLl-im4WpsfZD
%&`KbeTU3ZrZQ?C"J"!+>qJ+)4=noKD9Be)LAl.L22/0`O(!B:\'<Td7dfVHt([dgSJD^r"-Nbo5EGg9?R9Mbne_1*LPqIOn3JQrt
%kG!V<[Vt5Sg_mCm(-_T\qe(@JpHh9IdG-$mJE],>-9NU_@4/:.gdTuF-e5=g9B<Lr7T[c`m['Sqq:PdQ8p3V=,iq)eAe\AmF1[W$
%V`RQ&ai#RqC:hUPX]lAEY?@S.!5=/,M<IFq1db*ZrC'6f"B!i#/h_%fDQS@"29'F@:_hTNJ:Q\I[cn"N/@iJ"Oak<q7I,$/0k?h+
%I*?9s(uBNk,ZYCI1]Ob&f=8X%2$e)'\dJZg>_XtZBe`4s4b<41CR!Ymh-6kaG:tY2WfEH0MDe*(S"tN\P4chXFY`Kd+`#ss0BcZu
%p>SCs/A(YpIOa[V"$Y.sj-)&\_WF>f65CB2'/t`;%*A:+XtPGJ9+iSSP#t<EfIJGoTnhK\^sR@LXHS32HZ];WYK.B,IrT<EgG#]@
%TE3n>$GG_6!%3;iGquX7FK3DV:f(6.,eUPC.?.6.%aY3t.J[i0l[K4]3:R&;<NWPG44_6^Vu8W"YkGpJrkL5nVbE1sVAJgR'TUO1
%q(<Y(WVcZ'U\e`V"cVh_=X!8P?V+16cY-<mX<C($Gju7PYPVMKiLM"TADe\E2:OjG6`YLI9+,#:Aga1k8Ab`(4kQ$$eRV/&!PcA&
%OG6eFEn@'KOJ@7;#3>;W;U(ps#$+I1H\cgPIb\/5:*r0L6:D^/41Z'_63QDaO@/6'?A/Mb/]nhCMW]Ge'ht-A4Q;hSd`bJ7k#p3]
%gsq!!:GHA^G^RH<KAJP^39Stm/*"p:FgCMIQsBVqkkb:7++D;hGAl_\gk.YP_3"1Q1V*`XioS<*.Ts`W`9LKaNqDOX5"/mS0s7(t
%R5saQf5>6P=$,!T^rPfc?@?a/,-=\NONTjR#Nspu):T!\=$O3lj<!7LQA."P5Zg%SBY`hdm0,Z(75t==Z>&V+AIkX6-2XYN$`G:]
%Vf"(h-PN,(!Vh-t*:s2VCJm=((f2/^Vo*l,8jj,eR.".g%OEem(Y0`@+;tL`rlK\oY3*[j%=<5t5RB+0mJK>h*`$9l,>k?/gT;df
%AE'AZ&RMK\IX`+#e#N_k5VZSc7N!1]C(Y#F8nCGoLlr`cQ*j4==?XTu9NV*r5><_6"-i7KQcspMYkqji:/SUY)7!!Q5+QYh`'5W6
%_4SMK-gV1dV6Ju:$2B-U.5#!J'T;!qNI?%gXY<r(W.ef"/[Tq\c_Z9p7ctXtM<^Tt$rF==.VSgUVWOp&lX\u'JJM*Bs3<?[Q7qo_
%mHq[E)3gI^k9?UlQUgd8a,[$NC9I+X#Gb=N)Tk<0X;'OlTCBg`!*qCuj<9jG#Y0HgDA<@e;Z9V8elP5iahgQrNnEARKlnQ!Q*#S(
%3ZL=Jjr(05pFWd3&Cm_e"a0GsLF[(u?OC@->toSV!F@]dCT</G09H5B4!rHBEb!-Nf_;bYlKiFXoMYb/FT)IjL-tnR`sY2FNbYBL
%]n-NXJS*<._/l-0)Fa<#3$bL%U@#GIe*Uc7dFVfA_1B'uH)*M`f#b]t\qTV\rTXnE`/%u%e^;_dYi5PS0mdDg\ub+#+[X985JrHu
%UI<p9o"5NOba(H7_f3HCn_nms3YV"GTL^+_B%!0`)R<*R4sFf9IO-cL!QkE=(W+H`I2AECU'q%g0dR(_QS*PKG.8?lnTIfcF0ml1
%\'WOG:4E<]UF<Y\rE4+^j)5^4H=/VM&O5[m=XOS!U[qgX[k<ROa\&`u!F,k9qCYTLmj^-qB;:FmOi;,s)t\)Gpe$-s<_qMsN_9uj
%X%i`0G^1Xh&bR!10Lpc&'V)0B44_Nh7gabag04^_d5B@+*COTVKRGb8o`Aku1@SnF`1R/:&D=<DY_!p#YJgmc0m`jaR!=Kgnfl^0
%-)?5m@.gmNcEVfQ)mW3S5.5FVrI<^F6mcI+X>q!Bp2jYkLZ)`HfdGbhPr'=leWN/RPLS?m0jcZG>qU^8#d;4ur8]V5"Rn4sR\E$l
%Y2ie[f#bj#eu./,:u_8$m[Fh0O?4Te"MX*#0<Rgj&pe4q;)\[DRqcD&+)]0bQ:&_]QGbqDB>(("5&]NOZp,5_Y]nnH'.8pUpr8>:
%1@WE98,;Jqh1b>,\C1FO%BeI%&,6\0#6WaVCAP-,6>&S$UXe'N5sA7n>N-q4*D2b%jQU1*g\:\^l;Re0$F@I1p]_qnmgN>H$_P(@
%1ciD#)%#NoP-bN&6D1l/BKC8]S7t@SI%nugQm]-X-i4[8J$$iQli&?E&V9XSbcuB*Fi=As?DHq$89&TOhV#//#!V-45k=RPZBU1!
%7lP?"Phklp7DuKp:,q"Efce<=fA73-mp0$D6Pfuq:R-,m$i$[W8BB;C24XigQam5<1te7Tqb/Eo>-^mM4sD'&r:;eEk+tIsJ0!)*
%?U+;m6Ldle`*e\m\J#bhKQ<?\:b3pqcF0Z@_70o(F:)*EOt]qa$1[@&o.NjQ#&(TU'L-K[=9nF=H(0+5hf6LE/cl?rSY+$nj)Zt@
%!J=f7FEdF0:\aCY@:3%\0od%6SPB4dap#5O+:6)DQAaTm<CRJ\W6V(U/(VhTVa]!JaR>qPZ1^+S"1.1SlHb.YX8'%PgFoUM^Z@#3
%NWMBb26J8[/;m)En%IXc!a@0b'#?b`FB5+/j5d=]*rT-hOS$MPF`6+m?u!u22Yj(['kJj-4sh]?%\H(pR>LAQ4/o1!$:S]q;Rcl<
%Abjtmf8O&R^2!#kI9+\rU^tgj8=FY/P79FGn'M?2KD]_-aZ>jbF@-+Xo)dC_JH%#h]o[uiUTE&bX&ORp7n2?(^J?6A>6f[S-n`Hp
%qGs(aBC7'dodN8CKA'#o]#@d,-J"<Xn6#r2T>cd5lX\sa5h*Q(%Yte0J)VRZL`^7&QF$jb64)X<5Dg'5IN1$UkqPRWr5/C923a>Q
%ae1B8%i?k?W0a/>hUI(2C68'P5ebI:e#aq^AE%)b')djZggd"V0p+HZTm*EEJH%fm0!Kj+\T5QK@j$)VO12.'E"Li`BGAK$SLPl#
%JIn]C<5>&3e`dIf5=r/aU0J_ea1WebAE$NUZq^O@==h=ID5Y`*E#[7@cfF(.Y_hM._2B5NL*B7Ian?0@1)(l"=;[K_r^sbR&_u8a
%%D^q6High?MVJL,%G2a!C</FQpt-4d"5,mlnF'Ka3,A;-fUVc/,Y<i('<4d'8hU[*go/YL+j"1.bn@MfU+9'ZGd[B+<,J*(jFt,K
%XrCflFU=07s43?U1@a$4%"Fif`LgPu^R^QE?>^8tTd`hYjOfs(Hi3_`fV0lK3[N9,qGp!S45C27Kj0g,#sNOlSG=OZZ?rO>.+Ok3
%lX8X\RqnGj"X_nEE-spd??CU[%Sd7I)CLTHNYJF8l;.WcU5O+5q*sq[0RCo:Z7rB7?+jcBZFKL:e,]ho-/?Lo_-H0*)=(hj,;^,r
%Eo4I3ckeU!n$O?0@SnV5HBLo%80Q*!L,;lt`mS!fn[LC"lrop41"`"\^FW+\[D_b-0HE+!FXGpE?`[B(`][nVpOfY#Wde<F&%V,/
%Kp?Zu6p4e'M$Z33jr`*O^/?)Z-A1]B]!K=od9dp\^rBip(p\.f7<(0D"&#h*EUHr8frMTS`Q#V29@h5'a-P9SjkhO#$YdDR`;fH<
%UBqI**3D%;[\l*MTKAZsV*Z9r%QC3!MdLMi(*ZZ1;=iPU)5>'b;OX$`-r1TlLC7Ke8UC&29@h5'`t%B8?X[:=^:ONM0@=jc6L>RR
%g'[WHP]6hQp^DV[Dr4E3.V'u`?Q3H^#787R]&ho[7#jk7[L0kkVYDJnU8]Z2$(3K10A]j;:*r/Nj*Rc<63ffj!qQJe\a&tcJ<&6T
%E2&FWP&4$_)i9]/@A#DnZptKZERc&Q*>,oXCS>idF<=HSr'4T6i@"Y%II,7BFY`JAFh->5(O@d.:)f'W7HfnHa)+3<54t#]A*VVt
%K(dckn.`%"T^A!7%a"tiJ>=ed;t0&)Xk7T?Zf_=iH1!\f;bDAp2hnDtKhi0l,^%tcAX[RLc#3?aI<H=".V.:])PXk#OaC#""`HTi
%b%G6tZhat0H(";!,O.4ZI"d<?e-ci]9n+'6h"8scXEjPpXHS@!aG(_>][D*9i]:"4"3d[R,["L`3JPRH1!.opAMnbj;*nhnmd?Mt
%.%/%panl,_;r!"DU/I];9pq;6MQr))i2\$eADq$R-:Bh"fMI"bCQhLD9Lef3g65oRJ2l>I)W^V$m7g3L"]Ado49QVE:p>W\\?f46
%f!5FXa$V[b?T58$i6&WnYisYuFY`IN:oP!AHq-sG#i6KcL.G88cOS2nGm[k"HZH^M,14*K08gN8mp&'h.P7&&kYo?#=/.QnKB4?9
%'l'&Rj"V0T!#D?$RU5R8Ncd,H0o"NYhL"'(#Qn$Hh5CX2\+An4/6P<E+A5T1T9%=V\i*ir_:5VG)5Z_++o10sQ(SL`aps"Sl5mk,
%?:i[B[$XMeql;%/AE)'P[!,2jLUS=uHl!LAOS<=r]QKu=c*[(fQpr^,<CkN9dlE9_!>9%=H1%g.9?F_7_'*q2-ZpQOL:1S`*UIQN
%]:qCmDCep<';'lI\hAk`,5olZ)IrD$%U<9tNDS+51&2'_$E:@GCQgeD+8-3+4#(nM]gL=)8Gn2a[&BmlE?jeg+p,8/A"Dt5/0<%-
%arLCKf+(%qge4ss5`D&h/?)s$&4)3s>ONL[cA.BkP5'+JA%RJW4*\@?)J6V,8cYidXb9b7;8Q"M%e-@,ZXfV#Hu,hkq\OU[<b`Fn
%,E?X)*(96<!shVWQjM-6QlZo4N>Y)YZAVfW=$WJ(mMf,>ih_r%5ng1IBCEi3CaueQ-8WA^>dq_D-0o+$A)N1:T^T:kF>s9R13"=D
%\UXJ]3Eh^ZJI4'R6l+><FWu\+-6?hM5O<UD&V&1>SC8+/"9"OUQ:A-3k]N29$&JT0OEIkuZ2Ci^ijVO62Ya%>Jti\;>8/cb,2m<N
%YrD=d2mU9c?A5X5g@nBD*XDr:JY0&+V5hB=-+t;+5#ISGEYbIHg9t@i=SKfu[f5psb3&VQ6S<IR'-u]YL3FsKi&;M>T\>Qt>51*B
%q5Ua0WTIpQL@bru:Ii$cV]/%(4Js>H!V?S9V_af*#p?pd@NDOsKT@<TJ*-k9;k5=r=dHW9K(.lcbuMS30ti9Hh\g-oTM-RKePd,@
%%4%=_rT8d-5l&Vn1:=ke;*$FN)Ys`hH@'/C3a)6"8aKFlhBKCML#$Ig$lsQL^h>!rQ4VjO-L242<L*)Q!_[8Ej'\VV'Gnl7A>gGa
%*Js"^#S'`^n6p.pWet$`.u-U/g9FBW51U4k!Vb0B"Rt\Z)6AqDh:lG<:+01nLU[]+fttX!2+B%`bcV@tO'4LO)#i&,K8S'hWZB?[
%,[%7N__Oe\XWhtTXHSK:>Id&?i.^#:B^8jO":F`nF:-/A_olQ>cR.(@n60.8nDlS:U"X6Wk#sECDFQD"i=&/u%dsZpO(W\H-CjeK
%MKQ/knM5pt^j4o9mhiW:rX9IBVUP-E)-T0tB.i-.9$:ko$kM_8j:H/^6,2"nc-\[tHnZj%LmQH)s3(SV*m4%`)C:)VB?3,:pirBK
%2t<Gd#7r+q?$Te7eiUtd5):aO.r6!q!F!`gRN<gK.S2eERZL^70+%S\"g)*"HgodG7gI;Cd1_f+C0*4O=%h,d`$`=$,D#a*(-JON
%A^A3Ei#H]L$(FjR/O8R3HHd$J8"CtL(U3m4&3a%sRNMu3p$-okbsAKF:'rkh!iXp+Nt6?.2&^s%A=Y9!RMO8b]T?CqJY&DtjX2&p
%%=Ni2HQ5j`'HdqYmtDchkdKuf#PKD6bQUg?F8DTgl,%Z^%u)%E)&DI5"3Ch60DYL(TEF\a*U@7o@j>JtDcIll!sR"jTOteDT\)7V
%G6uXNb3KNNYW$+"d1k*g",9Xp%.GQc`bPW0?ckumor>>U(9cRZ#u=31;.Z26$s<f;+)=Bnd<hqC0Hmd*n2p,dHIkBE1KgkFLtIu"
%JAN[e00deogH`HgD8';WTQL$tB]SDZ(CJm=Wf=&f"V%:oIh-=#N#joYXHRpj*WLK6]V(IG%_",b[u=$qjm&IjI#uLL!2PPITYOu;
%Mths7B4L.,e8<Gr^pLc9^>OJiWC$YbeUBtd9>;)tV)&'oB?3,:pfN%#:=BU+Scu?PCWk5e8Zktd($YK_3f,[X3/@&m\luE)W(*h'
%%aaogZ,@Ch6`K#_gRrf/+V^hj479kc@a^5RlX8SuR>u=D$WYi-[s7TU&S^H11MYi^.9K'Xh+nQ<,UuiALX)#7HlO%jL_$lD:Ho/Y
%rLMGtKiedaI!^6c>ak^JjVGJ5A=ZDA7'"?e-Xu:7lHB@#k)/3G(t8.PMh>]kNmm,e_@7^1&h-'cB?AXpZ7W7^5V=&U-pKuoNA<68
%]p=[7@"Tqrgt8n"c$KTmjne/rq.`D@$:6NS'nX%f&.^0p.?b.1Z!GAa,eSa&K4',tO?73_0fS_Yq][4GZVnu./fb;Z&dnEf8DpkB
%@V>LOa#_lI1^!XMD/ZQ;1LSPn3aq2?fEN\I3IQ8Ai.5T^gao23'b!Pq-8JY.m31h@o.2P<DH3GbO(o8CK&nC=lQX9^PU,j[-0o+$
%;a-lB\ECQ=]7AAb.LP*1[a&0OZa=(9Q&)M_'p.^HEHU=Fp%)cLod^M?C^\+!S]B[?NUh_;YYq@PIt9J^7,N/oRl(BLduJQhh@EE?
%&,8V%,.;Cr>*0l/KF4C5R]Xtg@cW^,Ymbt1=kskF)A4*jYQfd?G%cm:5b;Q5Q^T]4R$=,P-^]BDJUCj[lHYE41@VQ'46E.K[f*u0
%JM%8'7@9Di:ZRNN:aOOhj9ItL"ZXIDcg2]Ao.E++$1j`eUN"(&\7>ca3U7u1Gj(:kJjKXbN$MgGkP1#WlX8UgB5d\:Goqf[Q"UAR
%+q,5piK&Rkj\n$O:cp!>,iM,^rjNp0l1+B^SPs^*F<5]Fr`i+Q;LimN'qW;bPJRt09bOksp*c__WKqsFa?!K!gM$eXE:9&nqC2hs
%?uW@:T66b\BS69<58[(nB3ahh2lujKR>QN9&5ohh.Mq:`,@&L8J5(us=.gX=/ZN4#:p(>(d2JHklrYV;IldlI3=R+,h][8%LNTk7
%,Zn6[,T`),/0*Mf-guZn>K.n7'EYu%<fk;#H5)g':8imCftLcK5CgP'g7`I1CF=bqVT$nGm`ei]qjo.<LOIQu7mE7?=H20Z#+6QO
%1S%8P^gbS3UF$gHJW?7E-"]/ihDM,TLc6a1Oq&WNBcVPXb[:+^WCW'cfM`qPEPUZq?&7g=G-$mY^Rl:!XH'dP%jDjJ)F4iN'nY`"
%(aU*C9GRrc#_\7KYD:c``f*bLF`B6:H]'NXptPKWNdTXs)5&@"U666_Pm`[BWN#=2OEIkuBcd$'j'0'UORVYS,[nMgD]V\>.#D8b
%pYV2F.QS3+'$(AmbpfbV^ftmQ;)U*ZIs[i7!cPZMn.Vea5Rs,D$89D@\\;7Q:*r/AdlOrsq2.om3cN`%"7/KCrln1fE0mnV4cp:D
%3gZ'$&G@qoe2R`i7ih6V7@5<,`sarcWa:^XfNMhTUM0s#[X_JM4$2$0^5&b,'XTg3'aTf5e>X*$9c;FMjG$Un7L7K)NA-g#2SQk.
%.,<48k=]Xc@PlYO.D\LQ')5k5)$?Y)gs>hdidJGFA=ZDA4RpVo`SMIs"_mij)OXU\YjR0q#2<r9%/'[B<*E4j?.WCNhDb4opO'NC
%4+c+O7'R7lAJQ[:hGT90P!+c#mL35G$\(6t@"XL0c^XB7;.7uh>\GjPX$_MZ%EF=7U7GuCm*c.`>F*\-#mFL]ds^0Hi\4%A-Yh'B
%lc@=HRtAqU(e;2G%l\+%K6`Mq=2c51l\8q5N!T4n5Z-_?%!6mI_@d>B#`=trE`/:YfV8l^ZMNOd`H_J(L4/XE'SKmJ)9t=)ic65/
%fcGinPiVOU/6O>6+''$5%<%IoNBhUpZ(9hPM5bdh,?2*o%J4O:-W/]uDq*2#as[8TRXHYlJ:+nkU.0h+Pnia=]UQ0_i3JjoP4$C\
%UL+I5-OV!t8uV%!(O@#%C;`fAk0,E%Ba]M&-d,Ei'<Xq7!?"`mNpT\OTK*:#.LI8.Uauj.?ks9*p2oe3KA;X1j\SX04N!8abhA1<
%L9-Sm:PTR=FPj,k^/*?!C`RUt$ifo2Xp'CrSj!3*:Lp0^i!bbp%q*2o*[e<qgdsb*d2XH_#EuN^pR@?H.!U,0c1BuPOEIkupI?1P
%e)ia^jUq=NTU(%Ia/A4Nk%Lr4`@iR$EiQURP*.Dlo$MaROZt.(]>P%k45Q]l*kso:Ra";#)PWrgF[\b8q`aF"=XOk)<o\X>^*"M>
%f;">u6Hq*"JNBQA%"jX+d+QX=j:T9A&0lg@r/=f@WL#o`IJHDV:J$lp$_1cZeTQ6PG7nYiPWRNM_!'kSEGroZ=nq32m9eetO/egk
%^p)F4.=npMk'.4!ZIupZNtAokobuqtWjs3Z5f@=@f0l(i,0]9X=EML#U14WE?P.o0=C2u_cC"ZJ4%?tgZ;)`1`g1+AdI5='mL'Xo
%_A;0BCba*V!mF')!e`+p-;rWXWq9F]\0Lttd'kGWPfO/ZOjb"$naW,9"ZYd`,Wl%Q..n'4&,B!_f#b_*9^LD)riPSnQqA29Al&lE
%=>-Bkj;<6N&,)1EEKC!a4>2&g,#2lBCsl8M[afShjPAAurZV*Gc2`#sM@_/hH%?%I7@E]W6e9Ar5KKU:2u[$,ZiIWWIAKf;pg>g<
%/k(Hr!u086Z[bnYC4Hb:'.QHmd@UT[Or'QR+B;gY&+VFJ`=,^4Zrd!48]n6&XHSK:bH(!1s-5R#eZ<FeRSfNcA^j),QBBi*9<o7i
%Fpp,eh3?,<01l.Xr^D&>WLb7tTOZB<H]QbIlqd*Mai!GF&aNi[_q,ulJ9rZsbPmJ>V-%0e!/6/ODZauJe4^'Y)or9`e4@"tdmZg-
%UsS(_0cS3]g?Os#L<#dYI1WqXV,j3XZp.]jimk5eXFl)=hcqF5aKIkEIisZZ2a^T6C]]]_gFoNJO\O9G1+i\h%CK2WNcb8>Z9hJ1
%%U1n$?\r2pP`CLP^REfGabE;dhE;3J;e[?JQE6:,:\+k;S3N@gq]CYrP!t%`"NoR)&$EY"0:.)hIUtcRP3W+(h*FF/SrGW;%1&hh
%$NTjN7c+MX5l9,2I/mRG=a+TQVM.*)f#bkNBc,k6@,#l47KMS(9MSU+*pD[qU8*h6@c;s$jhV1p]'/PM=o+&HPk6Yn;DT/[1L7.2
%bPca5DlKI%4#$;Cp?#P1^\OLVXHS@QS\G+m`q85l,VK/oBO7@gd-L=n&KU=-c8m:g.MU*RHPM9p(bJmDT&;-`EWI)I%^LEiqh)_>
%"]iknf#h'4Df".+(r1&A=XOk)'56nNQBtgBJJqtX:]LX",<Mk&$/s/fOra6`!2"dJ*B'4fW'?Jj-eQu`Mkthkn/dcYV2"&&Rl5O7
%`;hq0q6-_2ldEI$A=Y9!>$o@+^Z(CTqsE&bD(!pJ`Ur(s2ae5-15ZT7(O6R8R?75tQAro2&7"In>S/*qJE?4c'TX47B<2_b1_kB1
%!;7jkgfq'Z-N8I"TenKJAF\7LM2XPWF3sIk:hRF3R)GY`o)raIl&u=Z5k`Y5\pDg<%tf;QHaJUL_@dBqBi0\_Ns`tE5L53+Yi5JB
%80@SLXHS4MS]+"A`YU%mItXX/+?J&kG3%<Q7A,N-3A5Rih)_XCAqZ5DUPC+t`lTEh-c\]ffS(\V\;.!=>,iW3%$<Nc.BZs``Aa*a
%PDR'3c-4&S(Sis,"!bl9WgEn<ATm\__%\1GWlr7".7f::)Bt:BjQ]Ar[[6[+e;(1Xm9U'bPa3mPW``aB3kT^FhV,50#!U!05eb!u
%r>GrlI5#3goN=68_AD-HVZX4h5cnjcTc!85\oi@a_CX1*"\#=*7`4=XJ2t=UD[3!@5]R/0!M;LI2>B+S&=YlO/QjG7T@<cc]\pq\
%?YT[F*^KmC[D[^61r+[eUd;-LjV/g^(gDHl"]D#<@2_T1U'eI[Y<bTjj&g55"\,*E!h.+WT+3.PjWs:G=XOlTmbAg^LHf.,W+@)%
%'DY:PD>)rp"!Lubr4^pE+u)`tW$V`;'cpC7+:pe:%,^fi")S\.PN^HYQO>l$KhQg?W5n!TJ)$Kt%d*`hec[*Np[Z0nqLM0Xg9>C4
%g^=7\U@WtZP0$'5i7MY:#8!;WED[=h1)d0V)7.aWH;aY'pX_!I(T?oEW`1;[lQ-6";>dp_@\'TIR_rBSV#D"M)Yn%AS\Qr,S[/D$
%BgFjhV6S_sQ8KB'j9e/8Yj#[gKhtbn4<$N,6p"";XT''ss*/OGPcZVhg7oZOPG2ghC<8N)ptKN(6k8<C^@@<^#,Or?f7N9QFiY2a
%@08Ge!F<9mKEB7t(hsb^XMcuoOs?TQP^%8p"6+cf9cA8o'ag$>>#0bc7^/d06e9ArhbF4QFF,UPP4sSJXlYj7T9P7@ng%AsYF)"=
%+Z_(%-pkC?J@13h7MR'm`IjDYbeJOV4;@]&BT"==J4U"J:(0[)#E=2?A=ZEl]b_!$i;$!)il:kPgWuoek&-LgS`2O^&ILdUotH=9
%<['R:=ZjM>.bG(tG=JSFFK]3^N]Mk1+M<sQ;pi-0\^;VBA>dihd$\EekLPf=1@aV-f[kLuKlQhl:_.7,-IrbII<c#m+q/E((j6kJ
%2$S"b`f?V,BJN7fNWI+jp'i\N9E,)cBgslUTGkTHO?sOF(W'LD7(BL4SP4E7@!/)\kmb0Sm]ESO!G0nI'?e1h9&sO_n7^bu?Koqf
%0jF%'gTYhseHN%IO>FDN%RjKT&m5/)j/@`F+lQ8DqjebnADkr'D9o5r:l;rO]tgJEqdC!)aSbEI'S9!ZrrCrFC/+ke"o;h]'@@,N
%7)m_;!F<$1Y35uL&B^%""qsm^FV<gGUHQ&HHUHB+_V_tXM/glmX6Kqa?XU^*S.k,!N2udY:%V"\O9.KBW[8)B+V^XecuHIG(?K!j
%7RM)5c_C*dkHRD5U=n9iAC$TuYU6.*9'U6%QE6:,&%CI*I8BSfb#`](LM`+S)>?f#Wn[8:dlj$`A?AY>W<5p1%0TP8)rZojmnc<Y
%=?^tdc@Wui8$KqQA2D$A]bTjDhSTbDUq,?N/1*D<.CK;D,@>"]["N"E@KXP*fjN!UlJL?q61?0D$trC7BTLJo<.#V3_ib=`Y%?L"
%/W%Fg>D?W116un,N?.=qi'W_J@dPgZMSGiL#A"dhNtX4PWI&_k-pk$H+<Si$T`&4dXN(WSHr/5kdO7C24*YkskfRmA*>=M/2@DE7
%FqS[$Zd0b0S5PukZ"'=5Hog?_KfoCJ57$gO^iZW3%S=P*$OC2rOmY3M(OAt15H1$FCBoBalEX3fg,gd+H2J%85]X*6Ng'rNNE2k#
%U(R^d=e>D4G-$=E:YljH>e_RMpU_[j[Ac8i/s\n;$MVtfCfR9[1q2BQo*#K$'#V"<!K-k,%C\:/K,OBfjRAtr'W(_0)@cqE*@&5%
%YT1L.[!u^064hp(el*^a2b@0&rLYkrSI8V,2IrPb$ACL"mX<,^Y[#T+P56IJLVKn-$r"?X,=$H(Z2^d)+'qpU\?TS89RN5II2U6n
%Y:G+#@RCl]gass0i>l)J&9+s:/3?b2;_B<Q<SRp$"*Ka*&Q`T=9F<9Wp<=cK>s7;s\s41ko`jk^l6^O#hcR0Z-9c\]:ss`0l7&FO
%7qg3HT4?qhg(DiF_VMln\8!/].5!]TT0lGJ$mZSd#f<2i#eH=3FgAA5!Iru#Tql(j0jO9fm\j!drbBP9RJ:mP8%<1b0\0&LCL!O`
%9C\?#e7ooDi'5j%_m>>$-QP?r[AuP%bo0O50]aGeqX8`SOD\*W3c^^DWb]Q4-IF-rfs+9V5.3)pQG3U8("@<1BT(U=r7!p'ONLQi
%2eYYcRROWLNhbI:EYPV6fo<\003EQKcr:9.ZE*T]4]t(7L&>2AK^Vu(f"o(Uk-9r'IqQ<G5Q;iP8WK&;WkW)cS%s^i=ii-J,LY8O
%WZG#j):MOFQ&M2Z1nf!V=r.2)Z1o+9/IfU%CT!C4pH!uIMI-83P'&PMW@Ag4S$-Y4d1$X\,UI-`*M>Y=Dhi%mV@5=q7?ab-n/?,I
%(s<ifgEAR!&sC2dh_:k`K82MlT]lQsXNl_C1Y0[^LFLk+5Q/,8Me!)tM5jc&Q$q3=J>cO9+8?l)JC8_gh(!%3SA67\'@-%=TC!/6
%7kP\\ltI.8MYG[L<CJDG#qEOBR'BE[4][Ja=I]:PH$=JNZsoI5HhX3+cO#W!,%;\"56,%UZ/g)1MLM6oB@t0d3i4#%'4!L4^(/p5
%C_k^U5$IW$a<I*K(E8"OBJ+2h==41mY446Ta7.pq<Nm:eSR[Zd'^C.,e$#Ig8!o[h;lDur?LW1QAK9Fb.*KmB0;$+1R57S#$$H9@
%3WfGfObQ$U9Y9H,OEIkuWI3-(IA&KHQSM'&,AB_:/8b7sY'L\uI()>U!CZJH'L@bU>/GFonP_ps'u(es'"XDWEO81A2XH:Q58Dp)
%EBXWhop?tA)Z4?k3a)4l__m6:]HSI*L(`=*a93Z1mAM"\GVOXu:cik5=RtZ(]7ha]G>g@L3@ULeH?RV.m]bMFOHCa"fg%Zj$m/.u
%m5_#DHt15Y=ni,;R]'9"OAG`Iq<iibiBr8N$/"g,e=oa@Ih4%?oujd>K<c6uH\htEXeoBWouQ=:E0[?K/NC$KrErd1^9qu8\eq58
%XA&Uh44_)j&)1ilM#(_sFg_VP1#17./X)Br%.HRAB&`#f/GnJ?R22Wn%\hr8TS2i-70;2,<%FAekTrC;I:Y'D*rXrUFY`G8_uLMB
%4nY*A^l35u"cVio-V@CD.C;8+Im]:'A!^?;KU1*<jZ?m<&gNpn<*i2oFF4M3%H/b2B#0uPqAK'lfmNB16e9ArLI<JrQJ^B]9`7i0
%&:LK$!(&&K-UBUY*X,B0dMt]68<M+"$3DEI@FrO.<]l0\HHVp(C,Tl.'/bAuAJ"l8*MiM*"8ZcR3Z.YH3NVENNir^[K9rQLSO0!\
%b)S!j#AGG02?7&m/S]fjYKU[TO[0+?*=O]fAM_c4l7>HHV0(N3jGfU5Fp0TA'p<GD=XOT,^CTj)j50OfWn[VL+NgAb!V+sJJhXiP
%Xo`u)9gosp<iY94_CiH2[G3oJoPX^bD-,IH&-A/m,?p;W^ZaR4"pY5gEV>H?9@h5'LE3gUmJ;\Rq?&f1)ad$uGAiJ5*Eu?'.+pgm
%T/K2p4J0Lc;lqg35aGiR]mciA'"WFZIF+js.-/em0F$eI<VP[9-0o+$,9.+3!8diq"S.e5>R<7hZu0%X&SMpg'ohkt]j%F/;1m,O
%,T3B);B8<"O*J(l!=c2jq#h5.4cTV<]srDGjQQPFs0Q=-9RQEVpJLaDUs:nk;$C7kC55+t;!K)\n$%FmHM[epHk[d"D('UN^GjWB
%AVJ9k!8*Yr/;:IOOKe*NP"FIQ5!G/Kr$Ftp7>Q(raZ>jb['$(Rn5d=SW1p&#M>#iH)<)BdR"3!9Q6uq`kXHVCrsXK^+p&+h.2oW<
%ashiDA2pk9MF(RJXF6D5Q_69sCkjQ]%fFRu9@h5'LLl9%R'.VA!=&nQ@'^NTIce74'0T:P<CUUNJW)ZPQ.'%Ec$DgR-6[H&c!U%t
%V5drfJ;(YhBiHZG:9j3VEGNQTR.h:#JMlT7f`k,H;L;b=A&h%1LQ9Y'U-H_?n<_be=d<9K8JZ)$"`GF!C5i,nh[/MAao7Hfec(BF
%XlVHmN@"Da5:p"c';*?0k'm:]h*tr5(Cc-:i%JI>AH\:Z+/UthR)&D;ZRmYHDhsX[#dP;EC)"k=%ASVh9/ZqSMh'#MWG?kP;!OSn
%pQhnEM%?$I)Y';Eb7De;V[OrMN?_`i-Wkmth'W#7pJQtJA?(t$9l("p?p@I'k[8qaU\`Yq&mu<:&;),<\RsF;SUunKl!$O+ahjr*
%bUb?[,.-qD%3C5-J7P!JZ<lAS>pF)!K@Ku%8JR48NXuA41P%)OUO2n'qCA3]o@jmh-t5A*Z@p)n'$\Zai\\aXU<tW+XFkeZEu8Y]
%Dlq:e;Hrf]!uP6oKD>N1&3b^Un^WFtpB7E9L<$t8%:k>1E6]T[hqR2VT%ZiB>2+7#_ZP:6`)G51$#n8q9DYP4lX]#(<IpA!c``6+
%M5"P5(4uh:"_gA#m.B`G:>S%k$_+.0B`L1:g5\<7Z3VC?>&fZE?TMi`rm*A^.8#U`gXBW(\[,cdm!C^gg4&A_:;MOQ3S!SCW+@nX
%7Lb#'mWR#A5_$>dIdrYo/?eEfl\<;c>X/0X:al[Y#\LhRXTJrJ0[:18g5D#=1Y0[^LIr=arnkiBauI.-Q&;:qjn";^?T$RCW86*7
%K_1.*ALA(sduUH#006'sI<jlMGHU5k`]^1d*QLp@WZ4;$k`E>6A=Y9!g0HGpn`P#jJgj]pg]0^geaijN1ZKpR/f_ZWDKb]%B&ZCA
%DkceB(G#'d;K?GUXQ,KU?Ei&gS[e$6ae_IFBDdN*lX8W1'SMqT*9??8hpn^CMhf<`,biARH$0ZL":.T_Wks8U9B"8H?Nm>VG\2D-
%#K)/'K_Eu1Q^)l-q3!N0-P-%QhiMudn>W$%^sDN5/MHH-KPoP"O:Xr==XP?mbm(*HJ<CaJYV/Msl,`5/)?c\Wnp<(E]`tK[`%7Pf
%E`>Fmm8<?^B7EJmU3-EMa>t15gGpBRj=>KO+/.cL(Juc!<VZf2_%24Q6;L2\![-o"<Ro/iOX6(RGLjINkVeY"d\GQJP\*j9Morn1
%QEIQC=X<*,nO2;"m8t_<IpZRGGoC"OMY[!8L'1jdk8b0V3KMMI>ucRc=BDGB)rFOm?Qo:A5rZn_+=F\,O@@=ZMJ=B5-`T`G/W6Va
%TT5tR2B;G8&m[G^XHSLUhh_>c5c4C[c8U8!dZ>_j!W>F?b_X&le0V'G-3ms7_l,I)[)jfFKQE**WI#>9616EE'\O4QPFT%O\(C[\
%Z2.usas#j5SL*T4io@j]G?Fj]7/d0M(9DWcf>%Yh*.X(7?rjuT<A-Vm%%@RU-:dg^)o_u2fN$$V>U\QGYQF7>(l&+;Mp_("qk/'K
%HY@-p\?TS89RODi3^?0<UoO]1/Tc;7gaq!>lF7Bn1ki&t.@Z-Ni/$C+"PtG-j_lE<VC:$^HP2QIaZ:ShpsPo>Uk\Y$k\<fm4E%<'
%-hEq0<Xf\jY>hW#2j4-'/0XG"6h<dh-@FJfAi3pM:%J_>:ge_nHa'C#=i5BqUIS+.HoTtpFB:2"IW&8f8DP2i:)6$qK=Rbn\'!Pm
%SJ,=@0e8qdi]sRCA@JC'&m9id"^bVulnIGYiZ-U<`ZD"Lc-V%sSfH,W#A6K^]AK)sB2[m``f>0snEG>(:kF"i\[YV#cfcFrBH4c4
%8eM86UYY#pW2Uhah1PK6eF#T_a\e.9ok^D0?J6trBaQ7f-nd=aMeUH08;sT"q::XMZLE]R-1&8%c]O%@.E)9?QW.0\OG(<YJflB.
%+-<d'd4b0t3=$C.$\!pfF)KhuYHB!9Ac;]Kf#mL&PHsAM\Q@1>g_d=l(B/dZ=T4`]NB.>]66&kj&4l"tpZ=XNG'&AMK!;=6D\Y,1
%T`U*(j_dA30_A(:L<^T<2V8=8]A!,lS_S=(dJ,?&"!VJq/Ka_QXHSK:o,,Jp#ncbB]qV/3N#prC0Kh]jL$Rs0B3I-biQZQ1&*+T2
%$3Hn&5r+<1HZ`-r(gEFQDM[^1@t6KcV:RGjML,2<$s=qcT-3F7pO*;?82smnV?6i!L<g4PVlF>5jsu[)6sl]$gdQatPU\(t/Zq"S
%CntM4&h73cL]C(Q1;'4rZM>;0(!,@7*U@+j6Z$F2pqB:*86dK`!Qjk!ZE7E?:6L9#-!:8Y1J0o'5tF1XY]\9]L1ZO9%hVR'ZiO/n
%/<N[VDu#5T'GOnq69O%,Z;)`1Gn"m\oh#b^&*u!WHZjD\&U*?6.\J@_F6J4%Jg*$aMt0LH$cP`X"ZAfD"k'fGXqWdUVBYL_e-+&l
%$WhRSm$I)3fTer*C</FQpf+2,qu>PG3.\ecEI8sWP/elT!L7rp"JLsmX+bd?r'Q'o:km_u@(2;`ndfsK81LfpPXjM]Lp5hMMt+4d
%eEbXOG[n`Sg%X^Fm_ofGOeG)jEiL9)!n[)p-(lG5DFopIUf\$`OMf$_@1BYYI;c!W(o^$mANA8/XaM8u9#^l3boe`%USU,uX/#V8
%G-$mY:PVgP<UX.9,9V9%Q%X\N$AiQUhm>Cc&/\np7S%P+ObXmjW?6=KS(/H^E`-XN'2V9MbI;,)Y465eXI+nM3\kf><.6Q3h-9W#
%O+BVnUOB=X>]KNUd/sZ@05*)Y9Vn`mXJU6*,#k^hI*A>kh5s$L<$eZ8Scs<!;Y($i0o6JhTo:;7F`c97_Le,m+V'>J9@h5'LQr#M
%[TDNoIc-#S_V/.?gcpiJ??N9#+=44&6+($m<$ol7FodW)$Hn*ds6B\!"=5O6U(hlEUA20ho<DuphcR0Z-9dslgB3sq:-J8+g5VU>
%pSHRsg5QiD32&+i<R9;]r:\1BKfk@=07/ppM/:#XXB3/$Lu3djQiL.?PhYCM+Vo:C\jgTh=XOlTQ6XIjh@X*=/_>cR74O_,gZM:6
%U_T?GO_Y5aN%e,nL^NkEjDEVqU^S`/YMq2@O?'-C!@CGQk<OB6<6U%+8lO<OZ"0D!HphYAnFfn#b!nLRo1,X+jieil:kbVq89P38
%p`/AA@hVG3IKJ1I6P@lfXj,n+YG)"SJob;d/R3*D[jHDB,fG?Z^G08i/::QRGs^3MXh1!s)QG_+p0E*Dnu)?!.=Mil[gmMP<)ZOe
%k##j"3&7:8j9cl&j$J*sDd%'[$T1G"B\qFI%e`&ULjMM55>OA@9\=Yf@m`Zd@K'/nN7JK)07YT_BcZG_]FC:daAT!MpWl%9,0#rd
%]k&JLJkdr.&aD`BjDIR3pQhnEM,0OsI2M&^5blQH2"C2<f+P6.%3RW)#s[3?\f<0t/:+!`k>c4#'I]\FTg:KjH0mRf/3erl@Jj[0
%@cFX`46>MJN-0'p;ql3+V=?kXo^<<4XF_p9!q62_Ok\Z?:`o!2p?eAoGn><O757//#cUlq$O>_5"USqR3\)D8/Nli%6G;FZlg7nW
%Ce:r!jpCho0e)<-A7=rI:kBGg)PhqQm[6U>8P,RZ/[G"6IkP#AmHnm.iI3pb7W;s>ISTaqiQ'_i5LuU?]mV2DV)]+_D'8-o_HYU_
%?>(FiZMBqE*/CsZKcAmR6X6e4K7aLYUgish#Zup2NisfZ)4#6c][?>sj_3o:4'eLs.!Be&kt#lNh_k]%q`*/,J9M^3>5*%/N((g2
%;g.EeglArP'P;&^;1P]O])o6_"!6<lepc9+=gP/FmO[h+c![^s$jQ)Z_'`@n)?7%2[/Kkeel@A^:N,^-o`9&n0;/&ITBb/#3LDeM
%HU/O5Kekp6iZ!(;2g.hNC(jjAn#s+]W&AVI#m#CBeHs*AQR$(GYD-GbR0:p`Qh*Jn<J5QIc3i*TkN[VK+^(6/5cUO%HAnKu!!3dW
%?n[:r%#V2^`rj(/*Gs#kACXOmQHK'pRq/o.n3P4m@--!#O0>IJo0Cl,KK#rO5Pi'*Sk:n6O9+B[%5"Gt(nO"ZUSU?4g<amIqo>q!
%d:R?S&):0MpBu5-0OQ2D>Xg-&A`n'#T,>9`];3PD!a/S:hWRF.W3q#AC6i4T2IPk/QpM3DX9=S4M?G#S0XeH+F"E>#1fOr'WbEN=
%$?V;c/(qmNAl\W.lsJPgD3Pga8K@%G^`/$SKQ?3R>r!)i4'EF^/Zg8m)i>QI8nSgKEWgl-)4:X7Wq)UK6/9&W=>W)86"Gq=@MtKg
%p<]?(3;hZ%:U`=2k\VU2.`@gq[B##O#aFZ`G.PsGX]h`tD&hh<faL@"h&XDpI#Aj,W$l9+lNQN[;5h$GZL@I&DT6DbDJYY1CUb8J
%E<71=?;BN_(\-<Q-gYL9aD(2?V-'3<[1-U?STn*=Zc!6)_C]+A!:%@"c;l1r%p!B;YMt**B:)BXS2X5l]#7@Ch<P[FNaL'6=]Z3l
%0h:DSkcjjBM'(+=U)7N(7J+JgB-.al1D]2p>8nCgc;:?:etk>oN9A:2LG\m:qVVZHha:<UW:'u9$jY"$Gd0Q07'iqX37_)[2m75%
%[67tjr=u^F8q"f[;<oMK/U";S,:>BS!WXd+R4/+J=T4g5U=3oj^,CRV<aE>p?%aEe_%[X8)(B(d61rttel@C4O"ig@>\3:@rDb*i
%\-N<s=CVus!(__l;Ukp=,<5oN9_Dq/'m8CFCV=sO%)Pp)@L\9&'a]/[W/Y[N0P,KO(<O,pnLjbl#qBPJbghh;BNgaRjZ@huJ^)<"
%^!DoU;X"Yp:3D"@\kg1XmLsQJRdDGs*V?rA6)>8/badT[f548:Z<DqrOgMRaqaf:<Lj'iu]hpspr"Ze%VYCp7io0)(FJsuETQ&]>
%])r`t`C"YlQW;9Q%,%X1;LB:>cK2b1'MV`%[S%*aS[M>3YI&%XofeI[&`>gEI4sbZ.17M;DL!mFn+(cU.1t(+U'=ae+W(e^N>,@p
%@?(s+[j.n?rK)o-h),8U;i@s!W4n-%#U;'l6P;rXPXdeCA6hWKQb>_?pUORFn-B1b`5lg9goC=&C?Pm`59"c.iMn3sPN2=a0tNr8
%U%Z/@piG*$L2)(ZUol'Gj]U:b^`-gE;U=?)(\-<rE:gRLhId<p-Ie8SL]EJ^HJ]Z.'@J81QnV$%QbsqE,MpRWS-Z@rC=PKqqlSJ@
%)Dl`]mpTg'4)<\6R(k.`nP[LnMe$+IG]W*9"=?=,cMSCj'T@=URfR.YIkRMPKJ0JVVW4^iD7!pAr\"`X!kEGV?WMsg`E3$0^!kB*
%Plc?X-3]T(8+.7p)/pM9\dIuJa!Q$I!2D_EF+\@M3=>/KI1$O[qkul1U^8ul2lIjr8:[P!VC7/l8):2BO:J<Nl3GE8$IUY+UZDP>
%McaHcTBofbVh(qM#]G'&WT=@A?o`LmP!"IAG#-qd!pu>SMb4:[_7=^t&nUCXqP0L1$c<6?Z_!3t$6l-t)1kY&PjV0P3#T@:e#)'@
%-]tL2&FZWe')24oa=M%tQ1@J$KiU2":$Cu2h-+S`J`6+c(?B06j&A=TW.JE[B[?oDYeM3IKBbMEksQ2)I%ATg+X-,(VbsORk\`;D
%1n^];<,Om'bG3_K'S@>X:--R15N"jKik2!J:3mM6(2M>$;'bl4M'bftWpM),$Y]Sf"'t'MGM:"X)8rOGRH&]@lRKj-1TpE++%aFU
%G2%5j=`#3YaTaU,2$#0_8,;4rVa%hT49a)#(F<`q#$8cmT],TKetu/"pNM9(!4'9#m[beJq)jXH>m5J^V*kSk5.A*Dfa2nWY&`P6
%ImZs]:`\K,_3>45Co%miIb?:/BEqUELksGb"bH$b;mR"9gb+.NUfWe+k'je'q"\qOagqiLk,$kfH$SOoLhYqsr3(Y+MAjI>:<Z@b
%+t72u$S9`4+9+El7n:WpAbQ8)?5R9-%,lOog*+m(V2u-:45'M*/hC-nmZToe<J3;0N<EYZ1Td;"HkTY0B9)I+o%%k&dY[aQ*iY;;
%Tic\\2FWC`NnA[0I]D&UVj1-5ccf-aj^LSI^t_34#I:KV]N^?.lp(KEO7Aikrb9+Eh;?!Fb<Q%)e,T7YV\t)`7Cn,5j@IfKQ7s>:
%eoodckG4b1YLZe"UY+4d:DBQ=lT!lmYsCk%_=Ta4^!g[G_7?KLF,&?#J)T&O/<Fuhi=-,DF^U`3\L'ViW6%SLqs5916RJaobSUg!
%9-c&;;e92ZGK;)g$r50Ol9Y)?Y*<n`hk/T3ci>+R9_Rl;dj6dCMsbp)`OZEF%XAWO!t4[d6mYI1>[as;])f_\2(/!7YF`f[+CUn3
%Z@IUH:>kU`>T1h@AA/09"Tu4$&)^<`4pJglCn2lN7gD$T_SJ_BR+"UW<JYiQQG!UK7hc7/n;E*p56gAP@i4/Sm!/>hCbFt:9icIi
%mbJG$Tor1a[B:t^N0@g1[CC*,DI/$07B4e3/dLX1l.uYAAf^-t1luhli8)9Y1Ud."c()+`<s:r\mfXtdY.0SOm%+%`)U.:9`P]_W
%GA&XLa213%[G$NO0Tjr#!o1@\[p[roV73[Y/Z2(UqmB@JoIPrD&`/SX-?'N?9(:?D#u#sq>Q`d%](NWIC`,rf[Z\nOnK<Vf,A=-.
%'9Cq,JDnh\\hcW;P>L]^^t0Kc_ec'r0HlP`+m'HV(*[.kVh(q-!:Nt>/k*b^NRZ8b)8TbIfqaOgX]8_bK6H.o(/1T@<[&>T.53o9
%1Nt0\HeJ;,&&FKH35`AseY>9JQnVPR!OMVs,"Dm9OfYSpmoJIT;<d*Rj6-Y6eCLEi,7M;'QNqMOYE*5+6O;/1`)AF7q"ge6!bI4g
%Ttp`VE<R%5RWC!7O(;+_R49X4,sAB34:Ph,7<f%NCME5>c[7$_>)Bt4Z(Hp.[iQc!;k(cD)39XL&U_:5>_Ki?o\/##!U&(A!^+SD
%X<qXg%9mG02(HAtbY346e5SC:5Ds&XKm7rHf"E4jorUX%YBMXO.@$>D%g@JNriM;lR*gqGP*7dYptAY@)u#.[V]Z+2MaP,i4)Uo4
%dpZ1qo;!\>F0bb6Q)NuS5h8ASG7P:N=*QtR%DT>;6@'iHa.C,]Scg[!N#<!pri4f@NBq6NerHjc5n<ElV'G^]qBP2++L[am]Io^%
%XsW-Hcf/%Cn_L%5kUSi\1C3k&:^U/^:3FRk*G]%t>Jhk+C3Kp6GA=)&?D-/qQ>q.hH$/I'a-HiK1"!qm4m/9f=0]AQD8;rVd(JTo
%P'%N!c#`4\VrSLu8!GJhM#=r#5j7X7K!GuZpBNBgUG+iQ*T;):,$*+JCqL8#7II>U3O])Z6VVSG+]SLCGoY7&E!V>VEe#k3dn&%i
%Lpu(S&LmV[D^5\'Uob:T"!BD$VP\IhM`(A70hi5>XbK`j</-E`n-B&VMH:Iqf"MX`SJmY+Pa-WXPQV9cY2e"LGnS0/$LkLK'?eE^
%&78=5PIP[M^VSUMr*Te)_L8t0fh<qmAcESQ;;m@5H`fQ-5O)[G$0u.h/^?@IU+h]:*&\_@0"qj+?,cQuQ%XU1W9pR&,^([*p&Vpb
%q_D`+b%eBr"<ugTkoG%gOQ[gG>O3'KZ*"4Ol2`^QF^L)q)V(/+f:lf*aC=6Fp`t`>*o(%q<_@aI`-kNZieMGaW3Oh5$9=u%rkTRQ
%-7f6g7gse3R^_MY"#?P8M+@tI=$*Ees+A\M%YE4rXs,W2^o^P#F3L<GK!3D-OfYSpDp+iZlhG***>2<hj>Ta2)$iXaio'A`e8S1X
%]1GL`6pA_p.KYiK<rp$:[i&dh/u?*C^i$$#*r9N>pp+h*%2&i]BXb&2,?\(khEAn]=q8kXjQ(Tn+0`[4,/iGf5sbq30]VB`b;p*n
%je@>6nB3`2FP-UV"BHcl#,mFV1?*rAWpAAMSt><GN+m$N&B%<7jZJ]K(#n&3$#,4kbQXE^,rX=J21[tT8'!a4!!OIgTM?p`,i[6K
%fO3to^qPseJ0f%&-NI<ID"ljMSPPeA48(7Fk8s;#S-6.#,.q-@/[t_0>1?[WD,SY:g<qD"#/LVooWnu+<<n:I$$&`r+%mgeQ&_%h
%rdM8%7Rje_CuTTee7aRQ1\<sS"DPf@o0Cl,KQmBCm#MZ*g*'f^Tk&Inm>SjH6ic//<C</c>%ZJ_^:L7tC=QYp=?t5QL%d=BUJ.b&
%:$XW$8&b=\.&hr,*(5m\`j)ZJ]Qj_YM9YtJXU=GDo-ql$9pB-:nYFbA(t+IY*?)g$1uMB>YDl#VU:l%"\PHNXico<\bO31CBN.CA
%gZ02nlQ_u)ZE>CaH]4ru7l6UJTOe.$W1cE^'ZHh,+;@bs+S\\RWX"*((T7DI7TI'oJJbTBFB>$F0(^2--0_3c9IPjg4D7Y('6TZj
%[/B4D8CgdsGIdmg0`1X47'2h/rH=^m]a+!N@Xh+8Uk.l8;BHK?cD<PmB5b@d9U,Z/c4V&7#<hGLl[XW<i6VL[nN_$AM>&6lrc0(%
%\dIu9;?X?($$=u;+_j30lPE=b=5\B>i"=RNQ/+'CJ$UuD3[f!hX3"mf5bRbV*;::9;d5Dh\:7$$`tXB(B5drt17Z:f0&lcuZ`BJK
%4B,a<5%VM6AC##+Lrm(]^*7%ma&Fdi<"4J?IW9.V6HX\mqp?[D%U$$u(pSaRY]aFY!Pr8CT@$#A-<iC$'$IB:I2qPs^=rkYgcru[
%$7'jJB:1.pYdP')5ciIiVK)o`T.+@ndFi84$Dd\uf@=:Cg3pA\?Y^TRKXdgQ`Dk[XEdo)R;_lr*nMVD*cu0"h<tX;m/]_fn@u?bT
%ZmU0BJVqp=L4Z9S9N8j:`Si(?aDOhsrUiIcm<o`2cU#rRa+=:B?mm`q#D]kQ^.Ps-iEqp0nQ@"#.`/eHd9bDkR8R76kccPdJH\Ts
%;5RF;Uq@aC6&gffdZhD5e6^)D.BX2!&s'aoXbR>g8cfm"o@?haM7C^8j"upA(#gg@@b59h25+NV-c86K&FEFR^/gRfqR=g')HhJ,
%MJgU%RUXf^G5uU0FV"UBn*M2&$E!7a9FFli6If#e=C@>lQuO%b\dIrpOKB2gm*?D8KGds.3f=Ze':":4:Xm`YCd*@XZEV,EA'6+1
%*CWLI%.1@Pg`/SfOt=SS9c4AQjcl3CW'W5.ZU!)1J2a2kd%5Y<X<>C4,FaHpQ#qW>+NXXK:sc>O);s+Nm]L1A2+`Z%-j?C'Y3qWo
%GQNH$\d@dK&OR(q?Va7M%,<`(Cj-f>\dIuJHQ=J_q[@o4?5G&I`H23g`R2?E^!d(=?R$dkjCmn\.#B4rgi-dX'+Pn#1-@ntJgi<>
%##R6S_;p$/!'9.M`7gKo&ZB18I87X]=7P+;\,3BL*s^_<HkEr3IQM57fnYpu.[uTUmRAP@<T*\0M;gdabS4C.1H2p;Jb=n[3sMcB
%olXY'RnZRSQgmoX\EoTX]FACW7JPo@+MWR&<+p*Bip^C+Rpj3Jc]MU^8Sg<tU%J#?K"RhNpgmh\f^0uAI927)G^0bNQ_^3m&,Fo:
%gK>.[#ooBp?I%S5<rr<i0nS4Co#IS_pHPnrQ6@#$pYV.I^rFS_'Q5>b9S'#s0j3(:W5`%70NDts:Yf*G4kBQB!7&qhGT6o;"&d(=
%?0"2JUa4n.:*NhB+l4iKR-2L[8&#U^S#8,C)A#HrTSG\1Kpr!7Jj1uu<A^FDdD>6Yh\cOtV?"7NrKq)lC%5]Y;2*ps*aeS_1`XFk
%I36M@M!nq!bal1+e76QZ7(_&jAQ7Ph'*U8K[k9MF6PA,.h+Kb*`.U>"dBARX*7=6s8B13g92\mn;Kq4YX;urPUYeSIY!W'F;qON,
%LO\N#.E'1pi.2AXNb!b`QO].7hJYT(^WEW&jUk1;[*9ZZ4YGh]7"V'\RMml[+Ua\uKCkK5-Jq7on87Uq=Vh,<ps`&<8:2c[2$)#E
%U/Efth2bXIY(YXf)ZHjNc[TfiK)&Ns(l!=D^'_i-B6%t4'8kTb\3D$:8;"cY?Faj]dL8M5/rk&dhp'#):&1"l)*<r6-eqacdl/uR
%X'Nl]b^++s31rF_XL9WZcj%d6PYGV:NpbPQ9k]@Nb+!L\S[$jI25?9Pkh2L0Z7Z4ViNiW6IHM-5dHKFO4pW[XQ$pH@F6H:VEI%u'
%7i#S2lQeoTcar#aX?%3pgQLWLh=[jE+b2q,eVF:HelD#Hnk;L>"G6$ImdWK&FVWl[A(bKqb0Mn+@>gpOSkKtcB/kEFs.p]aD@s0F
%HDa#@&L.:8i`u+`E\iUtG)p"f.G,YQ<P4I#k[r^1*>\R:HP]7,kCK_8#k-Wo0HV/)!/@`$Qrr,hMVEY&![tqA%Q!90-Of5B#/Y>_
%G-sC:ARZrNJ<mGb)EI";cka]N'UR`@7Pfl(TS;_ZmfQ]o&`2%PglJ(bSV_%-b#KlXpYSCF\N^<VLbli+4Sg4(DN#@!#O)hNYSkuE
%_KV3m&+K:(GrjmOP<PbS8I9,ujX.OOo17G4Lj.1M:,oXDUDF:,G;NZ>C&rX5*QIAEHI!8X!6[<oLoM7("dus;1NTHVd;skdJ<0Es
%Q=Zoq/*TWU4g6_OP+iI%3.<uL@pK7_Q\OsNGiT+V\WHH_p:B]b.6/RboZGVD,XJbBif-KMP!^H.^T1BN=A^YC$P"to,MAeTW:b2)
%F[hUCK!nK5AOZq+nF/OJA6f?5j(GS<p+GtYOS1gtm/ZqH`MT(;DCU+h+g9t("*P.hM@s`DU3UmtF>.dONakj3T7D>"f==L5,\oQM
%kP#Y?[t-3<\L9!JS*p2<N-,lmh9&!cd%3>6!k6e:=<QhlcOg&3&ma$3:*kdG\FM];ZnsTdJF@V8_$j9t#?k\gd#oY"p9V[4afg?4
%1?DC:!i"gYn)@Fcn_I/h%8>HQ2G>kP4k/d_3]+M>PbhC*h'hfkH-s)Y5Yg[1lOd/3oA%Q_WpP+DO;7r6L@(-0<tH-BE+TARYXf'8
%Uqj#Y@B?O)DJLDoY'sV$JaK_,2/fK+C\N6<'l+<MH4&57K0FtLl_1`g0Tb^254aJ7Np401:Y172+7'+c>CU<]M4*:OEnYmZaL[8u
%%P#%k`lC5Q:Wm8i`PV`fDBo?p1peO?D4%l59TG4=&:t-caXQjOUuICU$R`n`#H6u*_M36MAL4V0G,D2)58c]a/<Fudi6=W']g'k9
%qjN6b5X%6&^flQMgJAb/F4(eWdR-1O-Sm7Fm\j7kdF^rgi\!^:R2-=M(k;nJP\=>%+i.f9:4\lX;(3C?ZUiYIM"`1?)Ufq<\H't`
%QTM:^>of)Vq\8,75lESaVZN>Y]U0iq_nRZ0=HVeg&8ld\87H6Y9cS8]\sg,@m5;2<$MeiZ$U9JX?,UppQ&Rlspp`sdM?Cj!gc%Ku
%i@O>b%r%o>b^dMUd^Jl"#%8bE^D62%S/+D,7aHSnYJ%49Muo)([A+!7$G6W%M1R<gEZq[dBcu^k_V:[(?<s2'qp>G_=R3rm8]K/;
%,M-;o$+(qb6UK4KZ7QLp^Ig21g9I@qP63kgdAOtA,H+6O.2$LBO;df-d?bg3VOdprXs1NXqs2NCSilcJ=Nc"\4*RGreq#3l^$-,N
%ZENf=2EY5q=YR4=bqY^@:j%";a"(.0b[sQO^`q1m(A&c6_?b[@FlsUU%:ia5Gk2d2&XP_+L-Z"iC6CBGo&d&4Ounr9T[l`hIH_1p
%PLX5-).g#R'N".!Q%#ee,_Li8_W-LlKjYa8ONg&X$U1ZdJZOb0D_!N#?_.ToM/WsKeTRJjhhuDZIFi!O6o2Yk@:+Y(;Ak&qh>.-2
%og3k1[,q\O54\U#FO`5X#hpFV324-V.=So?@pR&trt+p?oViH5bqP@#7u%_5bQI(Y%H/8Fj^`rNI\4u>&`oIm*D!JGol9uVM`l9=
%8PbXnlHXGBRO)DZUIl@c[Pe<!Ii$2;#k5!T4!;Q?N".gT1aZcR5j+'GDA@B>3SD$1S!%R:p;;V:aif&OBee[Y*8?LI&p0&+h&S*_
%^:/f0gCKtR?'*_5JZPmXmfl_f43n)+@if%#:,nYfEYL&)=\4cn4=1C!8VH_ld>jbMO=j*u-KJ.mS;!utC\_`*9R%*2W\V.O;:Nlp
%U8f4<qDOLZ(#mIfg]^`*UhTf7$ur#f04-(8XdpI<nErtR.k#,rjNZa98k:7,MN<B,>SX\Smpr"[8d:Z[3l6a+a)4_E'Vsj46$*dA
%kC"WA.`Ar1)!XIPN1U@In(2F#iq<b!*H:F+PWX\C:eDB)UiXa1JgA@m7_g[,:/*2fOh*PZSFeA).)W-!8JV<)d"d87B,/AO,`m-`
%i=2Bne6TIG:uD>!C3W'?(1>DWbs)KUg.p-=8F1"V4'<6*6*^MqPV?2f!nn*PX;C>H@Zmg,+/Rki`1i@c$a#3D8SQj\,jQqu>Q.W\
%q;_#oV\p?*A>?+W5hP<uqE`.T\0Fu'M23W7aB/LF)`8q8RYXOIZ(%!?/N.u1`#579Up+7W84`$UjO^GNi`K7_hOTl-c$2W#q$UN6
%rUY3?>X/C[Xt<,Sb>:!p:".DNeL&-WQ!^l-6ib6G6hYZ:k-;Rq?9ZeMPRR#]V+Ol,9U_b,kp2F7(#iMo0'kgn!M,-I-jR:qY(o*e
%U#%^f)9DLPJ(7n"X2l=j3\@K^PdB)N?uH2RrW*OmCp;TKTl9YtU(moj<T)Zl/<4ifi9^_T*o\sTiU[Sth48t7s$24A=E,U)+Z9:^
%TE`:"+`o#Z3!h0*3u4@)9q)\(1XlBl!f]RT\'Q4/-:MXN]q:,>j]JLg0\/[;GGDhh@I*p:dV*50EMs``7D4=r48JBXm:2Qp]FFJ>
%]1Mco;]%>q%RrcH`,fm6L1uBddjTs-')\JUJLs4UiR:'C<J7gjoW`nW8*91>AW3],W2t(`=saUmM):r70nDKpMP]uGYe5&iP8.fM
%^he;kN6e.a]Z4>qNFK_'OL2?t!d5A;T/[-f>t&uc*g?:.s4grN5[R-83'bY3_6Ik]-L5]$S5f74^@`tmK>+!Y2#HR.'&d9Vo>"V:
%?R?Yql)*aY)DqT9XiE,6Mt`@8Wt=_V5:S43T<Y"[#tIM46pK9N(0k(@NJnU?C:.VdI@V;'dPa*+TWG&@(Wt[MKS%l/o'Rj-bJoTB
%=3<q1;dVD-rr5O?<JYk91LpGS+!7PTFXh)%/=eU/<R?KrjsUr>q=+QncG\6gWsd".,%SNgU?nA4?2Is2,K<(l4:F(n!%fmK8:XF(
%@qsj)ZE>CaRr=#$!0:J0,72/5PO&cb*iEZG&I@<4q\d)7'"7P'Ud^[/%U"Z8ped]>MNMT>LV2q:>g6UWIXa(`6UOO)Wb\?kcZhI0
%@pR#sQemcadSjEb.I'c(o4IIL_.?OnY$0o-M%.4TAoCbUd1-T_Ou/.@:1V=Q!/:12RR,\#Sq/k8_0LD?bg^p^SE((MFV;g-$M!OE
%VN*n@OTQ8mG0)DRL^>1uHON0[g2Asp1R#Gj5/EtA]o5j=Ht#DG=416.TI?/7m8A)*WIejFFLAT?XK)p$?HJ"dp/A14pgG(k'C$O9
%H52E7ZU&n60<5nCg-8$N70a/9iXquGe+I"j-,u'DU:aFuKi>8c.D(<:6\K?8p91enel@O8-fFt1SuT&Gh'Wq_h>hhALqu>2^NAEE
%!$JV6!PU04^&j,&eD8f":idOf<N>TABP9m(7qCrA"g-n>9'\1J3mQ_e<rq/A`B;1.1M7,K,s,+86WIH.6b9UFBk,giFWQ&BXg7=\
%s%cNod'5Ik>$MMl8l[&DPe[t=,OSi(M:6tlZi3\o/I=1Q'$7]lnTO>ZcM.L`3R4/n$KrjmC.<!Bk>nh]"IT`i2@4&Ui+WZp54*+W
%Gm)Td?GGf"Q'+90M+lEE'U<B6)kbg>hKg-_\dIuq0m$OU4jourW+;aC)rU-h%Me1UK*$JJB`5fK6-W%Rcm2U[>b.2["u*&MpMr3D
%\*kCa21$Jbm?tf)8W2#O5)EfUKm<Jmm-:Q4=1U=kF5tN\EXbRCHuh8Bf9@U\BO8n4(e@E&q+844/dTLbPkK:;(V1tK^m,Xi*CaT@
%!-mklTj'cnfq:e&j&f@`hK=0hEhAsjrOD8siSYN8#Aj76^*d59_&Wj_*&4tqEtJq6I6@8\`b_^]+^+[mok9tK,HKe[UNK5EY[N54
%0gNZQ9uS8pBgr:lB7RIjQPno;S?DBeVP([)0Jtj]V!8s*!''_E<\-rpm<G%u$a/Im$@PLf3#\)/\h^\<F3Yt4=!?G7bWBYJ:IWVs
%]g_''P[k/nL-iPR^Iko]02$>N7Y$%q6FNk&nOf_+*\&2*5?)Y.C-,XpMHX*dWZ7[>peBTJZ7Z3k*Eh_<pu<!A)BgBN<WE;qLWh6V
%SWqY^!!'2.49YX[;%"7S+#=+Pdj,'OZS*Ab/YHq5l5C#"AAQV8r2;!2=ms(p#I:KV]Qjj/\+Z#7J2N9M7\K8`Kf8tn7rqBk&O<?]
%r=+Dl]2<22c@`!$SPB5U&`j@Dp`"R9:3E\oUR3;0ZIpMb8<`8$37`A"\$^).S+9J]Hbn4d=nJrHT_IJW`!83=`;I(OOcYuG(V:T`
%@6L:u/VH-\#%,&sp'1d'KqKp++1sIq-N,D_nkUK5=!?E+C[<pf=5Y=l;h^OH=rC>#>K=NtBS$49pmq!Ac%4h)B<tQn2h>u@!8Pg9
%[V5sZ%30OIej)rCWd4]LQFZ&B1:J_"5)EfUKm7g]9up-q@jltLACg_cg.QCa7^P467c'4YOtTmFK1(<^"Yu!PhkG$$L$muoGoWoG
%JKDHNUN@\pG(fO^FpbMAh+u)#ENH2@Dr*oV0m7U.e<;Hd7A)OuF]BCl#qSQqd0=6:?(S9eP+[hE`n.HZPrMc'S.=2<EO7;GN-c#u
%"5'(`XN=jE9OtEYKN?t8ZE>CagX@W###B)^AnV[@lC?p=7s]TDc)?ji!A#eg+(c.KCr<cn83eW?7oL&nTJ3t]-6G;`"8P5:QP0_F
%)Y=BI7H@_6/<FuhiQZGfBTL]):Uj/hlK!D];>-)"OqD?R@ZgL;<C0*#_<e:=VMZ.IjPs&a8R@\%g3ptn4-TYKof)8i\D+*9g*-$#
%"bLo2JXlqLXs1N,0RFVXO3mbPTi'>lblI)N0M'\33Vm&\7HMTYi\X_UMpXoq]8m8d6Y*Z(B<nI29`]aSEF9<+=#5:j7cRDua-0'F
%<JYjepthao"1\%X+_"m@3*j*Q_U6QX'7(/ZBPuWer4L`p$3WPb\%2s'5L$D*ftUl%I[)u20@aM=!o:lEVdZ[-q!Oa55,2k@-5;GC
%Ye`.Ga%j!2riVnk+\f[n=%aNH@C?"YBg8G=f<+p?fu[;X,]jiXDVh:dC8A2*/3bai2a3(.>m5KM:=d*b5-@)JBj,WC$ZLu/pB;.P
%j,EDB_.G5<!bT1a9sYp.kHdhK'UissA=sRu0S22tl/C+-?$Am5KBSHfEZW<5MXY5f&GJuqga3,G%9W)gVi;N.*sh>/`W;CMPd_Ol
%c+AhtFL2%C>nqDupW2s!?>!AWFB?ef;qke/[OBk[S4mSoI3@i*_@MV'p-S`un/X@hhgti1_BCUa<k@@]43!ct*R:Y#Psbs&)#?$!
%J\]oII/SC=g!.qt0t[ljmlL0@9\YdB]Sg6i#P[6`!YF'LPb(TRT';mqfB2"8nqH<g,/A"Lh-D"g;VBs\IW*8hR5M:diBFir1?!lB
%,ln#%7Oh]+\"&q:#>iCl`Arog?%mO8YfbUPkYo*D&@E*UVndVY\AT2B*E+bDHD]73oV'd`m&OSD-OMsEii66=.U?l'cH2<UF;9@q
%Z6ibR)-$R=,AYd-pQ;PX&FWB=;-S>L`:h7A1(E7BnjLIpa!G=:`3KORfk#K79XS9o&BY+"'gY82;NQdKR%W#MGQZo]$'u!_VOk(N
%q21[j@.Y_3mn"5Z4Li!,=E\iba=-*WVQ;U&Pjf.+9&f@5[hf[(VE<i!QMVm(ACQEkla'7R,5"=kI=L3;"bqtG=ZN_m<R$h:WZju4
%(J7R:-\8A"#k)R%OCNU:8hV+Nh?ei@b4Ln+&C@,+!48&BDqG7a.djQ@g<eB%KQgVE'Lj"E%1A#O_2ogB1ES"u$#MqY--5rU,`[!^
%i/aKTAm5)PqJ`PheWQ:'4JQJhdjQoVcXt=OG#-[Va;f']+`K]gM]g8G#JePNb9*4A'J3H`)NY6FD9B#;0lqO2PdbY6WrR'Zf)b9q
%8&Qp7l`;<*>"\cD?J,UT,.?6.>o4"Xl]6UE2=EM\41?ch&S,nl.n6`NUaT#m@FK)3ar+)UjnrG[r0'\&<J\-<9tc2bTJ<(s1f:H9
%eKRuJp*jYi:dh22V0NFT^<+#.?a%SSir(#q4//EIV7BIt+m@$JKH#k\06*&A$(Sf?P=b*fZ44t"Gp)E&_E/fXh&Go`l-s+dj3L/U
%?o&ooeRJ_QQLpY_HjW`gi:q)V`%^3/abHk,9BN3nf/OIu_<r"#&$1aAC=i[c./Ub>,r]i[agqiLN`k!)6i-+uI*<U-%Z7\q^(Yq3
%of6"EACr?P.L?#Wb'S-9QYnH2s7>[ts&HYqBLS_+H4C[_,Aq<?&WmQLp<Tq#Y\prf0pFDa=W@FS+CBaP!_tl)'bt;kYF3bV?,>.S
%Rk6^%Yu)]Vm.0HdFjLbKi)I8HK0E#B(BT'AmQ>N1GfAE&el@A^lY\B+q$:?m.qD`.7MKBd?q1G7ie'FS:^LnInHkmk;j(Js3ZfNn
%j/ieJWXiqpI#uQ_.%t+BIZklY'WuV)c(.;/Y!TdJNr-)2*+o$nVXFPTR=rI$J:*IQ`p4tsRf!0/APikLSBTfG=+`u`\4Jbso`S>;
%[^IV6*b:O$Yn-("^^&%kGjb`;<tX<%dlUFj+8;*cB:UnR-\X5U%.J4/7cR!@GcG+b"@RSjU#BP(+UJX_6(>GVq^28<p;7-c`oq:>
%k[oC+<20nX7ZAfnT9Dgs<JYjsm!^V9;d#*aOm?bs-HLRW5:4/XQ4S1jLRRc$nFk$S+VA]IBI3T+e1hW)k]d)t3Ct_%ml]K@Qk!8[
%%eYq=;pOB)<rr<i+]d5fQMt,O*XfS6/>o'+3&)%f80tft%kKY/Po5k&!-M\XLU`2p)SB7jTi)AtFZqus*MTUBGoeO^ajWf3<J\+n
%$J5i[\JSc)PdI1dOt]"<L'*'Z;ZXhijg;I=@%\fCZEoF_4qMkj"J/>.nbu8eY)2M(];L*KaVe_,KhN6&oIQ/J(#mJ"]`WM8WVd([
%Vt[Og@np8s-3XTS#n"9$[5OpKiF*aD@IpK'QK8qs_ceR5h#e)t23)^.m()9GpptU<08K8i5I`5u)Ho#EeSiJ"\0Ufm.d=`#PdE@c
%D1<#e4[JYCi.OE5]%5SU&F)4O*&L3\GK23EBT;32lA1Y>.5qk7qhQ,1'$7]ln]).Q>5BB94>=VRoK3uO(XpCb@qCHHCI1js*f3EJ
%B%InCWAN"5d5Ft$8&)*7atTM)-6352I*IKV_Q+oncf>M_[QKCV>m5JN3ODSc#LYQUi49%$;t'LPO#\8L#l9'4258lWoHdYH:9CWc
%R!L0mhoAl9L[u4k.%tdqHd0RbKD2;i@N:b[(<<unn1KD(ZTM\.q>"_42U0qq=C#7(e1f6e_H);13;)Pjk8+sBF("OA$?fY,jMD<h
%^;;^M*1XF@]0AaT/d/Qf6!\:<E>lm/$Lm1sXF%k/+!7n\'!3j&@cS72\2_ZkBXRF\@I5R&=X:ck%4Y)_.n[`/Fq<4:7;PH'T_Jd"
%NU0t>+Pet0HF!/c(N6ub/H+ZmN-,lmSLDNbbTH;_ILS4#]sRSos.Ip'`YNo(Ea?J'AU<dTGKjP4;\OUFaNs<,$^(tWTj4\(?c"kU
%hO>\ZTrn/pA,Z?2G?]3+UH^FTrdlj3A^-Js2:0O;p0Ph_<`08:C8jW)_!l!DMlDM96k\2FH^(96i!49DTr+Xp-M^G\omn%tr1SlD
%2NW%riU(-V4/mKTr"pg6@75hD@3/SdfN*l_]I)be4PAZ4*i.i(hrAHA.=giL\kI^Q*KMqB1*XnllG=95;WINg"U@/L@pK7_=0'C;
%JEMJ+k]Q05_?`:8-bBCXfJNX>K[dZe<2<&oFQXCF2%<Eu5IS-0p07LR\iF)]Jo`cX,qtm+D&W<4,kgFn)!`ZcgU%"0\.:%V6O[ne
%$UWI=@ufX;(/DHQf]3(qN`'YokTDqD0BY]REKou6<Nd_7raE=8.42ulRh??-O,5n[$Y3NGGago!V=B)32j>,JXBcqT3F9CY,<PSt
%6#Y;%5O%TiWu.]?^(f6saF:N;Gn1$u/5$&N-"Igogj/#RIoC4NZUiYILd)*;7nPp-F`58\Dl2X,o>*HBit?9b&RLiVR_No/`L&ak
%%>UZI)CerQ8EKI44p<Q<;`^/7Ori:<d#`T&[\+2.)Kuh7\dIr0[4qIV7ikc*J8eZ"NU1SZ"7ZMMWsP<u&gfeA-@F/mmU+L!9Kp.+
%Wif_!9"U,7d6aeS[/*maB38F4U4)\[Ncc)ph-?`C1B5Hk]TCFhF:/qSjJP+n#"C;#J%2_h%)K:q8?+G=PF70=@8hfQ`+P])LQ2I/
%2gi9V`9Es_P$T>Z</>FInAF!Gel@A^3G/dQ5F&HCBeHs5Z9CWOcgpdg7l1+gRlZ>?@b+cd%JcaZ-_UjnX1c(f["H:*1lm%*4&Ad@
%$/jJDC!<?%ZMAMVaL[8u?FFXX7hj:`U<S;>;*4Q'E;j9QLZV(3!Z8f,gtCWo1P-,e\iXER6_PM(F?0%PoFK/#OPj<qPZK];9tD<c
%D_:4;5h8qgGN7Kh2"!jUj$3M?dsUu'^OQ'GJ%kp>s7gO,GQ5q&YQ+D?rq^"$n^mg<g[DoTZ7l.?5Q:MGhu;*n^](_BrnHm+s7DYm
%rVF9YHhm?<J&T1ng],nJ^&7!dhu<=6s7Q-D?N0Y*s7QEM$N?g\5PW^"ro$*>]:XTLJ,OoTj8~>
%AI9_PrivateDataEnd
